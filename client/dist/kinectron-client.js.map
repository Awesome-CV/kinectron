{"version":3,"sources":["../node_modules/js-binarypack/lib/bufferbuilder.js","../node_modules/js-binarypack/lib/binarypack.js","adapter.ts","util.ts","../node_modules/eventemitter3/index.js","logger.ts","enums.ts","socket.ts","../node_modules/reliable/lib/util.js","../node_modules/reliable/lib/reliable.js","negotiator.ts","baseconnection.ts","mediaconnection.ts","dataconnection.ts","api.ts","peer.ts","exports.ts","kinectron-client.js","../node_modules/parcel/src/builtins/hmr-runtime.js"],"names":["console","log","Kinectron","arg1","arg2","img","feed","body","jointName","rgbCallback","colorCallback","depthCallback","rawDepthCallback","infraredCallback","leInfraredCallback","bodiesCallback","trackedBodiesCallback","trackedJointCallback","keyCallback","rgbdCallback","fhCallback","multiFrameCallback","SPINEBASE","SPINEMID","NECK","HEAD","SHOULDERLEFT","ELBOWLEFT","WRISTLEFT","HANDLEFT","SHOULDERRIGHT","ELBOWRIGHT","WRISTRIGHT","HANDRIGHT","HIPLEFT","KNEELEFT","ANKLELEFT","FOOTLEFT","HIPRIGHT","KNEERIGHT","ANKLERIGHT","FOOTRIGHT","SPINESHOULDER","HANDTIPLEFT","THUMBLEFT","HANDTIPRIGHT","THUMBRIGHT","WINDOWSCOLORWIDTH","WINDOWSCOLORHEIGHT","WINDOWSDEPTHWIDTH","WINDOWSDEPTHHEIGHT","WINDOWSRAWWIDTH","WINDOWSRAWHEIGHT","AZURECOLORWIDTH","AZURECOLORHEIGHT","AZUREDEPTHWIDTH","AZUREDEPTHHEIGHT","AZURERAWWIDTH","AZURERAWHEIGHT","colorwidth","colorheight","depthwidth","depthheight","rawdepthwidth","rawdepthheight","whichKinect","busy","multiFrame","currentFrames","ready","holdInitFeed","peer","connection","peerNet","host","port","path","peerId","myDiv","doRecord","recordStartTime","bodyChunks","rawDepthChunks","mediaRecorders","timer","timeCounter","sendCounter","peerid","network","Peer","on","id","document","createElement","style","visibility","position","bottom","appendChild","hiddenCanvas","hiddenContext","getContext","hiddenImage","_initHiddenCanvas","width","height","fillRect","addEventListener","e","drawImage","makeConnection","connect","data","dataReceived","event","Date","now","kinect","warn","Object","entries","length","constructor","_setKinectOnServer","_setKinect","send","error","src","imagedata","onload","_chooseCallback","name","_drawImageToCanvas","bind","record_startime","record_timestamp","push","joints","joint","trackingId","processedData","_processRawDepth","recordedData","rawDepth","processedRawDepthData","color","newImg","Image","depth","recordedData2","clrImg","depthImg","recordedData3","setKinectType","kinectType","startRGB","callback","_setFeed","startColor","startDepth","startRawDepth","startInfrared","startLEInfrared","startBodies","startTrackedBodies","startTrackedJoint","startMultiFrame","frames","_sendToPeer","startKey","startRGBD","stopAll","setRGBCallback","setColorCallback","setDepthCallback","setRawDepthCallback","setInfraredCallback","setLeInfraredCallback","setBodiesCallback","setTrackedBodiesCallback","setKeyCallback","setRGBDCallback","setFhCallback","setMultiFrameCallback","getJoints","jointCallback","skeleton","i","jointType","getHands","handCallback","leftHand","rightHand","leftHandState","rightHandState","_getHandState","hands","startRecord","_record","stopRecord","startServerRecord","stopServerRecord","_setCanvasDimensions","dataToSend","evt","frame","handState","imageData","depthBuffer","getImageData","canvas","framesToRecord","j","_createMediaRecorder","k","stop","splice","tempContext","indexOf","clearRect","newMediaRecorder","newHiddenCanvas","setAttribute","newHiddenContext","MediaRecorder","captureStream","mediaChunks","onstop","blobJson","Blob","JSON","stringify","type","jsonUrl","URL","createObjectURL","a2","href","download","click","window","revokeObjectURL","blobJsonRd","jsonRdUrl","a3","blobVideo","url","a","ondataavailable","start","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","parse","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","message","stack","overlay","createErrorOverlay","getElementById","remove","stackTrace","innerText","innerHTML","getParents","modules","parents","d","dep","Array","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,EAAA,GACA,EAAA,eAAA,WACA,IAEA,OADA,IAAA,KAAA,KACA,EACA,MAAA,GACA,OAAA,GALA,GASA,EAAA,oBAAA,EAAA,gBAAA,WACA,IACA,OAAA,IAAA,IAAA,KAAA,CAAA,IAAA,WAAA,MAAA,KACA,MAAA,GACA,OAAA,GAJA,GAQA,OAAA,QAAA,eAAA,EACA,IAAA,EAAA,OAAA,QAAA,YAMA,SAAA,IACA,KAAA,QAAA,GACA,KAAA,OAAA,GAPA,oBAAA,SACA,EAAA,OAAA,QAAA,YAAA,OAAA,mBACA,OAAA,gBAAA,OAAA,eAAA,OAAA,aAQA,EAAA,UAAA,OAAA,SAAA,GACA,iBAAA,EACA,KAAA,QAAA,KAAA,IAEA,KAAA,QACA,KAAA,OAAA,KAAA,KAIA,EAAA,UAAA,MAAA,WACA,GAAA,KAAA,QAAA,OAAA,EAAA,CACA,IAAA,EAAA,IAAA,WAAA,KAAA,SACA,EAAA,qBACA,EAAA,EAAA,QAEA,KAAA,OAAA,KAAA,GACA,KAAA,QAAA,KAIA,EAAA,UAAA,UAAA,WAEA,GADA,KAAA,QACA,EAAA,eAAA,CAEA,IADA,IAAA,EAAA,IAAA,EACA,EAAA,EAAA,EAAA,KAAA,OAAA,OAAA,EAAA,EAAA,IACA,EAAA,OAAA,KAAA,OAAA,IAEA,OAAA,EAAA,UAEA,OAAA,IAAA,KAAA,KAAA,SAIA,OAAA,QAAA,cAAA;;AC/DA,IAAA,EAAA,QAAA,mBAAA,cACA,EAAA,QAAA,mBAAA,eAEA,EAAA,CACA,OAAA,SAAA,GAEA,OADA,IAAA,EAAA,GACA,UAEA,KAAA,SAAA,GACA,IAAA,EAAA,IAAA,EAGA,OAFA,EAAA,KAAA,GACA,EAAA,cAOA,SAAA,EAAA,GAEA,KAAA,MAAA,EACA,KAAA,WAAA,EACA,KAAA,SAAA,IAAA,WAAA,KAAA,YACA,KAAA,OAAA,KAAA,WAAA,WAwOA,SAAA,IACA,KAAA,cAAA,IAAA,EAqPA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,WAAA,GAEA,OAAA,GAAA,KAAA,KACA,GAAA,MAAA,MACA,GAAA,QAAA,OACA,GAAA,SAAA,QACA,SAGA,SAAA,EAAA,GACA,OAAA,EAAA,OAAA,IAEA,IAAA,KAAA,CAAA,IAAA,KAEA,EAAA,QAAA,oBAAA,GAAA,OApfA,OAAA,QAAA,EAUA,EAAA,UAAA,OAAA,WACA,IAQA,EARA,EAAA,KAAA,eACA,GAAA,EAAA,IAEA,OADA,EAEA,IAAA,IAAA,GAAA,GAEA,OADA,IAAA,GAAA,GAIA,IAAA,EAAA,IAAA,IAAA,GACA,OAAA,KAAA,WAAA,GACA,IAAA,EAAA,IAAA,IAAA,GACA,OAAA,KAAA,cAAA,GACA,IAAA,EAAA,IAAA,IAAA,GACA,OAAA,KAAA,aAAA,GACA,IAAA,EAAA,IAAA,IAAA,GACA,OAAA,KAAA,WAAA,GAEA,OAAA,GACA,KAAA,IACA,OAAA,KACA,KAAA,IACA,OACA,KAAA,IACA,OAAA,EACA,KAAA,IACA,OAAA,EACA,KAAA,IACA,OAAA,KAAA,eACA,KAAA,IACA,OAAA,KAAA,gBACA,KAAA,IACA,OAAA,KAAA,eACA,KAAA,IACA,OAAA,KAAA,gBACA,KAAA,IACA,OAAA,KAAA,gBACA,KAAA,IACA,OAAA,KAAA,gBACA,KAAA,IACA,OAAA,KAAA,cACA,KAAA,IACA,OAAA,KAAA,eACA,KAAA,IACA,OAAA,KAAA,eACA,KAAA,IACA,OAAA,KAAA,eACA,KAAA,IAEA,KAAA,IAEA,KAAA,IAEA,KAAA,IACA,OACA,KAAA,IAEA,OADA,EAAA,KAAA,gBACA,KAAA,cAAA,GACA,KAAA,IAEA,OADA,EAAA,KAAA,gBACA,KAAA,cAAA,GACA,KAAA,IAEA,OADA,EAAA,KAAA,gBACA,KAAA,WAAA,GACA,KAAA,IAEA,OADA,EAAA,KAAA,gBACA,KAAA,WAAA,GACA,KAAA,IAEA,OADA,EAAA,KAAA,gBACA,KAAA,aAAA,GACA,KAAA,IAEA,OADA,EAAA,KAAA,gBACA,KAAA,aAAA,GACA,KAAA,IAEA,OADA,EAAA,KAAA,gBACA,KAAA,WAAA,GACA,KAAA,IAEA,OADA,EAAA,KAAA,gBACA,KAAA,WAAA,KAIA,EAAA,UAAA,aAAA,WACA,IAAA,EAAA,IAAA,KAAA,SAAA,KAAA,OAEA,OADA,KAAA,QACA,GAGA,EAAA,UAAA,cAAA,WACA,IAAA,EAAA,KAAA,KAAA,GACA,EACA,KAAA,IAAA,EAAA,KAAA,IAAA,EAAA,IAEA,OADA,KAAA,OAAA,EACA,GAGA,EAAA,UAAA,cAAA,WACA,IAAA,EAAA,KAAA,KAAA,GACA,EAGA,KADA,KADA,IAAA,EAAA,GACA,EAAA,IACA,EAAA,IACA,EAAA,GAEA,OADA,KAAA,OAAA,EACA,GAGA,EAAA,UAAA,cAAA,WACA,IAAA,EAAA,KAAA,KAAA,GACA,EAOA,KADA,KADA,KADA,KADA,KADA,KADA,IAAA,EAAA,GACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,GAEA,OADA,KAAA,OAAA,EACA,GAIA,EAAA,UAAA,YAAA,WACA,IAAA,EAAA,KAAA,eACA,OAAA,EAAA,IAAA,EAAA,EAAA,KAGA,EAAA,UAAA,aAAA,WACA,IAAA,EAAA,KAAA,gBACA,OAAA,EAAA,MAAA,EAAA,EAAA,OAGA,EAAA,UAAA,aAAA,WACA,IAAA,EAAA,KAAA,gBACA,OAAA,EAAA,KAAA,IAAA,EAAA,IAAA,EACA,EAAA,KAAA,IAAA,EAAA,KAGA,EAAA,UAAA,aAAA,WACA,IAAA,EAAA,KAAA,gBACA,OAAA,EAAA,KAAA,IAAA,EAAA,IAAA,EACA,EAAA,KAAA,IAAA,EAAA,KAGA,EAAA,UAAA,WAAA,SAAA,GACA,GAAA,KAAA,OAAA,KAAA,MAAA,EACA,MAAA,IAAA,MAAA,4CACA,KAAA,MAAA,IAAA,EAAA,IAAA,KAAA,QAEA,IAAA,EAAA,KAAA,WAAA,MAAA,KAAA,MAAA,KAAA,MAAA,GAKA,OAJA,KAAA,OAAA,EAIA,GAGA,EAAA,UAAA,cAAA,SAAA,GAGA,IAFA,IACA,EAAA,EADA,EAAA,KAAA,KAAA,GACA,EAAA,EAAA,EAAA,GACA,EAAA,IACA,EAAA,EAAA,IACA,KACA,GAAA,OAAA,aAAA,GACA,MACA,IAAA,GAAA,IACA,GAAA,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,GACA,GAAA,OAAA,aAAA,GACA,GAAA,IAEA,GAAA,GAAA,IAAA,IAAA,GAAA,EAAA,EAAA,KAAA,EACA,GAAA,EAAA,EAAA,GACA,GAAA,OAAA,aAAA,GACA,GAAA,GAIA,OADA,KAAA,OAAA,EACA,GAGA,EAAA,UAAA,aAAA,SAAA,GAEA,IADA,IAAA,EAAA,IAAA,MAAA,GACA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,GAAA,KAAA,SAEA,OAAA,GAGA,EAAA,UAAA,WAAA,SAAA,GAEA,IADA,IAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,IAAA,CACA,IAAA,EAAA,KAAA,SACA,EAAA,KAAA,SACA,EAAA,GAAA,EAEA,OAAA,GAGA,EAAA,UAAA,aAAA,WACA,IAAA,EAAA,KAAA,gBAEA,GAAA,GAAA,GAAA,KAAA,IAEA,OAAA,GAHA,GAAA,GAGA,GAAA,IADA,QAAA,EAAA,SAEA,KAAA,IAAA,EAAA,EAAA,KAGA,EAAA,UAAA,cAAA,WACA,IAAA,EAAA,KAAA,gBACA,EAAA,KAAA,gBAEA,GAAA,GAAA,GAAA,MAAA,KAIA,OAAA,GALA,GAAA,GAKA,GAAA,KAHA,QAAA,EAAA,SACA,KAAA,IAAA,EAAA,EAAA,IACA,EAAA,KAAA,IAAA,EAAA,EAAA,MAIA,EAAA,UAAA,KAAA,SAAA,GACA,IAAA,EAAA,KAAA,MACA,GAAA,EAAA,GAAA,KAAA,OACA,OAAA,KAAA,SAAA,SAAA,EAAA,EAAA,GAEA,MAAA,IAAA,MAAA,+CAQA,EAAA,UAAA,UAAA,WACA,OAAA,KAAA,cAAA,aAGA,EAAA,UAAA,KAAA,SAAA,GACA,IAAA,SAAA,EACA,GAAA,UAAA,EACA,KAAA,YAAA,QACA,GAAA,UAAA,EACA,KAAA,MAAA,KAAA,EACA,KAAA,aAAA,GAEA,KAAA,YAAA,QAEA,GAAA,WAAA,GACA,IAAA,EACA,KAAA,cAAA,OAAA,MACA,IAAA,GACA,KAAA,cAAA,OAAA,UAEA,GAAA,aAAA,EACA,KAAA,cAAA,OAAA,SACA,CAAA,GAAA,UAAA,EAgCA,MAAA,IAAA,MAAA,SAAA,EAAA,uBA/BA,GAAA,OAAA,EACA,KAAA,cAAA,OAAA,SACA,CACA,IAAA,EAAA,EAAA,YACA,GAAA,GAAA,MACA,KAAA,WAAA,QACA,GAAA,GAAA,MAAA,GAAA,KACA,KAAA,SAAA,QACA,GAAA,GAAA,YACA,EAAA,mBACA,KAAA,SAAA,IAAA,WAAA,IAEA,KAAA,SAAA,QAEA,GAAA,sBAAA,EACA,EAAA,mBACA,KAAA,SAAA,IAAA,WAAA,EAAA,SAEA,KAAA,SAAA,EAAA,aAEA,GAAA,GAAA,OACA,KAAA,YAAA,QACA,GAAA,GAAA,KACA,KAAA,YAAA,EAAA,gBACA,CAAA,GAAA,mBAAA,EAAA,aAGA,MAAA,IAAA,MAAA,SAAA,EAAA,WAAA,uBAFA,KAAA,cAAA,OAAA,EAAA,kBAQA,KAAA,cAAA,SAIA,EAAA,UAAA,SAAA,SAAA,GACA,IAAA,EAAA,EAAA,QAAA,EAAA,YAAA,EAAA,KACA,GAAA,GAAA,GACA,KAAA,WAAA,IAAA,QACA,GAAA,GAAA,MACA,KAAA,cAAA,OAAA,KACA,KAAA,YAAA,OACA,CAAA,KAAA,GAAA,YAIA,MAAA,IAAA,MAAA,kBAHA,KAAA,cAAA,OAAA,KACA,KAAA,YAAA,GAIA,KAAA,cAAA,OAAA,IAGA,EAAA,UAAA,YAAA,SAAA,GACA,IAAA,EAAA,EAAA,GAEA,GAAA,GAAA,GACA,KAAA,WAAA,IAAA,QACA,GAAA,GAAA,MACA,KAAA,cAAA,OAAA,KACA,KAAA,YAAA,OACA,CAAA,KAAA,GAAA,YAIA,MAAA,IAAA,MAAA,kBAHA,KAAA,cAAA,OAAA,KACA,KAAA,YAAA,GAIA,KAAA,cAAA,OAAA,IAGA,EAAA,UAAA,WAAA,SAAA,GACA,IAAA,EAAA,EAAA,OACA,GAAA,GAAA,GACA,KAAA,WAAA,IAAA,QACA,GAAA,GAAA,MACA,KAAA,cAAA,OAAA,KACA,KAAA,YAAA,OACA,CAAA,KAAA,GAAA,YAIA,MAAA,IAAA,MAAA,kBAHA,KAAA,cAAA,OAAA,KACA,KAAA,YAAA,GAIA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IACA,KAAA,KAAA,EAAA,KAIA,EAAA,UAAA,aAAA,SAAA,GACA,IAAA,IAAA,GAAA,GAAA,IACA,KAAA,cAAA,OAAA,IAAA,QACA,GAAA,GAAA,GAAA,GAAA,IACA,KAAA,cAAA,OAAA,KACA,KAAA,WAAA,QACA,IAAA,KAAA,GAAA,GAAA,IACA,KAAA,cAAA,OAAA,KACA,KAAA,UAAA,QACA,GAAA,GAAA,GAAA,GAAA,MACA,KAAA,cAAA,OAAA,KACA,KAAA,YAAA,QACA,IAAA,OAAA,GAAA,GAAA,MACA,KAAA,cAAA,OAAA,KACA,KAAA,WAAA,QACA,GAAA,GAAA,GAAA,GAAA,WACA,KAAA,cAAA,OAAA,KACA,KAAA,YAAA,QACA,IAAA,YAAA,GAAA,GAAA,WACA,KAAA,cAAA,OAAA,KACA,KAAA,WAAA,QACA,IAAA,oBAAA,GAAA,GAAA,mBACA,KAAA,cAAA,OAAA,KACA,KAAA,WAAA,OACA,CAAA,KAAA,GAAA,GAAA,GAAA,qBAIA,MAAA,IAAA,MAAA,mBAHA,KAAA,cAAA,OAAA,KACA,KAAA,YAAA,KAMA,EAAA,UAAA,YAAA,SAAA,GACA,IAAA,EAAA,EACA,EAAA,IACA,EAAA,EACA,GAAA,GAEA,IAAA,EAAA,KAAA,MAAA,KAAA,IAAA,GAAA,KAAA,KACA,EAAA,EAAA,KAAA,IAAA,EAAA,GAAA,EACA,EAAA,KAAA,MAAA,EAAA,KAAA,IAAA,EAAA,KACA,EAAA,KAAA,IAAA,EAAA,IACA,EAAA,GAAA,GAAA,EAAA,MAAA,GACA,EAAA,EAAA,QACA,EAAA,EAAA,EACA,KAAA,cAAA,OAAA,KACA,KAAA,WAAA,GACA,KAAA,WAAA,IAGA,EAAA,UAAA,YAAA,SAAA,GACA,IACA,EADA,OAAA,KAAA,GACA,OACA,GAAA,GAAA,GACA,KAAA,WAAA,IAAA,QACA,GAAA,GAAA,MACA,KAAA,cAAA,OAAA,KACA,KAAA,YAAA,OACA,CAAA,KAAA,GAAA,YAIA,MAAA,IAAA,MAAA,kBAHA,KAAA,cAAA,OAAA,KACA,KAAA,YAAA,GAIA,IAAA,IAAA,KAAA,EACA,EAAA,eAAA,KACA,KAAA,KAAA,GACA,KAAA,KAAA,EAAA,MAKA,EAAA,UAAA,WAAA,SAAA,GACA,KAAA,cAAA,OAAA,IAGA,EAAA,UAAA,YAAA,SAAA,GACA,KAAA,cAAA,OAAA,GAAA,GACA,KAAA,cAAA,OAAA,IAAA,IAGA,EAAA,UAAA,YAAA,SAAA,GACA,IAAA,EAAA,WAAA,EACA,KAAA,cAAA,QAAA,WAAA,KAAA,IACA,KAAA,cAAA,QAAA,SAAA,KAAA,IACA,KAAA,cAAA,QAAA,MAAA,KAAA,GACA,KAAA,cAAA,OAAA,IAAA,IAGA,EAAA,UAAA,YAAA,SAAA,GACA,IAAA,EAAA,EAAA,KAAA,IAAA,EAAA,IACA,EAAA,EAAA,KAAA,IAAA,EAAA,IACA,KAAA,cAAA,QAAA,WAAA,KAAA,IACA,KAAA,cAAA,QAAA,SAAA,KAAA,IACA,KAAA,cAAA,QAAA,MAAA,KAAA,GACA,KAAA,cAAA,OAAA,IAAA,GACA,KAAA,cAAA,QAAA,WAAA,KAAA,IACA,KAAA,cAAA,QAAA,SAAA,KAAA,IACA,KAAA,cAAA,QAAA,MAAA,KAAA,GACA,KAAA,cAAA,OAAA,IAAA,IAGA,EAAA,UAAA,UAAA,SAAA,GACA,KAAA,cAAA,OAAA,IAAA,IAGA,EAAA,UAAA,WAAA,SAAA,GACA,KAAA,cAAA,QAAA,MAAA,IAAA,GACA,KAAA,cAAA,OAAA,IAAA,IAGA,EAAA,UAAA,WAAA,SAAA,GACA,KAAA,cAAA,OAAA,IAAA,GAAA,KACA,KAAA,cAAA,QAAA,SAAA,KAAA,IACA,KAAA,cAAA,QAAA,MAAA,KAAA,GACA,KAAA,cAAA,OAAA,IAAA,IAGA,EAAA,UAAA,WAAA,SAAA,GACA,IAAA,EAAA,KAAA,MAAA,EAAA,KAAA,IAAA,EAAA,KACA,EAAA,EAAA,KAAA,IAAA,EAAA,IACA,KAAA,cAAA,QAAA,WAAA,KAAA,IACA,KAAA,cAAA,QAAA,SAAA,KAAA,IACA,KAAA,cAAA,QAAA,MAAA,KAAA,GACA,KAAA,cAAA,OAAA,IAAA,GACA,KAAA,cAAA,QAAA,WAAA,KAAA,IACA,KAAA,cAAA,QAAA,SAAA,KAAA,IACA,KAAA,cAAA,QAAA,MAAA,KAAA,GACA,KAAA,cAAA,OAAA,IAAA;;ACtea,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAVA,QAAA,sBAEX,OAAO,uBAAyB,OAAO,yBAC5B,QAAA,kBAEX,OAAO,mBAEP,OAAO,sBAEP,OAAO,wBACI,QAAA,gBAEX,OAAO,iBAAmB,OAAO;;;ACNtB,IAAA,EAAA,UAAA,GAAA,EAAA,MAAA,KAAA,cAAA,SAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,IAAA,IAAA,KAAA,EAAA,OAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,EAAA,QAAA,EAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IARb,IAAA,EAAA,EAAA,QAAA,kBACA,EAAA,QAAA,aAEM,EAAiB,CACrB,WAAY,CAAC,CAAE,KAAM,iCACrB,aAAc,gBAGhB,EAAA,WAAA,SAAA,KAcqC,IAAU,EAgL/C,OA7LS,EAAA,KAAP,aAyGO,EAAA,WAAP,SAAkB,GAET,OAAC,GAAM,uCAAuC,KAAK,IAWrD,EAAA,MAAP,SAAa,GAQJ,IAPD,IAIF,EAJE,EAAS,GACT,EAAO,EAAG,KACV,EAAQ,KAAK,KAAK,EAAO,EAAK,YAGhC,EAAS,EAAQ,EAEd,EAAQ,GAAM,CACb,IAAA,EAAM,KAAK,IAAI,EAAM,EAAQ,EAAK,YAClC,EAAI,EAAG,MAAM,EAAO,GAEpB,EAAQ,CACZ,WAAY,KAAK,WACjB,EAAG,EACH,KAAM,EACN,MAAO,GAGT,EAAO,KAAK,GAEZ,EAAQ,EACR,IAKK,OAFF,KAAA,aAEE,GAGF,EAAA,kBAAP,SAAyB,EAAY,GAC7B,IAAA,EAAK,IAAI,WAEf,EAAG,OAAS,SAAU,GAEpB,EAAG,EAAI,OAAO,SAGhB,EAAG,kBAAkB,IAGhB,EAAA,mBAAP,SAA0B,EAAY,GAC9B,IAAA,EAAK,IAAI,WAEf,EAAG,OAAS,SAAU,GAEpB,EAAG,EAAI,OAAO,SAGhB,EAAG,mBAAmB,IAGjB,EAAA,0BAAP,SAAiC,GAG1B,IAFD,IAAA,EAAY,IAAI,WAAW,EAAO,QAE7B,EAAI,EAAG,EAAI,EAAO,OAAQ,IACjC,EAAU,GAA4B,IAAvB,EAAO,WAAW,GAG5B,OAAA,EAAU,QAGZ,EAAA,YAAP,WACS,OAAA,KAAK,SACT,SAAS,IACT,OAAO,IAGL,EAAA,SAAP,WACS,MAAsB,WAAtB,SAAS,UAzLF,EAAA,WAAa,eACb,EAAA,WAAa,IAGb,EAAA,gBAAkB,CAAE,OAAQ,GAC5B,EAAA,WAAa,MAGb,EAAA,cAAgB,EAGhB,EAAA,SAA6B,EAe1C,QAbU,qBACF,UAGL,EAAO,wBACF,SAGL,EAAO,kBACF,YAGF,cAIO,EAAA,SAAY,WACtB,QAA6B,IAAtB,EAAA,kBACF,MAAA,GAGL,IAQA,EAAI,EARJ,GAAO,EACP,GAAa,EAEb,GAAa,EACb,GAAO,EAEL,IAAwB,OAAO,wBAIjC,IACF,EAAK,IAAI,EAAA,kBAAkB,EAAgB,CACzC,SAAU,CAAC,CAAE,iBAAiB,MAEhC,MAAO,GACP,GAAO,EACP,GAAa,EAGX,GAAA,EACE,IACF,EAAK,EAAG,kBAAkB,eAC1B,MAAO,GACP,GAAO,EAIP,GAAA,EAAM,CAEJ,IACF,EAAG,WAAa,OAChB,GAAa,EACb,MAAO,IAKH,IAAA,EAAa,IAAI,EAAA,kBAAkB,EAAgB,IACrD,IAKF,EAJmB,EAAW,kBAC5B,sBACA,IAEgB,QAClB,MAAO,IACT,EAAW,QAYN,OARH,IACF,IAAe,EAAG,WAGhB,GACF,EAAG,QAGE,CACL,WAAY,EACZ,KAAM,EACN,WAAY,EACZ,OAAQ,EACR,SAAU,EACV,KAAM,EACN,oBAAqB,GArEG,GA+ErB,EAAA,KAAO,EAAW,KAClB,EAAA,OAAS,EAAW,OAIZ,EAAA,WAAa,EA0E9B,EA9LA,GAAa,QAAA,KAAA;;ACRb,aAEA,IAAA,EAAA,OAAA,UAAA,eACA,EAAA,IASA,SAAA,KA4BA,SAAA,EAAA,EAAA,EAAA,GACA,KAAA,GAAA,EACA,KAAA,QAAA,EACA,KAAA,KAAA,IAAA,EAcA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,GAAA,mBAAA,EACA,MAAA,IAAA,UAAA,mCAGA,IAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,EAMA,OAJA,EAAA,QAAA,GACA,EAAA,QAAA,GAAA,GACA,EAAA,QAAA,GAAA,CAAA,EAAA,QAAA,GAAA,GADA,EAAA,QAAA,GAAA,KAAA,IADA,EAAA,QAAA,GAAA,EAAA,EAAA,gBAIA,EAUA,SAAA,EAAA,EAAA,GACA,KAAA,EAAA,aAAA,EAAA,QAAA,IAAA,SACA,EAAA,QAAA,GAUA,SAAA,IACA,KAAA,QAAA,IAAA,EACA,KAAA,aAAA,EAxEA,OAAA,SACA,EAAA,UAAA,OAAA,OAAA,OAMA,IAAA,GAAA,YAAA,GAAA,IA2EA,EAAA,UAAA,WAAA,WACA,IACA,EACA,EAFA,EAAA,GAIA,GAAA,IAAA,KAAA,aAAA,OAAA,EAEA,IAAA,KAAA,EAAA,KAAA,QACA,EAAA,KAAA,EAAA,IAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GAAA,GAGA,OAAA,OAAA,sBACA,EAAA,OAAA,OAAA,sBAAA,IAGA,GAUA,EAAA,UAAA,UAAA,SAAA,GACA,IAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,KAAA,QAAA,GAEA,IAAA,EAAA,MAAA,GACA,GAAA,EAAA,GAAA,MAAA,CAAA,EAAA,IAEA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IACA,EAAA,GAAA,EAAA,GAAA,GAGA,OAAA,GAUA,EAAA,UAAA,cAAA,SAAA,GACA,IAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,KAAA,QAAA,GAEA,OAAA,EACA,EAAA,GAAA,EACA,EAAA,OAFA,GAYA,EAAA,UAAA,KAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,EAAA,EAAA,EAEA,IAAA,KAAA,QAAA,GAAA,OAAA,EAEA,IAEA,EACA,EAHA,EAAA,KAAA,QAAA,GACA,EAAA,UAAA,OAIA,GAAA,EAAA,GAAA,CAGA,OAFA,EAAA,MAAA,KAAA,eAAA,EAAA,EAAA,QAAA,GAAA,GAEA,GACA,KAAA,EAAA,OAAA,EAAA,GAAA,KAAA,EAAA,UAAA,EACA,KAAA,EAAA,OAAA,EAAA,GAAA,KAAA,EAAA,QAAA,IAAA,EACA,KAAA,EAAA,OAAA,EAAA,GAAA,KAAA,EAAA,QAAA,EAAA,IAAA,EACA,KAAA,EAAA,OAAA,EAAA,GAAA,KAAA,EAAA,QAAA,EAAA,EAAA,IAAA,EACA,KAAA,EAAA,OAAA,EAAA,GAAA,KAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EACA,KAAA,EAAA,OAAA,EAAA,GAAA,KAAA,EAAA,QAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAGA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,EAAA,GAAA,UAAA,GAGA,EAAA,GAAA,MAAA,EAAA,QAAA,OACA,CACA,IACA,EADA,EAAA,EAAA,OAGA,IAAA,EAAA,EAAA,EAAA,EAAA,IAGA,OAFA,EAAA,GAAA,MAAA,KAAA,eAAA,EAAA,EAAA,GAAA,QAAA,GAAA,GAEA,GACA,KAAA,EAAA,EAAA,GAAA,GAAA,KAAA,EAAA,GAAA,SAAA,MACA,KAAA,EAAA,EAAA,GAAA,GAAA,KAAA,EAAA,GAAA,QAAA,GAAA,MACA,KAAA,EAAA,EAAA,GAAA,GAAA,KAAA,EAAA,GAAA,QAAA,EAAA,GAAA,MACA,KAAA,EAAA,EAAA,GAAA,GAAA,KAAA,EAAA,GAAA,QAAA,EAAA,EAAA,GAAA,MACA,QACA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,EAAA,GAAA,UAAA,GAGA,EAAA,GAAA,GAAA,MAAA,EAAA,GAAA,QAAA,IAKA,OAAA,GAYA,EAAA,UAAA,GAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,EAAA,GAAA,IAYA,EAAA,UAAA,KAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,EAAA,GAAA,IAaA,EAAA,UAAA,eAAA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,EAAA,EAAA,EAEA,IAAA,KAAA,QAAA,GAAA,OAAA,KACA,IAAA,EAEA,OADA,EAAA,KAAA,GACA,KAGA,IAAA,EAAA,KAAA,QAAA,GAEA,GAAA,EAAA,GAEA,EAAA,KAAA,GACA,IAAA,EAAA,MACA,GAAA,EAAA,UAAA,GAEA,EAAA,KAAA,OAEA,CACA,IAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,OAAA,EAAA,EAAA,KAEA,EAAA,GAAA,KAAA,GACA,IAAA,EAAA,GAAA,MACA,GAAA,EAAA,GAAA,UAAA,IAEA,EAAA,KAAA,EAAA,IAOA,EAAA,OAAA,KAAA,QAAA,GAAA,IAAA,EAAA,OAAA,EAAA,GAAA,EACA,EAAA,KAAA,GAGA,OAAA,MAUA,EAAA,UAAA,mBAAA,SAAA,GACA,IAAA,EAUA,OARA,GACA,EAAA,EAAA,EAAA,EAAA,EACA,KAAA,QAAA,IAAA,EAAA,KAAA,KAEA,KAAA,QAAA,IAAA,EACA,KAAA,aAAA,GAGA,MAMA,EAAA,UAAA,IAAA,EAAA,UAAA,eACA,EAAA,UAAA,YAAA,EAAA,UAAA,GAKA,EAAA,SAAA,EAKA,EAAA,aAAA,EAKA,oBAAA,SACA,OAAA,QAAA;;AC7QA,aAAA,IAAA,EAAA,MAAA,KAAA,QAAA,SAAA,EAAA,GAAA,IAAA,EAAA,mBAAA,QAAA,EAAA,OAAA,UAAA,IAAA,EAAA,OAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,KAAA,GAAA,EAAA,GAAA,IAAA,WAAA,IAAA,GAAA,KAAA,MAAA,EAAA,EAAA,QAAA,MAAA,EAAA,KAAA,EAAA,OAAA,MAAA,GAAA,EAAA,CAAA,MAAA,GAAA,QAAA,IAAA,IAAA,EAAA,OAAA,EAAA,EAAA,SAAA,EAAA,KAAA,GAAA,QAAA,GAAA,EAAA,MAAA,EAAA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,UAAA,WAAA,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,EAAA,OAAA,EAAA,UAAA,KAAA,OAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAjEA,IASY,EATN,EAAa,YASnB,SAAY,GACR,EAAA,EAAA,SAAA,GAAA,WACA,EAAA,EAAA,OAAA,GAAA,SACA,EAAA,EAAA,SAAA,GAAA,WACA,EAAA,EAAA,IAAA,GAAA,MAJJ,CAAY,EAAA,QAAA,WAAA,QAAA,SAAQ,KAOpB,IAAA,EAAA,WAAA,SAAA,IACY,KAAA,UAAY,EAAS,SA8CjC,OA5CI,OAAA,eAAI,EAAA,UAAA,WAAQ,CAAZ,IAAA,WAAkC,OAAA,KAAK,WAEvC,IAAA,SAAa,GAA2B,KAAA,UAAY,GAFxC,YAAA,EA8ChB,cAAA,IA1CI,EAAA,UAAA,IAAA,WAAI,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,GAAA,UAAA,GACI,KAAK,WAAa,EAAS,KACtB,KAAA,OAAM,MAAX,KAAI,EAAA,CAAQ,EAAS,KAAQ,KAIrC,EAAA,UAAA,KAAA,WAAK,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,GAAA,UAAA,GACG,KAAK,WAAa,EAAS,UACtB,KAAA,OAAM,MAAX,KAAI,EAAA,CAAQ,EAAS,UAAa,KAI1C,EAAA,UAAA,MAAA,WAAM,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,GAAA,UAAA,GACE,KAAK,WAAa,EAAS,QACtB,KAAA,OAAM,MAAX,KAAI,EAAA,CAAQ,EAAS,QAAW,KAIxC,EAAA,UAAA,eAAA,SAAe,GACN,KAAA,OAAS,GAGV,EAAA,UAAA,OAAR,SAAe,GAAoB,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,EAAA,GAAA,UAAA,GACzB,IAAA,EAAI,EAAA,CAAI,GAAe,GAExB,IAAA,IAAI,KAAK,EACN,EAAK,aAAc,QACnB,EAAK,GAAK,IAAM,EAAK,GAAG,KAAO,KAAO,EAAK,GAAG,SAKlD,GAAY,EAAS,IACrB,QAAQ,IAAG,MAAX,QAAO,EAAQ,IACR,GAAY,EAAS,SAC5B,QAAQ,KAAI,MAAZ,QAAO,EAAA,CAAM,WAAc,IACpB,GAAY,EAAS,QAC5B,QAAQ,MAAK,MAAb,QAAO,EAAA,CAAO,SAAY,KAGtC,EA/CA,GAiDA,QAAA,QAAe,IAAI;;ACdnB,aAnDA,IAAY,EASA,EAKA,EASA,EAeA,EAMA,EAOA,EAAZ,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAnDA,SAAY,GACV,EAAA,KAAA,OACA,EAAA,OAAA,SACA,EAAA,KAAA,OACA,EAAA,MAAA,QACA,EAAA,MAAA,QACA,EAAA,gBAAA,kBANF,CAAY,EAAA,QAAA,sBAAA,QAAA,oBAAmB,KAS/B,SAAY,GACV,EAAA,KAAA,OACA,EAAA,MAAA,QAFF,CAAY,EAAA,QAAA,iBAAA,QAAA,eAAc,KAK1B,SAAY,GACV,EAAA,KAAA,OACA,EAAA,MAAA,QACA,EAAA,WAAA,aACA,EAAA,KAAA,OACA,EAAA,aAAA,eACA,EAAA,MAAA,QANF,CAAY,EAAA,QAAA,gBAAA,QAAA,cAAa,KASzB,SAAY,GACV,EAAA,oBAAA,uBACA,EAAA,aAAA,eACA,EAAA,UAAA,aACA,EAAA,WAAA,cACA,EAAA,QAAA,UACA,EAAA,gBAAA,mBACA,EAAA,eAAA,kBACA,EAAA,YAAA,eACA,EAAA,YAAA,eACA,EAAA,aAAA,gBACA,EAAA,cAAA,iBACA,EAAA,OAAA,SAZF,CAAY,EAAA,QAAA,gBAAA,QAAA,cAAa,KAezB,SAAY,GACV,EAAA,OAAA,SACA,EAAA,WAAA,cACA,EAAA,KAAA,OAHF,CAAY,EAAA,QAAA,oBAAA,QAAA,kBAAiB,KAM7B,SAAY,GACV,EAAA,QAAA,UACA,EAAA,aAAA,eACA,EAAA,MAAA,QACA,EAAA,MAAA,QAJF,CAAY,EAAA,QAAA,kBAAA,QAAA,gBAAe,KAO3B,SAAY,GACV,EAAA,UAAA,YACA,EAAA,UAAA,YACA,EAAA,MAAA,QACA,EAAA,OAAA,SACA,EAAA,KAAA,OACA,EAAA,MAAA,QACA,EAAA,QAAA,WACA,EAAA,WAAA,cACA,EAAA,MAAA,QACA,EAAA,OAAA,SAVF,CAAY,EAAA,QAAA,oBAAA,QAAA,kBAAiB;;AC3ChB,aAAA,IAAA,EAAA,MAAA,KAAA,WAAA,WAAA,IAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,OAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,IAAA,GAAA,EAAA,MAAA,KAAA,QAAA,SAAA,EAAA,GAAA,IAAA,EAAA,mBAAA,QAAA,EAAA,OAAA,UAAA,IAAA,EAAA,OAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,KAAA,GAAA,EAAA,GAAA,IAAA,WAAA,IAAA,GAAA,KAAA,MAAA,EAAA,EAAA,QAAA,MAAA,EAAA,KAAA,EAAA,OAAA,MAAA,GAAA,EAAA,CAAA,MAAA,GAAA,QAAA,IAAA,IAAA,EAAA,OAAA,EAAA,EAAA,SAAA,EAAA,KAAA,GAAA,QAAA,GAAA,EAAA,MAAA,EAAA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,UAAA,WAAA,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,EAAA,OAAA,EAAA,UAAA,KAAA,OAAA,GAAA,EAAA,MAAA,KAAA,UAAA,SAAA,GAAA,IAAA,EAAA,mBAAA,QAAA,EAAA,OAAA,UAAA,EAAA,EAAA,OAAA,EAAA,EAAA,KAAA,GAAA,CAAA,KAAA,WAAA,OAAA,GAAA,GAAA,EAAA,SAAA,OAAA,GAAA,CAAA,MAAA,GAAA,EAAA,KAAA,MAAA,MAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IARb,IAAA,EAAA,QAAA,iBACA,EAAA,EAAA,QAAA,aACA,EAAA,QAAA,WAMA,EAAA,SAAA,GAQE,SAAA,EACE,EACA,EACA,EACA,EACA,EACiB,QAAA,IAAA,IAAA,EAAA,KANnB,IAAA,EAQE,EAAA,KAAA,OAAO,KAFU,EAAA,aAAA,EAbX,EAAA,eAAgB,EAEhB,EAAA,eAA6B,GAe7B,IAAA,EAAa,EAAS,SAAW,QAlB9B,OAoBT,EAAK,OAAS,EAAa,EAAO,IAAM,EAAO,EAAO,cAAgB,EApB7D,EA+Ib,OA/I4B,EAAA,EAAA,GAwB1B,EAAA,UAAA,MAAA,SAAM,EAAY,GACX,KAAA,IAAM,EAEN,KAAA,QAAU,OAAS,EAAK,UAAY,EAEpC,KAAA,mBAIC,EAAA,UAAA,gBAAR,WAAA,IAAA,EAAA,KACM,KAAK,UAIJ,KAAA,QAAU,IAAI,UAAU,KAAK,QAE7B,KAAA,QAAQ,UAAY,SAAC,GACpB,IAAA,EAEA,IACF,EAAO,KAAK,MAAM,EAAM,MACxB,MAAO,GAEP,YADA,EAAA,QAAO,IAAI,yBAA0B,EAAM,MAI7C,EAAK,KAAK,EAAA,gBAAgB,QAAS,IAGhC,KAAA,QAAQ,QAAU,SAAC,GACtB,EAAA,QAAO,IAAI,iBAAkB,GAE7B,EAAK,eAAgB,EACrB,aAAa,EAAK,cAElB,EAAK,KAAK,EAAA,gBAAgB,eAKvB,KAAA,QAAQ,OAAS,WAChB,EAAK,gBAET,EAAK,sBAEL,EAAA,QAAO,IAAI,eAEX,EAAK,yBAID,EAAA,UAAA,mBAAR,WAAA,IAAA,EAAA,KACO,KAAA,aAAe,WAAW,WAAQ,EAAK,kBAAoB,KAAK,eAG/D,EAAA,UAAA,eAAR,WACM,GAAC,KAAK,UAAN,CAKE,IAAA,EAAU,KAAK,UAAU,CAAE,KAAM,EAAA,kBAAkB,YAEpD,KAAA,QAAQ,KAAK,GAEb,KAAA,0BARH,EAAA,QAAO,IAAI,iDAYP,EAAA,UAAA,QAAR,WACS,QAAE,KAAK,SAAsC,GAA3B,KAAK,QAAQ,YAIhC,EAAA,UAAA,oBAAR,WAAA,IAAA,EAAA,EAGQ,EAAW,EAAO,KAAK,gBACxB,KAAA,eAAiB,GAtGb,IAwGa,IAAA,IAAA,EAAA,EAAA,GAAW,EAAA,EAAA,QAAA,EAAA,KAAA,EAAA,EAAA,OAAE,CAAxB,IAAA,EAAO,EAAA,MACX,KAAA,KAAK,IAzGH,MAAA,GAAA,EAAA,CAAA,MAAA,GAAA,QAAA,IAAA,IAAA,EAAA,OAAA,EAAA,EAAA,SAAA,EAAA,KAAA,GAAA,QAAA,GAAA,EAAA,MAAA,EAAA,SA8GX,EAAA,UAAA,KAAA,SAAK,GACC,IAAA,KAAK,cAML,GAAC,KAAK,IAKN,GAAC,EAAK,MAKN,GAAC,KAAK,UAAN,CAIE,IAAA,EAAU,KAAK,UAAU,GAE1B,KAAA,QAAQ,KAAK,SAVX,KAAA,KAAK,EAAA,gBAAgB,MAAO,wBAL5B,KAAA,eAAe,KAAK,IAkB7B,EAAA,UAAA,MAAA,YACO,KAAK,eAAmB,KAAK,UAC3B,KAAA,QAAQ,QACR,KAAA,eAAgB,EACrB,aAAa,KAAK,gBAGxB,EA/IA,CAA4B,EAAA,cAAf,QAAA,OAAA;;;ACuFb,IAAA,EAAA,UAAA,GA/FA,EAAA,QAAA,iBAEA,EAAA,CACA,OAAA,EAEA,SAAA,SAAA,EAAA,GACA,EAAA,OAAA,EACA,EAAA,UAAA,OAAA,OAAA,EAAA,UAAA,CACA,YAAA,CACA,MAAA,EACA,YAAA,EACA,UAAA,EACA,cAAA,MAIA,OAAA,SAAA,EAAA,GACA,IAAA,IAAA,KAAA,EACA,EAAA,eAAA,KACA,EAAA,GAAA,EAAA,IAGA,OAAA,GAEA,KAAA,EAAA,KACA,OAAA,EAAA,OAEA,IAAA,WACA,GAAA,EAAA,MAAA,CAEA,IADA,IAAA,EAAA,GACA,EAAA,EAAA,EAAA,UAAA,OAAA,IACA,EAAA,GAAA,UAAA,GAEA,EAAA,QAAA,cACA,QAAA,IAAA,MAAA,QAAA,KAIA,eAAA,SAAA,GACA,IAAA,EAAA,GACA,EAAA,uBAUA,SAAA,EAAA,GACA,EAAA,QAAA,GAAA,EAAA,MAAA,IACA,EAAA,iBACA,EAAA,kBAEA,EAAA,QACA,EAAA,OAAA,IASA,OALA,EAAA,iBACA,EAAA,iBAAA,UAAA,GAAA,GACA,EAAA,aACA,EAAA,YAAA,YAAA,GAlBA,SAAA,GACA,EAAA,KAAA,GACA,EAAA,YAAA,EAAA,MATA,CA4BA,MAEA,kBAAA,SAAA,EAAA,GACA,IAAA,EAAA,IAAA,WACA,EAAA,OAAA,SAAA,GACA,EAAA,EAAA,OAAA,SAEA,EAAA,kBAAA,IAEA,mBAAA,SAAA,EAAA,GACA,IAAA,EAAA,IAAA,WACA,EAAA,OAAA,SAAA,GACA,EAAA,EAAA,OAAA,SAEA,EAAA,mBAAA,IAEA,0BAAA,SAAA,GAEA,IADA,IAAA,EAAA,IAAA,WAAA,EAAA,QACA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,EAAA,GAAA,IAAA,EAAA,WAAA,GAEA,OAAA,EAAA,QAEA,YAAA,WACA,OAAA,KAAA,SAAA,SAAA,IAAA,OAAA,KAIA,OAAA,QAAA;;AC9FA,IAAA,EAAA,QAAA,UAMA,SAAA,EAAA,EAAA,GACA,KAAA,gBAAA,GAAA,OAAA,IAAA,EAAA,GACA,KAAA,IAAA,EAEA,EAAA,MAAA,EAIA,KAAA,UAAA,GAEA,KAAA,UAAA,GACA,KAAA,UAAA,GAGA,KAAA,QAAA,IAEA,KAAA,KAAA,IAEA,KAAA,UAAA,EAGA,KAAA,OAAA,EAGA,KAAA,OAAA,GAEA,KAAA,WAIA,EAAA,UAAA,KAAA,SAAA,GAEA,IAAA,EAAA,EAAA,KAAA,GACA,EAAA,KAAA,KAAA,KACA,KAAA,YAAA,CAAA,KAAA,KAIA,KAAA,UAAA,KAAA,QAAA,CACA,IAAA,EACA,OAAA,KAAA,OAAA,IAGA,EAAA,QACA,KAAA,UAAA,KAAA,QAAA,MAAA,IAAA,MAIA,KAAA,oBAAA,KAAA,QACA,KAAA,QAAA,IAIA,EAAA,UAAA,eAAA,WAGA,IAAA,EAAA,KACA,KAAA,SAAA,YAAA,WAEA,IAAA,EAAA,EAAA,OAAA,QACA,GAAA,EAAA,UACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EACA,EAAA,cAAA,EAAA,SAGA,EAAA,cAAA,IAEA,KAAA,YAGA,EAAA,UAAA,cAAA,SAAA,GACA,IAAA,EAAA,KACA,EAAA,EAAA,KAAA,GACA,EAAA,mBAAA,EAAA,SAAA,GACA,EAAA,IAAA,KAAA,KAEA,IAAA,EAAA,OAAA,SACA,aAAA,EAAA,UACA,EAAA,SAAA,OAMA,EAAA,UAAA,aAAA,WACA,IAAA,IAAA,KAAA,KAAA,UACA,KAAA,UAAA,eAAA,IACA,KAAA,oBAAA,IAOA,EAAA,UAAA,YAAA,SAAA,GAEA,IADA,IAAA,GAAA,EACA,EAAA,EAAA,EAAA,KAAA,OAAA,OAAA,EAAA,EAAA,GAAA,EAAA,CACA,IAAA,EAAA,KAAA,OAAA,GACA,IAAA,EACA,GAAA,EACA,EAAA,YAAA,IAAA,EAAA,QAAA,KACA,GAAA,GAGA,IACA,KAAA,OAAA,KAAA,GACA,KAAA,UACA,KAAA,mBAMA,EAAA,UAAA,SAAA,WAEA,IAAA,EAAA,KACA,KAAA,IAAA,UAAA,SAAA,GACA,IAAA,EAAA,EAAA,KAIA,GAHA,EAAA,cAGA,OAAA,CACA,IAAA,EAAA,EAAA,0BAAA,GACA,EAAA,EAAA,OAAA,GACA,EAAA,eAAA,MAMA,EAAA,UAAA,eAAA,SAAA,GACA,IAGA,EAHA,EAAA,EAAA,GACA,EAAA,KAAA,UAAA,GACA,EAAA,KAAA,UAAA,GAEA,OAAA,EAAA,IAEA,IAAA,KACA,IAAA,EAAA,EACA,GACA,KAAA,UAAA,EAAA,OAAA,IAEA,MAEA,IAAA,MAMA,GALA,EAAA,EAGA,KAAA,UAAA,GAAA,EAAA,IAEA,EACA,MAGA,KAAA,KAAA,GACA,MACA,IAAA,MAEA,GADA,EAAA,EACA,CACA,IAAA,EAAA,EAAA,GAEA,EAAA,IAAA,KAAA,IAAA,EAAA,EAAA,KAGA,EAAA,KAAA,EAAA,OAAA,QACA,EAAA,IAAA,SAAA,IAAA,KAAA,EAAA,cACA,KAAA,UAAA,IAEA,KAAA,eAIA,MAEA,IAAA,QAGA,KADA,EAAA,GACA,CAEA,IAAA,IADA,KAAA,UAAA,GAEA,MAEA,EAAA,CACA,IAAA,CAAA,MAAA,EAAA,GACA,OAAA,IAEA,KAAA,UAAA,GAAA,EAGA,IAAA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,OAAA,GAAA,IAAA,WAAA,GAIA,IAAA,EAAA,IAAA,IACA,KAAA,kBAAA,GAEA,KAAA,KAAA,GACA,MACA,QAGA,KAAA,YAAA,KAMA,EAAA,UAAA,OAAA,SAAA,GAIA,IAHA,IAAA,EAAA,GACA,EAAA,EAAA,KACA,EAAA,EACA,EAAA,GAAA,CACA,IAAA,EAAA,KAAA,IAAA,EAAA,EAAA,KAAA,MAEA,EAAA,CACA,QAFA,EAAA,MAAA,EAAA,IAIA,EAAA,KAAA,GACA,EAAA,EAGA,OADA,EAAA,IAAA,UAAA,EAAA,OAAA,WACA,GAIA,EAAA,UAAA,KAAA,SAAA,GACA,IAAA,EAAA,KAAA,UAAA,GAAA,IAGA,KAAA,UAAA,KAAA,EAAA,KACA,KAAA,UAAA,GACA,KAAA,UAAA,IAAA,GAGA,KAAA,YAAA,IAIA,EAAA,UAAA,kBAAA,SAAA,GAGA,IAFA,IAAA,EAAA,KAAA,UAAA,GACA,EAAA,EAAA,OACA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EAEA,QAAA,IAAA,EAAA,GAEA,YADA,EAAA,IAAA,GAAA,GAIA,EAAA,IAAA,GAAA,EAAA,QAIA,EAAA,UAAA,oBAAA,SAAA,GACA,EAAA,IAAA,2BAAA,GAKA,IAJA,IAAA,EAAA,KAAA,UAAA,GACA,EAAA,EAAA,OACA,EAAA,GACA,EAAA,KAAA,IAAA,EAAA,IAAA,KAAA,QAAA,EAAA,QACA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EACA,EAAA,GAAA,MAAA,IAAA,EAAA,MACA,EAAA,GAAA,MAAA,EACA,EAAA,KAAA,CAAA,QAAA,EAAA,EAAA,EAAA,GAAA,WAGA,EAAA,IAAA,KAAA,SAAA,EAAA,QACA,EAAA,KAAA,CAAA,MAAA,EAAA,EAAA,SAEA,EAAA,WAAA,EACA,KAAA,YAAA,IAIA,EAAA,UAAA,UAAA,SAAA,GACA,EAAA,IAAA,uBAAA,GACA,IAAA,EAAA,KACA,EAAA,KAAA,UAAA,GAAA,OACA,EAAA,IAAA,KAAA,GACA,EAAA,kBAAA,EAAA,SAAA,GACA,EAAA,UAAA,EAAA,OAAA,aAEA,KAAA,UAAA,IAIA,EAAA,mBAAA,SAAA,GAOA,IAAA,EAAA,UAAA,WAAA,MAAA,kBACA,GAAA,IACA,EAAA,SAAA,EAAA,GAAA,MAAA,KAAA,UACA,GAAA,CACA,IAAA,EAAA,EAAA,MAAA,WAEA,GAAA,EAAA,OAAA,EACA,OAAA,EAAA,GAFA,cAEA,EAAA,GAKA,OAAA,GAIA,EAAA,UAAA,UAAA,SAAA,KAEA,OAAA,QAAA;;AC7Sa,aAAA,IAAA,EAAA,MAAA,KAAA,UAAA,WAAA,OAAA,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,IAAA,IAAA,KAAA,EAAA,UAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,IAAA,MAAA,KAAA,YAAA,EAAA,MAAA,KAAA,WAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,IAAA,EAAA,UAAA,SAAA,EAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,OAAA,IAAA,EAAA,SAAA,GAAA,EAAA,EAAA,SAAA,KAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,EAAA,GAAA,KAAA,WAAA,EAAA,MAAA,KAAA,aAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,MAAA,EAAA,KAAA,WAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,OAAA,EAAA,IAAA,KAAA,GAAA,IAAA,IAAA,OAAA,EAAA,CAAA,KAAA,EAAA,GAAA,MAAA,EAAA,GAAA,OAAA,EAAA,IAAA,mBAAA,SAAA,EAAA,OAAA,UAAA,WAAA,OAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,SAAA,GAAA,OAAA,SAAA,GAAA,GAAA,EAAA,MAAA,IAAA,UAAA,mCAAA,KAAA,GAAA,IAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,SAAA,EAAA,KAAA,GAAA,GAAA,EAAA,SAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,KAAA,OAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA,IAAA,KAAA,EAAA,KAAA,EAAA,EAAA,EAAA,MAAA,KAAA,EAAA,OAAA,EAAA,QAAA,CAAA,MAAA,EAAA,GAAA,MAAA,GAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,GAAA,EAAA,CAAA,GAAA,SAAA,KAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,KAAA,MAAA,SAAA,QAAA,KAAA,GAAA,EAAA,EAAA,MAAA,OAAA,GAAA,EAAA,EAAA,OAAA,MAAA,IAAA,EAAA,IAAA,IAAA,EAAA,IAAA,CAAA,EAAA,EAAA,SAAA,GAAA,IAAA,EAAA,MAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,CAAA,EAAA,MAAA,EAAA,GAAA,MAAA,GAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,EAAA,MAAA,GAAA,GAAA,EAAA,MAAA,EAAA,GAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,KAAA,GAAA,MAAA,EAAA,IAAA,EAAA,IAAA,MAAA,EAAA,KAAA,MAAA,SAAA,EAAA,EAAA,KAAA,EAAA,GAAA,MAAA,GAAA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,MAAA,CAAA,MAAA,EAAA,GAAA,EAAA,QAAA,EAAA,MAAA,GAAA,CAAA,CAAA,EAAA,OAAA,EAAA,MAAA,KAAA,cAAA,SAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,IAAA,IAAA,KAAA,EAAA,OAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,EAAA,QAAA,EAAA,GAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAhBb,IAAA,EAAA,EAAA,QAAA,aACA,EAAA,QAAA,UACA,EAAA,EAAA,QAAA,aACA,EAAA,QAAA,aAOA,EAAA,QAAA,WAMA,EAAA,WACE,SAAA,EAAqB,GAAA,KAAA,WAAA,EA6XvB,OA1XE,EAAA,UAAA,gBAAA,SAAgB,GACR,IAAA,EAAiB,KAAK,uBAUxB,GAPC,KAAA,WAAW,eAAiB,EAE7B,KAAK,WAAW,OAAS,EAAA,eAAe,OAAS,EAAQ,SACtD,KAAA,uBAAuB,EAAQ,QAAS,GAI3C,EAAQ,WAAY,CAClB,GAAA,KAAK,WAAW,OAAS,EAAA,eAAe,KAAM,CAC1C,IAAA,EAAiC,KAAK,WAExC,EAAS,GAER,EAAA,KAAK,SAAS,OACjB,EAAS,CAAE,SAAU,EAAQ,WAGzB,IAAA,EAAc,EAAe,kBACjC,EAAe,MACf,GAEF,EAAe,WAAW,GAGvB,KAAA,kBAEA,KAAA,UAAU,QAAS,EAAQ,MAK5B,EAAA,UAAA,qBAAR,WACE,EAAA,QAAO,IAAI,+BAEP,IAAA,EAAW,GAEX,KAAK,WAAW,OAAS,EAAA,eAAe,MAAS,EAAA,KAAK,SAAS,KAExD,KAAK,WAAW,OAAS,EAAA,eAAe,QAEjD,EAAW,CAAE,SAAU,CAAC,CAAE,sBAAsB,MAHhD,EAAW,CAAE,SAAU,CAAC,CAAE,iBAAiB,KAMvC,IAAA,EAAiB,IAAI,EAAA,kBACzB,KAAK,WAAW,SAAS,QAAQ,OACjC,GAKK,OAFF,KAAA,gBAAgB,GAEd,GAID,EAAA,UAAA,gBAAR,SACE,GADF,IAAA,EAAA,KAGQ,EAAS,KAAK,WAAW,KACzB,EAAe,KAAK,WAAW,aAC/B,EAAiB,KAAK,WAAW,KACjC,EAAW,KAAK,WAAW,SAGjC,EAAA,QAAO,IAAI,iCAEX,EAAe,eAAiB,SAAC,GAC3B,EAAI,YACN,EAAA,QAAO,IAAI,+BAAgC,GAC3C,EAAS,OAAO,KAAK,CACnB,KAAM,EAAA,kBAAkB,UACxB,QAAS,CACP,UAAW,EAAI,UACf,KAAM,EACN,aAAc,GAEhB,IAAK,MAKX,EAAe,2BAA6B,WAClC,OAAA,EAAe,oBAChB,IAAA,SACH,EAAA,QAAO,IACL,wDACA,GAEF,EAAK,WAAW,KACd,EAAA,oBAAoB,MACpB,IAAI,MAAM,gCAAkC,EAAS,aAEvD,EAAK,WAAW,QAChB,MACG,IAAA,SACH,EAAA,QAAO,IACL,wDACA,GAEF,EAAK,WAAW,KACd,EAAA,oBAAoB,MACpB,IAAI,MAAM,iBAAmB,EAAS,aAExC,EAAK,WAAW,QAChB,MACG,IAAA,eACH,EAAA,QAAO,IACL,8DACA,GAEF,EAAK,WAAW,KACd,EAAA,oBAAoB,MACpB,IAAI,MAAM,iBAAmB,EAAS,mBAExC,EAAK,WAAW,QAChB,MACG,IAAA,YACH,EAAe,eAAiB,EAAA,KAAK,KAIzC,EAAK,WAAW,KAAK,EAAA,oBAAoB,gBAAiB,EAAe,qBAI3E,EAAA,QAAO,IAAI,8BAGX,EAAe,cAAgB,SAAC,GAC9B,EAAA,QAAO,IAAI,yBAEL,IAAA,EAAc,EAAI,QAEtB,EAAS,cAAc,EAAQ,GAGtB,WAAW,IAIxB,EAAA,QAAO,IAAI,+BAEX,EAAe,QAAU,SAAC,GACxB,EAAA,QAAO,IAAI,0BAEL,IAAA,EAAS,EAAI,QAAQ,GACrB,EAAa,EAAS,cAAc,EAAQ,GAE9C,GAAA,EAAW,OAAS,EAAA,eAAe,MAAO,CACtC,IAAA,EAAmC,EAEzC,EAAK,4BAA4B,EAAQ,MAK/C,EAAA,UAAA,QAAA,WACE,EAAA,QAAO,IAAI,iCAAmC,KAAK,WAAW,MAExD,IAAA,EAAiB,KAAK,WAAW,eAEnC,GAAC,EAAD,CAIC,KAAA,WAAW,eAAiB,KAGjC,EAAe,eAAiB,EAAe,2BAA6B,EAAe,cAAgB,EAAe,QAAU,aAE9H,IAAA,EAA4D,WAAlC,EAAe,eAC3C,GAAuB,EAEvB,GAAA,KAAK,WAAW,OAAS,EAAA,eAAe,KAAM,CAC1C,IACA,EADiC,KAAK,WACT,YAE/B,IACF,IAAyB,EAAY,YAAyC,WAA3B,EAAY,aAI/D,GAA2B,IAC7B,EAAe,UAIL,EAAA,UAAA,WAAd,WAA4B,OAAA,EAAA,UAAA,EAAA,QAAO,WAlMxB,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,KAAA,SAAA,GAAA,OAAA,EAAA,OAAA,KAAA,EAmMH,EAAiB,KAAK,WAAW,eACjC,EAAW,KAAK,WAAW,SApMxB,EAAA,MAAA,EAAA,KAAA,EAuMO,OAvMP,EAAA,KAAA,KAAA,CAAA,EAAA,EAAA,CAAA,IAuMO,CAAA,EAAM,EAAe,YACjC,KAAK,WAAW,QAAQ,cAxMnB,KAAA,EAuMD,EAAQ,EAAA,OAId,EAAA,QAAO,IAAI,kBAEN,EAAA,KAAK,SAAS,MAAQ,KAAK,WAAW,OAAS,EAAA,eAAe,OAC3D,EAAiC,KAAK,YACzB,WACjB,EAAM,IAAM,EAAS,mBAAmB,EAAM,MAI9C,KAAK,WAAW,QAAQ,cAAgE,mBAAzC,KAAK,WAAW,QAAQ,eACzE,EAAM,IAAM,KAAK,WAAW,QAAQ,aAAa,EAAM,MAAQ,EAAM,KArNhE,EAAA,MAAA,EAAA,KAAA,EAyNL,OAzNK,EAAA,KAAA,KAAA,CAAA,EAAA,EAAA,CAAA,IAyNL,CAAA,EAAM,EAAe,oBAAoB,IAzNpC,KAAA,EAAA,OAyNL,EAAA,OAEA,EAAA,QAAO,IAAI,wBAAyB,EAAO,OAAO,KAAK,WAAW,MAE9D,EAAe,CACjB,IAAK,EACL,KAAM,KAAK,WAAW,KACtB,aAAc,KAAK,WAAW,aAC9B,SAAU,KAAK,WAAW,SAC1B,QAAS,EAAA,KAAK,SAGZ,KAAK,WAAW,OAAS,EAAA,eAAe,OACpC,EAAiC,KAAK,WAE5C,EAAO,EAAA,GACF,EAAO,CACV,MAAO,EAAe,MACtB,SAAU,EAAe,SACzB,cAAe,EAAe,iBAIlC,EAAS,OAAO,KAAK,CACnB,KAAM,EAAA,kBAAkB,MACxB,QAAO,EACP,IAAK,KAAK,WAAW,OAnPlB,CAAA,EAAA,GAAA,KAAA,EAAA,MAyPH,2FAHF,EAAA,EAAA,UAKE,EAAS,UAAU,EAAA,cAAc,OAAQ,GACzC,EAAA,QAAO,IAAI,kCAAmC,IA5P3C,CAAA,EAAA,GAAA,KAAA,EAAA,MAAA,CAAA,EAAA,GAAA,KAAA,EAAA,OAAA,EAAA,EAAA,OAgQP,EAAS,UAAU,EAAA,cAAc,OAAQ,GACzC,EAAA,QAAO,IAAI,0BAA2B,GAjQ/B,CAAA,EAAA,GAAA,KAAA,EAAA,MAAA,CAAA,SAqQG,EAAA,UAAA,YAAd,WAA6B,OAAA,EAAA,UAAA,EAAA,QAAO,WArQzB,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,KAAA,SAAA,GAAA,OAAA,EAAA,OAAA,KAAA,EAsQH,EAAiB,KAAK,WAAW,eACjC,EAAW,KAAK,WAAW,SAvQxB,EAAA,MAAA,EAAA,KAAA,EA0QQ,OA1QR,EAAA,KAAA,KAAA,CAAA,EAAA,EAAA,CAAA,IA0QQ,CAAA,EAAM,EAAe,gBA1Q7B,KAAA,EA0QD,EAAS,EAAA,OACf,EAAA,QAAO,IAAI,mBAEN,EAAA,KAAK,SAAS,MAAQ,KAAK,WAAW,OAAS,EAAA,eAAe,MAC1B,KAAK,WACzB,WACjB,EAAO,IAAM,EAAS,mBAAmB,EAAO,MAIhD,KAAK,WAAW,QAAQ,cAAgE,mBAAzC,KAAK,WAAW,QAAQ,eACzE,EAAO,IAAM,KAAK,WAAW,QAAQ,aAAa,EAAO,MAAQ,EAAO,KArRnE,EAAA,MAAA,EAAA,KAAA,EAyRL,OAzRK,EAAA,KAAA,KAAA,CAAA,EAAA,EAAA,CAAA,IAyRL,CAAA,EAAM,EAAe,oBAAoB,IAzRpC,KAAA,EAAA,OAyRL,EAAA,OAEA,EAAA,QAAO,IAAI,wBAAyB,EAAQ,OAAO,KAAK,WAAW,MAEnE,EAAS,OAAO,KAAK,CACnB,KAAM,EAAA,kBAAkB,OACxB,QAAS,CACP,IAAK,EACL,KAAM,KAAK,WAAW,KACtB,aAAc,KAAK,WAAW,aAC9B,QAAS,EAAA,KAAK,SAEhB,IAAK,KAAK,WAAW,OArSlB,CAAA,EAAA,GAAA,KAAA,EAAA,OAAA,EAAA,EAAA,OAwSL,EAAS,UAAU,EAAA,cAAc,OAAQ,GACzC,EAAA,QAAO,IAAI,kCAAmC,GAzSzC,CAAA,EAAA,GAAA,KAAA,EAAA,MAAA,CAAA,EAAA,GAAA,KAAA,EAAA,OAAA,EAAA,EAAA,OA4SP,EAAS,UAAU,EAAA,cAAc,OAAQ,GACzC,EAAA,QAAO,IAAI,4BAA6B,GA7SjC,CAAA,EAAA,GAAA,KAAA,EAAA,MAAA,CAAA,SAkTL,EAAA,UAAA,UAAN,SACE,EACA,GACC,OAAA,EAAA,UAAA,EAAA,QAAO,WArTC,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,KAAA,SAAA,GAAA,OAAA,EAAA,OAAA,KAAA,EAsTT,EAAM,IAAI,EAAA,sBAAsB,GAC1B,EAAiB,KAAK,WAAW,eACjC,EAAW,KAAK,WAAW,SAEjC,EAAA,QAAO,IAAI,6BAA8B,GAEnC,EAAO,KA5TJ,EAAA,MAAA,EAAA,KAAA,EA+TP,OA/TO,EAAA,KAAA,KAAA,CAAA,EAAA,EAAA,CAAA,IA+TP,CAAA,EAAM,EAAe,qBAAqB,IA/TnC,KAAA,EAiUH,OAFJ,EAAA,OACA,EAAA,QAAO,IAAI,yBAAyB,EAAI,QAAQ,KAAK,WAAW,MACnD,UAAT,EAAA,CAAA,EAAA,GACF,CAAA,EAAM,EAAK,eAlUN,KAAA,EAkUL,EAAA,OAlUK,EAAA,MAAA,EAAA,KAAA,EAAA,MAAA,CAAA,EAAA,GAAA,KAAA,EAAA,OAAA,EAAA,EAAA,OAqUP,EAAS,UAAU,EAAA,cAAc,OAAQ,GACzC,EAAA,QAAO,IAAI,mCAAoC,GAtUxC,CAAA,EAAA,GAAA,KAAA,EAAA,MAAA,CAAA,SA2UL,EAAA,UAAA,gBAAN,SAAsB,GAAW,OAAA,EAAA,UAAA,EAAA,QAAO,WA3U7B,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,KAAA,SAAA,GAAA,OAAA,EAAA,OAAA,KAAA,EA4UH,EAAY,EAAI,UAChB,EAAgB,EAAI,cACpB,EAAS,EAAI,OACb,EAAiB,KAAK,WAAW,eACjC,EAAW,KAAK,WAAW,SAhVxB,EAAA,MAAA,EAAA,KAAA,EAmVP,OAnVO,EAAA,KAAA,KAAA,CAAA,EAAA,EAAA,CAAA,IAmVP,CAAA,EAAM,EAAe,gBACnB,IAAI,EAAA,gBAAgB,CAClB,OAAQ,EACR,cAAe,EACf,UAAW,MAvVR,KAAA,EAAA,OAmVP,EAAA,OAOA,EAAA,QAAO,IAAI,2BAA2B,KAAK,WAAW,MA1V/C,CAAA,EAAA,GAAA,KAAA,EAAA,OAAA,EAAA,EAAA,OA4VP,EAAS,UAAU,EAAA,cAAc,OAAQ,GACzC,EAAA,QAAO,IAAI,8BAA+B,GA7VnC,CAAA,EAAA,GAAA,KAAA,EAAA,MAAA,CAAA,SAiWH,EAAA,UAAA,uBAAR,SACE,EACA,GAII,GAFJ,EAAA,QAAO,IAAI,0BAA0B,EAAO,GAAE,wBAEzC,EAAe,SACX,OAAA,EAAA,QAAO,MACZ,oEAIJ,EAAO,YAAY,QAAQ,SAAA,GACzB,EAAe,SAAS,EAAO,MAI3B,EAAA,UAAA,4BAAR,SACE,EACA,GAEA,EAAA,QAAO,IACL,cAAc,EAAO,GAAE,wBACvB,EAAgB,cAIlB,EAAgB,UAAU,IAE9B,EA9XA,GAAa,QAAA,WAAA;;ACXS,aAAA,IAAA,EAAA,MAAA,KAAA,WAAA,WAAA,IAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,OAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,IAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IALtB,IAAA,EAAA,QAAA,iBAKA,EAAA,SAAA,GAcE,SAAA,EACW,EACF,EACE,GAHX,IAAA,EAKE,EAAA,KAAA,OAAO,KAnBW,OAeT,EAAA,KAAA,EACF,EAAA,SAAA,EACE,EAAA,QAAA,EAhBD,EAAA,OAAQ,EAoBhB,EAAK,SAAW,EAAQ,SArBN,EA2BtB,OA3B6C,EAAA,EAAA,GAU3C,OAAA,eAAI,EAAA,UAAA,OAAI,CAAR,IAAA,WACS,OAAA,KAAK,OADN,YAAA,EAVY,cAAA,IA2BtB,EA3BA,CAA6C,EAAA,cAAvB,QAAA,eAAA;;ACOT,aAAA,IAAA,EAAA,MAAA,KAAA,WAAA,WAAA,IAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,OAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,IAAA,GAAA,EAAA,MAAA,KAAA,UAAA,WAAA,OAAA,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,IAAA,IAAA,KAAA,EAAA,UAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,IAAA,MAAA,KAAA,YAAA,EAAA,MAAA,KAAA,UAAA,SAAA,GAAA,IAAA,EAAA,mBAAA,QAAA,EAAA,OAAA,UAAA,EAAA,EAAA,OAAA,EAAA,EAAA,KAAA,GAAA,CAAA,KAAA,WAAA,OAAA,GAAA,GAAA,EAAA,SAAA,OAAA,GAAA,CAAA,MAAA,GAAA,EAAA,KAAA,MAAA,MAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAZb,IAAA,EAAA,QAAA,UACA,EAAA,EAAA,QAAA,aACA,EAAA,QAAA,gBACA,EAAA,QAAA,WAEA,EAAA,QAAA,oBAOA,EAAA,SAAA,GAcE,SAAA,EAAY,EAAgB,EAAgB,GAA5C,IAAA,EACE,EAAA,KAAA,KAAM,EAAQ,EAAU,IAAQ,KAfvB,OAiBT,EAAK,aAAe,EAAK,QAAQ,QACjC,EAAK,aACH,EAAK,QAAQ,cACb,EAAgB,UAAY,EAAA,KAAK,cAEnC,EAAK,YAAc,IAAI,EAAA,WAAW,GAE9B,EAAK,cACP,EAAK,YAAY,gBAAgB,CAC/B,QAAS,EAAK,aACd,YAAY,IA3BP,EAmHb,OAnHqC,EAAA,EAAA,GAOnC,OAAA,eAAI,EAAA,UAAA,OAAI,CAAR,IAAA,WACS,OAAA,EAAA,eAAe,OADhB,YAAA,EAPG,cAAA,IAWX,OAAA,eAAI,EAAA,UAAA,cAAW,CAAf,IAAA,WAAwC,OAAA,KAAK,cAA9B,YAAA,EAXJ,cAAA,IAYX,OAAA,eAAI,EAAA,UAAA,eAAY,CAAhB,IAAA,WAAyC,OAAA,KAAK,eAA9B,YAAA,EAZL,cAAA,IAgCX,EAAA,UAAA,UAAA,SAAU,GACR,EAAA,QAAO,IAAI,mBAAoB,GAE1B,KAAA,cAAgB,EACrB,EAAA,UAAM,KAAI,KAAA,KAAC,EAAA,oBAAoB,OAAQ,IAGzC,EAAA,UAAA,cAAA,SAAc,GACN,IAAA,EAAO,EAAQ,KACf,EAAU,EAAQ,QAEhB,OAAA,EAAQ,MACT,KAAA,EAAA,kBAAkB,OAEhB,KAAA,YAAY,UAAU,EAAM,EAAQ,KACpC,KAAA,OAAQ,EACb,MACG,KAAA,EAAA,kBAAkB,UAChB,KAAA,YAAY,gBAAgB,EAAQ,WACzC,MACF,QACE,EAAA,QAAO,KAAK,6BAA6B,EAAI,cAAc,KAAK,QAKtE,EAAA,UAAA,OAAA,SAAO,EAAqB,GA1DjB,IAAA,EAAA,EA2DL,QADsB,IAAA,IAAA,EAAA,IACtB,KAAK,aACP,EAAA,QAAO,KACL,4FAFA,CAOC,KAAA,aAAe,EAEhB,GAAW,EAAQ,eAChB,KAAA,QAAQ,aAAe,EAAQ,cAGjC,KAAA,YAAY,gBAAe,EAAA,GAAM,KAAK,QAAQ,SAAQ,CAAE,QAAS,KAEhE,IAAA,EAAW,KAAK,SAAS,aAAa,KAAK,cA1ExC,IA4EW,IAAA,IAAA,EAAA,EAAA,GAAQ,EAAA,EAAA,QAAA,EAAA,KAAA,EAAA,EAAA,OAAE,CAArB,IAAA,EAAO,EAAA,MACT,KAAA,cAAc,IA7EZ,MAAA,GAAA,EAAA,CAAA,MAAA,GAAA,QAAA,IAAA,IAAA,EAAA,OAAA,EAAA,EAAA,SAAA,EAAA,KAAA,GAAA,QAAA,GAAA,EAAA,MAAA,EAAA,OAgFJ,KAAA,OAAQ,IAQf,EAAA,UAAA,MAAA,WACM,KAAK,cACF,KAAA,YAAY,UACZ,KAAA,YAAc,MAGhB,KAAA,aAAe,KACf,KAAA,cAAgB,KAEjB,KAAK,WACF,KAAA,SAAS,kBAAkB,MAE3B,KAAA,SAAW,MAGd,KAAK,SAAW,KAAK,QAAQ,UAC1B,KAAA,QAAQ,QAAU,MAGpB,KAAK,OAIL,KAAA,OAAQ,EAEb,EAAA,UAAM,KAAI,KAAA,KAAC,EAAA,oBAAoB,SAhHT,EAAA,UAAY,MAkHtC,EAnHA,CAAqC,EAAA,gBAAxB,QAAA,gBAAA;;ACKA,aAAA,IAAA,EAAA,MAAA,KAAA,WAAA,WAAA,IAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,OAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,IAAA,GAAA,EAAA,MAAA,KAAA,UAAA,SAAA,GAAA,IAAA,EAAA,mBAAA,QAAA,EAAA,OAAA,UAAA,EAAA,EAAA,OAAA,EAAA,EAAA,KAAA,GAAA,CAAA,KAAA,WAAA,OAAA,GAAA,GAAA,EAAA,SAAA,OAAA,GAAA,CAAA,MAAA,GAAA,EAAA,KAAA,MAAA,MAAA,EAAA,MAAA,KAAA,cAAA,SAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,IAAA,IAAA,KAAA,EAAA,OAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,EAAA,QAAA,EAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAjBb,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,UACA,EAAA,EAAA,QAAA,aACA,EAAA,QAAA,gBACA,EAAA,QAAA,WAOA,EAAA,QAAA,oBAMA,EAAA,SAAA,GA2BE,SAAA,EAAY,EAAgB,EAAgB,GAA5C,IAAA,EACE,EAAA,KAAA,KAAM,EAAQ,EAAU,IAAQ,KA5BvB,OAYH,EAAA,QAAiB,GACjB,EAAA,YAAc,EACd,EAAA,YAAa,EACb,EAAA,aAAe,GAerB,EAAK,aACH,EAAK,QAAQ,cAAgB,EAAe,UAAY,EAAA,KAAK,cAE/D,EAAK,MAAQ,EAAK,QAAQ,OAAS,EAAK,aACxC,EAAK,cAAgB,EAAK,QAAQ,eAAiB,EAAA,kBAAkB,OACrE,EAAK,SAAW,EAAK,QAAQ,SAEzB,EAAK,QAAQ,WACf,EAAK,aAAe,EAAK,QAAQ,SAAS,SAG5C,EAAK,YAAc,IAAI,EAAA,WAAW,GAElC,EAAK,YAAY,gBACf,EAAK,QAAQ,UAAY,CACvB,YAAY,IA7CP,EA2Tb,OA3ToC,EAAA,EAAA,GAQlC,OAAA,eAAI,EAAA,UAAA,OAAI,CAAR,IAAA,WACS,OAAA,EAAA,eAAe,MADhB,YAAA,EARG,cAAA,IAqBX,OAAA,eAAI,EAAA,UAAA,cAAW,CAAf,IAAA,WACS,OAAA,KAAK,KADC,YAAA,EArBJ,cAAA,IAyBX,OAAA,eAAI,EAAA,UAAA,aAAU,CAAd,IAAA,WAAkC,OAAA,KAAK,aAAzB,YAAA,EAzBH,cAAA,IAmDX,EAAA,UAAA,WAAA,SAAW,GACJ,KAAA,IAAM,EACN,KAAA,yBAGC,EAAA,UAAA,sBAAR,WAAA,IAAA,EAAA,KAYM,GAXA,EAAA,KAAK,SAAS,OACX,KAAA,YAAY,WAAa,eAG3B,KAAA,YAAY,OAAS,WACxB,EAAA,QAAO,IAAI,mCACX,EAAK,OAAQ,EACb,EAAK,KAAK,EAAA,oBAAoB,QAI3B,EAAA,KAAK,SAAS,MAAQ,KAAK,SAAU,CAClC,IAAA,EAAkB,EAAA,QAAO,SAAW,EAAA,SAAS,SAC9C,KAAA,UAAY,IAAI,EAAA,SAAS,KAAK,YAAa,GAG9C,KAAK,UACF,KAAA,UAAU,UAAY,SAAC,GAC1B,EAAK,KAAK,EAAA,oBAAoB,KAAM,IAGjC,KAAA,YAAY,UAAY,SAAC,GAC5B,EAAK,mBAAmB,IAGvB,KAAA,YAAY,QAAU,WACzB,EAAA,QAAO,IAAI,0BAA2B,EAAK,MAC3C,EAAK,UAKD,EAAA,UAAA,mBAAR,SAA2B,GAA3B,IAAA,EAAA,KAA6B,EAAA,EAAA,KACrB,EAAW,EAAK,YAKlB,EAAmB,EAEnB,GAL0B,KAAK,gBAAkB,EAAA,kBAAkB,QACrE,KAAK,gBAAkB,EAAA,kBAAkB,WAIhB,CACrB,GAAA,IAAa,KAMf,YAJA,EAAA,KAAK,kBAAkB,EAAM,SAAC,GACtB,IAAA,EAAe,EAAA,KAAK,OAAO,GACjC,EAAK,KAAK,EAAA,oBAAoB,KAAM,KAGjC,GAAI,IAAa,YACtB,EAAmB,EAAA,KAAK,OAAO,QAC1B,GAAI,IAAa,OAAQ,CAExB,IAAA,EAAK,EAAA,KAAK,0BAA0B,GAC1C,EAAmB,EAAA,KAAK,OAAO,SAExB,KAAK,gBAAkB,EAAA,kBAAkB,OAClD,EAAmB,KAAK,MAAM,IAK5B,EAAiB,WACd,KAAA,aAAa,GAIpB,EAAA,UAAM,KAAI,KAAA,KAAC,EAAA,oBAAoB,KAAM,IAG/B,EAAA,UAAA,aAAR,SAAqB,GACb,IAAA,EAAK,EAAK,WACV,EAAY,KAAK,aAAa,IAAO,CACzC,KAAM,GACN,MAAO,EACP,MAAO,EAAK,OAOV,GAJJ,EAAU,KAAK,EAAK,GAAK,EAAK,KAC9B,EAAU,QACL,KAAA,aAAa,GAAM,EAEpB,EAAU,QAAU,EAAU,MAAO,QAEhC,KAAK,aAAa,GAGnB,IAAA,EAAO,IAAI,KAAK,EAAU,MAC3B,KAAA,mBAAmB,CAAE,KAAI,MASlC,EAAA,UAAA,MAAA,WACO,KAAA,QAAU,GACV,KAAA,YAAc,EACd,KAAA,aAAe,GAEhB,KAAK,cACF,KAAA,YAAY,UACZ,KAAA,YAAc,MAGjB,KAAK,WACF,KAAA,SAAS,kBAAkB,MAE3B,KAAA,SAAW,MAGb,KAAK,OAIL,KAAA,OAAQ,EAEb,EAAA,UAAM,KAAI,KAAA,KAAC,EAAA,oBAAoB,SAIjC,EAAA,UAAA,KAAA,SAAK,EAAW,GAAhB,IAAA,EAAA,KACM,GAAC,KAAK,KAUN,GAAA,KAAK,UAGF,KAAA,UAAU,KAAK,QAIlB,GAAA,KAAK,gBAAkB,EAAA,kBAAkB,KACtC,KAAA,cAAc,KAAK,UAAU,SAC7B,GACL,KAAK,gBAAkB,EAAA,kBAAkB,QACzC,KAAK,gBAAkB,EAAA,kBAAkB,WACzC,CACM,IAAA,EAAO,EAAA,KAAK,KAAK,GAQnB,IAHF,EAAA,KAAK,gBAAgB,KAAK,eAC1B,EAAA,KAAK,gBAAgB,EAAA,KAAK,YAEN,GAAW,EAAK,KAAO,EAAA,KAAK,WAEhD,YADK,KAAA,YAAY,GAKd,EAAA,KAAK,SAAS,KAIP,EAAA,KAAK,SAAS,WAOnB,KAAA,cAAc,GAJnB,EAAA,KAAK,kBAAkB,EAAM,SAAC,GAC5B,EAAK,cAAc,KAPrB,EAAA,KAAK,mBAAmB,EAAM,SAAC,GAC7B,EAAK,cAAc,UAYlB,KAAA,cAAc,QAlDnB,EAAA,UAAM,KAAI,KAAA,KACR,EAAA,oBAAoB,MACpB,IAAI,MACF,6FAmDA,EAAA,UAAA,cAAR,SAAsB,IAChB,KAAK,YAAe,KAAK,SAAS,KAC/B,KAAA,QAAQ,KAAK,GACb,KAAA,YAAc,KAAK,QAAQ,SAK5B,EAAA,UAAA,SAAR,SAAiB,GAAjB,IAAA,EAAA,KACM,IAAC,KAAK,KACD,OAAA,EAGL,IACG,KAAA,YAAY,KAAK,GACtB,MAAO,GASA,OARF,KAAA,YAAa,EAElB,WAAW,WAET,EAAK,YAAa,EAClB,EAAK,cACJ,MAEI,EAGF,OAAA,GAID,EAAA,UAAA,WAAR,WACM,GAAC,KAAK,MAIkB,IAAxB,KAAK,QAAQ,OAAb,CAIE,IAAA,EAAM,KAAK,QAAQ,GAErB,KAAK,SAAS,KACX,KAAA,QAAQ,QACR,KAAA,YAAc,KAAK,QAAQ,OAC3B,KAAA,gBAID,EAAA,UAAA,YAAR,SAAoB,GA5RT,IAAA,EAAA,EA6RH,EAAQ,EAAA,KAAK,MAAM,GA7RhB,IA+RQ,IAAA,IAAA,EAAA,EAAA,GAAK,EAAA,EAAA,QAAA,EAAA,KAAA,EAAA,EAAA,OAAE,CAAf,IAAA,EAAI,EAAA,MACN,KAAA,KAAK,GAAM,IAhST,MAAA,GAAA,EAAA,CAAA,MAAA,GAAA,QAAA,IAAA,IAAA,EAAA,OAAA,EAAA,EAAA,SAAA,EAAA,KAAA,GAAA,QAAA,GAAA,EAAA,MAAA,EAAA,SAoSX,EAAA,UAAA,cAAA,SAAc,GACN,IAAA,EAAU,EAAQ,QAEhB,OAAA,EAAQ,MACT,KAAA,EAAA,kBAAkB,OAChB,KAAA,aAAe,EAAQ,QAGvB,KAAA,YAAY,UAAU,EAAQ,KAAM,EAAQ,KACjD,MACG,KAAA,EAAA,kBAAkB,UAChB,KAAA,YAAY,gBAAgB,EAAQ,WACzC,MACF,QACE,EAAA,QAAO,KACL,6BACA,EAAQ,KACR,aACA,KAAK,QArTW,EAAA,UAAY,MA0TtC,EA3TA,CAAoC,EAAA,gBAAvB,QAAA,eAAA;;ACdA,aAAA,IAAA,EAAA,MAAA,KAAA,WAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,IAAA,EAAA,UAAA,SAAA,EAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,OAAA,IAAA,EAAA,SAAA,GAAA,EAAA,EAAA,SAAA,KAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,EAAA,GAAA,KAAA,WAAA,EAAA,MAAA,KAAA,aAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,MAAA,EAAA,KAAA,WAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,OAAA,EAAA,IAAA,KAAA,GAAA,IAAA,IAAA,OAAA,EAAA,CAAA,KAAA,EAAA,GAAA,MAAA,EAAA,GAAA,OAAA,EAAA,IAAA,mBAAA,SAAA,EAAA,OAAA,UAAA,WAAA,OAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,SAAA,GAAA,OAAA,SAAA,GAAA,GAAA,EAAA,MAAA,IAAA,UAAA,mCAAA,KAAA,GAAA,IAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,SAAA,EAAA,KAAA,GAAA,GAAA,EAAA,SAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,KAAA,OAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA,IAAA,KAAA,EAAA,KAAA,EAAA,EAAA,EAAA,MAAA,KAAA,EAAA,OAAA,EAAA,QAAA,CAAA,MAAA,EAAA,GAAA,MAAA,GAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,GAAA,EAAA,CAAA,GAAA,SAAA,KAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,KAAA,MAAA,SAAA,QAAA,KAAA,GAAA,EAAA,EAAA,MAAA,OAAA,GAAA,EAAA,EAAA,OAAA,MAAA,IAAA,EAAA,IAAA,IAAA,EAAA,IAAA,CAAA,EAAA,EAAA,SAAA,GAAA,IAAA,EAAA,MAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,CAAA,EAAA,MAAA,EAAA,GAAA,MAAA,GAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,EAAA,MAAA,GAAA,GAAA,EAAA,MAAA,EAAA,GAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,KAAA,GAAA,MAAA,EAAA,IAAA,EAAA,IAAA,MAAA,EAAA,KAAA,MAAA,SAAA,EAAA,EAAA,KAAA,EAAA,GAAA,MAAA,GAAA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,MAAA,CAAA,MAAA,EAAA,GAAA,EAAA,QAAA,EAAA,MAAA,GAAA,CAAA,CAAA,EAAA,OAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAHb,IAAA,EAAA,QAAA,UACA,EAAA,EAAA,QAAA,aAEA,EAAA,WACE,SAAA,EAA6B,GAAA,KAAA,SAAA,EAqF/B,OAnFU,EAAA,UAAA,UAAR,SAAkB,GACV,IACF,GADa,KAAK,SAAS,OAAS,WAAa,WAGnD,KAAK,SAAS,KACd,IACA,KAAK,SAAS,KACd,KAAK,SAAS,KACd,KAAK,SAAS,IACd,IACA,EAIK,OAFP,GADoB,QAAS,IAAI,MAAO,UAAiB,KAAK,UAO1D,EAAA,UAAA,WAAN,WAAoB,OAAA,EAAA,UAAA,EAAA,QAAO,WArBhB,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,KAAA,SAAA,GAAA,OAAA,EAAA,OAAA,KAAA,EAsBH,EAAM,KAAK,UAAU,MAtBlB,EAAA,MAAA,EAAA,KAAA,EAyBU,OAzBV,EAAA,KAAA,KAAA,CAAA,EAAA,EAAA,CAAA,IAyBU,CAAA,EAAM,MAAM,IAzBtB,KAAA,EA2BH,GAAoB,OAFlB,EAAW,EAAA,QAEJ,OACL,MAAA,IAAI,MAAM,iBAAiB,EAAS,QAG5C,MAAA,CAAA,EAAO,EAAS,QA/BT,KAAA,EA+CD,MA/CC,EAAA,EAAA,OAiCP,EAAA,QAAO,MAAM,sBAAuB,GAEhC,EAAY,GAGS,MAAvB,KAAK,SAAS,MACd,KAAK,SAAS,OAAS,EAAA,KAAK,aAE5B,EACE,mIAKE,IAAI,MAAM,uCAAyC,GA/ClD,KAAA,EAAA,MAAA,CAAA,SAoDL,EAAA,UAAA,aAAN,WAAsB,OAAA,EAAA,UAAA,EAAA,QAAO,WApDlB,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,KAAA,SAAA,GAAA,OAAA,EAAA,OAAA,KAAA,EAqDH,EAAM,KAAK,UAAU,SArDlB,EAAA,MAAA,EAAA,KAAA,EAwDU,OAxDV,EAAA,KAAA,KAAA,CAAA,EAAA,EAAA,CAAA,IAwDU,CAAA,EAAM,MAAM,IAxDtB,KAAA,EA0DH,GAAoB,OAFlB,EAAW,EAAA,QAEJ,OAAgB,CACvB,GAAoB,MAApB,EAAS,OAaL,MAZF,EAAe,GAGjB,EADE,KAAK,SAAS,OAAS,EAAA,KAAK,WAE5B,sHAIA,2FAIE,IAAI,MAAM,+DACd,GAGE,MAAA,IAAI,MAAM,iBAAiB,EAAS,QAG5C,MAAA,CAAA,EAAO,EAAS,QA/ET,KAAA,EAmFD,MAnFC,EAAA,EAAA,OAiFP,EAAA,QAAO,MAAM,8BAA+B,GAEtC,IAAI,MAAM,4CAA8C,GAnFvD,KAAA,EAAA,MAAA,CAAA,SAsFb,EAtFA,GAAa,QAAA,IAAA;;AC+BA,aAAA,IAAA,EAAA,MAAA,KAAA,WAAA,WAAA,IAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,OAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,IAAA,GAAA,EAAA,MAAA,KAAA,UAAA,WAAA,OAAA,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,IAAA,IAAA,KAAA,EAAA,UAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,IAAA,MAAA,KAAA,YAAA,EAAA,MAAA,KAAA,UAAA,SAAA,GAAA,IAAA,EAAA,mBAAA,QAAA,EAAA,OAAA,UAAA,EAAA,EAAA,OAAA,EAAA,EAAA,KAAA,GAAA,CAAA,KAAA,WAAA,OAAA,GAAA,GAAA,EAAA,SAAA,OAAA,GAAA,CAAA,MAAA,GAAA,EAAA,KAAA,MAAA,MAAA,EAAA,MAAA,KAAA,QAAA,SAAA,EAAA,GAAA,IAAA,EAAA,mBAAA,QAAA,EAAA,OAAA,UAAA,IAAA,EAAA,OAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,KAAA,GAAA,EAAA,GAAA,IAAA,WAAA,IAAA,GAAA,KAAA,MAAA,EAAA,EAAA,QAAA,MAAA,EAAA,KAAA,EAAA,OAAA,MAAA,GAAA,EAAA,CAAA,MAAA,GAAA,QAAA,IAAA,IAAA,EAAA,OAAA,EAAA,EAAA,SAAA,EAAA,KAAA,GAAA,QAAA,GAAA,EAAA,MAAA,EAAA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAlCb,IAAA,EAAA,QAAA,iBACA,EAAA,QAAA,UACA,EAAA,EAAA,QAAA,aACA,EAAA,QAAA,YACA,EAAA,QAAA,qBACA,EAAA,QAAA,oBACA,EAAA,QAAA,WASA,EAAA,QAAA,SAGA,EAAA,WAWA,OAXA,aAAA,GAgBA,EAAA,SAAA,GAsDE,SAAA,EAAY,EAAU,GAAtB,IAAA,EACE,EAAA,KAAA,OAAO,KAkDH,OAhGE,EAAA,YAAa,EACb,EAAA,eAAgB,EAChB,EAAA,OAAQ,EACC,EAAA,aAA8C,IAAI,IAClD,EAAA,cAA8C,IAAI,IA6C7D,GAAM,EAAG,aAAe,QAC1B,EAAU,EACV,OAAK,GACI,IACT,EAAK,EAAG,YAIV,EAAO,EAAA,CACL,MAAO,EACP,KAAM,EAAA,KAAK,WACX,KAAM,EAAA,KAAK,WACX,KAAM,IACN,IAAK,EAAK,YACV,MAAO,EAAA,KAAK,cACZ,OAAQ,EAAA,KAAK,eACV,GAEL,EAAK,SAAW,EAGK,MAAjB,EAAQ,OACV,EAAQ,KAAO,OAAO,SAAS,UAGT,MAApB,EAAQ,KAAK,KACf,EAAQ,KAAO,IAAM,EAAQ,MAEe,MAA1C,EAAQ,KAAK,EAAQ,KAAK,OAAS,KACrC,EAAQ,MAAQ,UAIK,IAAnB,EAAQ,QAAwB,EAAQ,OAAS,EAAA,KAAK,WACxD,EAAQ,OAAS,EAAA,KAAK,WACb,EAAQ,MAAQ,EAAA,KAAK,aAC9B,EAAQ,QAAS,GAGf,EAAQ,aACV,EAAA,QAAO,eAAe,EAAQ,aAGhC,EAAA,QAAO,SAAW,EAAQ,MAIrB,EAAA,KAAK,SAAS,YAAe,EAAA,KAAK,SAAS,KAQ3C,EAAA,KAAK,WAAW,IAKrB,EAAK,KAAO,IAAI,EAAA,IAAI,GAGpB,EAAK,8BAED,EACF,EAAK,YAAY,GAEjB,EAAK,KAAK,aACP,KAAK,SAAA,GAAM,OAAA,EAAK,YAAY,KAC5B,MAAM,SAAA,GAAS,OAAA,EAAK,OAAO,EAAA,cAAc,YAAa,KAhIlD,IAkHP,EAAK,cAAc,EAAA,cAAc,UAAW,OAAO,EAAE,gBAlH9C,IA0GP,EAAK,cACH,EAAA,cAAc,oBACd,+CA5GK,GAqhBb,OArhB0B,EAAA,EAAA,GAiBxB,OAAA,eAAI,EAAA,UAAA,KAAE,CAAN,IAAA,WACS,OAAA,KAAK,KADR,YAAA,EAjBK,cAAA,IAqBX,OAAA,eAAI,EAAA,UAAA,UAAO,CAAX,IAAA,WACS,OAAA,KAAK,UADH,YAAA,EArBA,cAAA,IAyBX,OAAA,eAAI,EAAA,UAAA,OAAI,CAAR,IAAA,WACS,OAAA,KAAK,OADN,YAAA,EAzBG,cAAA,IA6BX,OAAA,eAAI,EAAA,UAAA,SAAM,CAAV,IAAA,WACS,OAAA,KAAK,SADJ,YAAA,EA7BC,cAAA,IAqCX,OAAA,eAAI,EAAA,UAAA,cAAW,CAAf,IAAA,WArCW,IAAA,EAAA,EAsCH,EAAmB,OAAO,OAAO,MAtC9B,IAwCU,IAAA,IAAA,EAAA,EAAA,KAAK,cAAY,EAAA,EAAA,QAAA,EAAA,KAAA,EAAA,EAAA,OAAE,CAA7B,IAAA,EAAA,EAAA,EAAA,MAAA,GAAC,EAAA,EAAA,GAAG,EAAA,EAAA,GACX,EAAiB,GAAK,GAzCf,MAAA,GAAA,EAAA,CAAA,MAAA,GAAA,QAAA,IAAA,IAAA,EAAA,OAAA,EAAA,EAAA,SAAA,EAAA,KAAA,GAAA,QAAA,GAAA,EAAA,MAAA,EAAA,OA4CF,OAAA,GAPM,YAAA,EArCJ,cAAA,IA+CX,OAAA,eAAI,EAAA,UAAA,YAAS,CAAb,IAAA,WACS,OAAA,KAAK,YADD,YAAA,EA/CF,cAAA,IAkDX,OAAA,eAAI,EAAA,UAAA,eAAY,CAAhB,IAAA,WACS,OAAA,KAAK,eADE,YAAA,EAlDL,cAAA,IAsIH,EAAA,UAAA,4BAAR,WAAA,IAAA,EAAA,KACO,KAAA,QAAU,IAAI,EAAA,OACjB,KAAK,SAAS,OACd,KAAK,SAAS,KACd,KAAK,SAAS,KACd,KAAK,SAAS,KACd,KAAK,SAAS,IACd,KAAK,SAAS,cAGX,KAAA,OAAO,GAAG,EAAA,gBAAgB,QAAS,SAAA,GACtC,EAAK,eAAe,KAGjB,KAAA,OAAO,GAAG,EAAA,gBAAgB,MAAO,SAAA,GACpC,EAAK,OAAO,EAAA,cAAc,YAAa,KAGpC,KAAA,OAAO,GAAG,EAAA,gBAAgB,aAAc,WAEtC,EAAK,eACR,EAAK,UAAU,EAAA,cAAc,QAAS,8BACtC,EAAK,gBAIJ,KAAA,OAAO,GAAG,EAAA,gBAAgB,MAAO,WAE/B,EAAK,cACR,EAAK,OACH,EAAA,cAAc,aACd,2CAOA,EAAA,UAAA,YAAR,SAAoB,GACb,KAAA,IAAM,EACN,KAAA,OAAO,MAAM,KAAK,GAAI,KAAK,SAAS,QAInC,EAAA,UAAA,eAAR,SAAuB,GAlLZ,IAAA,EAAA,EAmLH,EAAO,EAAQ,KACf,EAAU,EAAQ,QAClB,EAAS,EAAQ,IAEf,OAAA,GACD,KAAA,EAAA,kBAAkB,KAChB,KAAA,KAAK,EAAA,cAAc,KAAM,KAAK,IAC9B,KAAA,OAAQ,EACb,MACG,KAAA,EAAA,kBAAkB,MAChB,KAAA,OAAO,EAAA,cAAc,YAAa,EAAQ,KAC/C,MACG,KAAA,EAAA,kBAAkB,QAChB,KAAA,OAAO,EAAA,cAAc,cAAe,OAAO,KAAK,GAAE,cACvD,MACG,KAAA,EAAA,kBAAkB,WAChB,KAAA,OACH,EAAA,cAAc,WACd,YAAY,KAAK,SAAS,IAAG,gBAE/B,MACG,KAAA,EAAA,kBAAkB,MACrB,EAAA,QAAO,IAAI,8BAA+B,GACrC,KAAA,aAAa,GACb,KAAA,aAAa,OAAO,GACzB,MACG,KAAA,EAAA,kBAAkB,OAChB,KAAA,UACH,EAAA,cAAc,gBACd,6BAA+B,GAEjC,MACG,KAAA,EAAA,kBAAkB,MAEf,IAAA,EAAe,EAAQ,aASzB,IARA,EAAa,KAAK,cAAc,EAAQ,MAG1C,EAAW,QACX,EAAA,QAAO,KAAK,6CAA8C,IAIxD,EAAQ,OAAS,EAAA,eAAe,MAClC,EAAa,IAAI,EAAA,gBAAgB,EAAQ,KAAM,CAC7C,aAAc,EACd,SAAU,EACV,SAAU,EAAQ,WAEf,KAAA,eAAe,EAAQ,GACvB,KAAA,KAAK,EAAA,cAAc,KAAM,OACzB,CAAA,GAAI,EAAQ,OAAS,EAAA,eAAe,KAazC,YADA,EAAA,QAAO,KAAK,sCAAuC,EAAQ,MAX3D,EAAa,IAAI,EAAA,eAAe,EAAQ,KAAM,CAC5C,aAAc,EACd,SAAU,EACV,SAAU,EAAQ,SAClB,MAAO,EAAQ,MACf,cAAe,EAAQ,cACvB,SAAU,EAAQ,WAEf,KAAA,eAAe,EAAQ,GACvB,KAAA,KAAK,EAAA,cAAc,WAAY,GAOhC,IAAA,EAAW,KAAK,aAAa,GAvP9B,IAwPe,IAAA,IAAA,EAAA,EAAA,GAAQ,EAAA,EAAA,QAAA,EAAA,KAAA,EAAA,EAAA,OAAE,CAArB,IAAA,EAAO,EAAA,MACd,EAAW,cAAc,IAzPtB,MAAA,GAAA,EAAA,CAAA,MAAA,GAAA,QAAA,IAAA,IAAA,EAAA,OAAA,EAAA,EAAA,SAAA,EAAA,KAAA,GAAA,QAAA,GAAA,EAAA,MAAA,EAAA,OA4PL,MAEF,QACM,IAAC,EAIH,YAHA,EAAA,QAAO,KACL,yCAAyC,EAAM,YAAY,GAKzD,IACA,EADA,EAAe,EAAQ,cACvB,EAAa,KAAK,cAAc,EAAQ,KAE5B,EAAW,eAE3B,EAAW,cAAc,GAChB,EAEJ,KAAA,cAAc,EAAc,GAEjC,EAAA,QAAO,KAAK,wCAAyC,KAQrD,EAAA,UAAA,cAAR,SAAsB,EAAsB,GACrC,KAAK,cAAc,IAAI,IACrB,KAAA,cAAc,IAAI,EAAc,IAGlC,KAAA,cAAc,IAAI,GAAc,KAAK,IAKrC,EAAA,UAAA,aAAP,SAAoB,GACZ,IAAA,EAAW,KAAK,cAAc,IAAI,GAEpC,OAAA,GACG,KAAA,cAAc,OAAO,GACnB,GAGF,IAOT,EAAA,UAAA,QAAA,SAAQ,EAAc,GAChB,QADgB,IAAA,IAAA,EAAA,IAChB,KAAK,aAWP,OAVA,EAAA,QAAO,KACL,sPAKG,KAAA,UACH,EAAA,cAAc,aACd,+DAKE,IAAA,EAAiB,IAAI,EAAA,eAAe,EAAM,KAAM,GAE/C,OADF,KAAA,eAAe,EAAM,GACnB,GAOT,EAAA,UAAA,KAAA,SAAK,EAAc,EAAqB,GAClC,QADkC,IAAA,IAAA,EAAA,IAClC,KAAK,aAUP,OATA,EAAA,QAAO,KACL,0KAIG,KAAA,UACH,EAAA,cAAc,aACd,+DAKA,GAAC,EAAD,CAOJ,EAAQ,QAAU,EAEZ,IAAA,EAAkB,IAAI,EAAA,gBAAgB,EAAM,KAAM,GAEjD,OADF,KAAA,eAAe,EAAM,GACnB,EAVL,EAAA,QAAO,MACL,kFAaE,EAAA,UAAA,eAAR,SAAuB,EAAgB,GACrC,EAAA,QAAO,IACL,kBAAkB,EAAW,KAAI,IAAI,EAAW,aAAY,sBAC/C,GAGV,KAAK,aAAa,IAAI,IACpB,KAAA,aAAa,IAAI,EAAQ,IAE3B,KAAA,aAAa,IAAI,GAAQ,KAAK,IAIrC,EAAA,UAAA,kBAAA,SAAkB,GACV,IAAA,EAAc,KAAK,aAAa,IAAI,EAAW,MAEjD,GAAA,EAAa,CACT,IAAA,EAAQ,EAAY,QAAQ,IAEnB,IAAX,GACF,EAAY,OAAO,EAAO,GAKzB,KAAA,cAAc,OAAO,EAAW,eAIvC,EAAA,UAAA,cAAA,SAAc,EAAgB,GAnYnB,IAAA,EAAA,EAoYH,EAAc,KAAK,aAAa,IAAI,GACtC,IAAC,EACI,OAAA,KAtYA,IAyYc,IAAA,IAAA,EAAA,EAAA,GAAW,EAAA,EAAA,QAAA,EAAA,KAAA,EAAA,EAAA,OAAE,CAA3B,IAAA,EAAU,EAAA,MACb,GAAA,EAAW,eAAiB,EACvB,OAAA,GA3YF,MAAA,GAAA,EAAA,CAAA,MAAA,GAAA,QAAA,IAAA,IAAA,EAAA,OAAA,EAAA,EAAA,SAAA,EAAA,KAAA,GAAA,QAAA,GAAA,EAAA,MAAA,EAAA,OA+YF,OAAA,MAGD,EAAA,UAAA,cAAR,SAAsB,EAAqB,GAA3C,IAAA,EAAA,KACE,WAAW,WACT,EAAK,OAAO,EAAM,IACjB,IAQG,EAAA,UAAA,OAAR,SAAe,EAAqB,GAClC,EAAA,QAAO,MAAM,aAER,KAAK,cAGH,KAAA,aAFA,KAAA,UAKF,KAAA,UAAU,EAAM,IAIvB,EAAA,UAAA,UAAA,SAAU,EAAqB,GAC7B,EAAA,QAAO,MAAM,SAAU,GAEJ,iBAAR,IACT,EAAM,IAAI,MAAM,IAGlB,EAAI,KAAO,EAEN,KAAA,KAAK,EAAA,cAAc,MAAO,IASjC,EAAA,UAAA,QAAA,WACO,KAAK,YACH,KAAA,WACA,KAAA,aACA,KAAA,YAAa,IAKd,EAAA,UAAA,SAAR,WArcW,IAAA,EAAA,EAAA,IAscU,IAAA,IAAA,EAAA,EAAA,KAAK,aAAa,QAAM,EAAA,EAAA,QAAA,EAAA,KAAA,EAAA,EAAA,OAAE,CAApC,IAAA,EAAM,EAAA,MACR,KAAA,aAAa,GACb,KAAA,aAAa,OAAO,IAxclB,MAAA,GAAA,EAAA,CAAA,MAAA,GAAA,QAAA,IAAA,IAAA,EAAA,OAAA,EAAA,EAAA,SAAA,EAAA,KAAA,GAAA,QAAA,GAAA,EAAA,MAAA,EAAA,OA2cJ,KAAA,KAAK,EAAA,cAAc,QAIlB,EAAA,UAAA,aAAR,SAAqB,GA/cV,IAAA,EAAA,EAgdH,EAAc,KAAK,aAAa,IAAI,GAEtC,GAAC,EAldI,IAodc,IAAA,IAAA,EAAA,EAAA,GAAW,EAAA,EAAA,QAAA,EAAA,KAAA,EAAA,EAAA,OAAE,CAAjB,EAAA,MACN,SArdJ,MAAA,GAAA,EAAA,CAAA,MAAA,GAAA,QAAA,IAAA,IAAA,EAAA,OAAA,EAAA,EAAA,SAAA,EAAA,KAAA,GAAA,QAAA,GAAA,EAAA,MAAA,EAAA,SA+dX,EAAA,UAAA,WAAA,WAAA,IAAA,EAAA,KACE,WAAW,WACJ,EAAK,eACR,EAAK,eAAgB,EACrB,EAAK,OAAQ,EACT,EAAK,QACP,EAAK,OAAO,QAGd,EAAK,KAAK,EAAA,cAAc,aAAc,EAAK,IAC3C,EAAK,cAAgB,EAAK,GAC1B,EAAK,IAAM,OAEZ,IAIL,EAAA,UAAA,UAAA,WACM,GAAA,KAAK,eAAiB,KAAK,UAC7B,EAAA,QAAO,IACL,6CAA+C,KAAK,eAEjD,KAAA,eAAgB,EAChB,KAAA,8BACA,KAAA,YAAY,KAAK,mBACjB,CAAA,GAAI,KAAK,UACR,MAAA,IAAI,MACR,4EAEG,GAAK,KAAK,cAAiB,KAAK,KAM/B,MAAA,IAAI,MACR,QACA,KAAK,GACL,qEAPF,EAAA,QAAO,MACL,oEAiBN,EAAA,UAAA,aAAA,SAAa,GAAb,IAAA,EAAA,UAAa,IAAA,IAAA,EAAA,SAAM,MACZ,KAAA,KAAK,eACP,KAAK,SAAA,GAAS,OAAA,EAAG,KACjB,MAAM,SAAA,GAAS,OAAA,EAAK,OAAO,EAAA,cAAc,YAAa,MAlhBnC,EAAA,YAAc,SAohBxC,EArhBA,CAA0B,EAAA,cAAb,QAAA,KAAA;;ACtBP,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAZN,IAAA,EAAA,QAAA,UACA,EAAA,QAAA,UAEa,QAAA,OAAS,CACpB,KAAI,EAAA,KACJ,KAAI,EAAA,MAGN,QAAA,QAAe,EAAA,KAET,OAAQ,OAAS,QAAA,OAEjB,OAAQ,KAAO,EAAA;;;;;;ACVrB;;;;AAFA;AACAA,OAAO,CAACC,GAAR,CAAY,6CAAZ;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAUC,IAAV,EAAgBC,IAAhB,EAAsB;AACtC,OAAKC,GAAL,GAAW,IAAX,CADsC,CAEtC;;AACA,OAAKC,IAAL,GAAY,IAAZ;AACA,OAAKC,IAAL,GAAY,IAAZ;AACA,OAAKC,SAAL,GAAiB,IAAjB;AAEA,OAAKC,WAAL,GAAmB,IAAnB,CAPsC,CAOb;;AACzB,OAAKC,aAAL,GAAqB,IAArB;AACA,OAAKC,aAAL,GAAqB,IAArB;AACA,OAAKC,gBAAL,GAAwB,IAAxB;AACA,OAAKC,gBAAL,GAAwB,IAAxB;AACA,OAAKC,kBAAL,GAA0B,IAA1B;AACA,OAAKC,cAAL,GAAsB,IAAtB;AACA,OAAKC,qBAAL,GAA6B,IAA7B;AACA,OAAKC,oBAAL,GAA4B,IAA5B;AACA,OAAKC,WAAL,GAAmB,IAAnB;AACA,OAAKC,YAAL,GAAoB,IAApB;AACA,OAAKC,UAAL,GAAkB,IAAlB;AACA,OAAKC,kBAAL,GAA0B,IAA1B,CAnBsC,CAqBtC;;AACA,OAAKC,SAAL,GAAiB,CAAjB;AACA,OAAKC,QAAL,GAAgB,CAAhB;AACA,OAAKC,IAAL,GAAY,CAAZ;AACA,OAAKC,IAAL,GAAY,CAAZ;AACA,OAAKC,YAAL,GAAoB,CAApB;AACA,OAAKC,SAAL,GAAiB,CAAjB;AACA,OAAKC,SAAL,GAAiB,CAAjB;AACA,OAAKC,QAAL,GAAgB,CAAhB;AACA,OAAKC,aAAL,GAAqB,CAArB;AACA,OAAKC,UAAL,GAAkB,CAAlB;AACA,OAAKC,UAAL,GAAkB,EAAlB;AACA,OAAKC,SAAL,GAAiB,EAAjB;AACA,OAAKC,OAAL,GAAe,EAAf;AACA,OAAKC,QAAL,GAAgB,EAAhB;AACA,OAAKC,SAAL,GAAiB,EAAjB;AACA,OAAKC,QAAL,GAAgB,EAAhB;AACA,OAAKC,QAAL,GAAgB,EAAhB;AACA,OAAKC,SAAL,GAAiB,EAAjB;AACA,OAAKC,UAAL,GAAkB,EAAlB;AACA,OAAKC,SAAL,GAAiB,EAAjB;AACA,OAAKC,aAAL,GAAqB,EAArB;AACA,OAAKC,WAAL,GAAmB,EAAnB;AACA,OAAKC,SAAL,GAAiB,EAAjB;AACA,OAAKC,YAAL,GAAoB,EAApB;AACA,OAAKC,UAAL,GAAkB,EAAlB;AAEA,MAAMC,iBAAiB,GAAG,GAA1B;AACA,MAAMC,kBAAkB,GAAG,GAA3B;AAEA,MAAMC,iBAAiB,GAAG,GAA1B;AACA,MAAMC,kBAAkB,GAAG,GAA3B;AAEA,MAAMC,eAAe,GAAG,GAAxB;AACA,MAAMC,gBAAgB,GAAG,GAAzB,CAvDsC,CAyDtC;AACA;;AACA,MAAMC,eAAe,GAAG,IAAxB;AACA,MAAMC,gBAAgB,GAAG,GAAzB;AAEA,MAAMC,eAAe,GAAG,GAAxB;AACA,MAAMC,gBAAgB,GAAG,GAAzB;AAEA,MAAMC,aAAa,GAAG,MAAM,CAA5B;AACA,MAAMC,cAAc,GAAG,MAAM,CAA7B;AAEA,MAAIC,UAAJ;AACA,MAAIC,WAAJ;AAEA,MAAIC,UAAJ;AACA,MAAIC,WAAJ;AAEA,MAAIC,aAAJ;AACA,MAAIC,cAAJ;AAEA,MAAIC,WAAW,GAAG,IAAlB,CA7EsC,CA+EtC;;AACA,MAAIC,IAAI,GAAG,KAAX,CAhFsC,CAkFtC;;AACA,MAAIC,UAAU,GAAG,KAAjB;AACA,MAAIC,aAAa,GAAG,EAApB,CApFsC,CAsFtC;;AACA,MAAIC,KAAK,GAAG,KAAZ;AACA,MAAIC,YAAY,GAAG,IAAnB,CAxFsC,CA0FtC;;AACA,MAAIC,IAAI,GAAG,IAAX;AACA,MAAIC,UAAU,GAAG,IAAjB;AACA,MAAIC,OAAO,GAAG;AAAEC,IAAAA,IAAI,EAAE,WAAR;AAAqBC,IAAAA,IAAI,EAAE,IAA3B;AAAiCC,IAAAA,IAAI,EAAE;AAAvC,GAAd,CA7FsC,CA6FsB;;AAC5D,MAAIC,MAAM,GAAG,WAAb,CA9FsC,CA8FZ;AAE1B;;AACA,MAAIC,KAAK,GAAG,IAAZ,CAjGsC,CAmGtC;;AACA,MAAIC,QAAQ,GAAG,KAAf;AACA,MAAIC,eAAe,GAAG,CAAtB;AACA,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,cAAc,GAAG,EAArB;AACA,MAAIC,cAAc,GAAG,EAArB,CAxGsC,CA0GtC;;AACA,MAAIC,KAAK,GAAG,KAAZ;AACA,MAAIC,WAAW,GAAG,CAAlB;AACA,MAAIC,WAAW,GAAG,CAAlB,CA7GsC,CA+GtC;;AACA,MAAI,OAAOnF,IAAP,KAAgB,WAAhB,IAA+B,OAAOC,IAAP,IAAe,WAAlD,EAA+D;AAC7D,QAAIsE,IAAI,GAAGvE,IAAX;AACAsE,IAAAA,OAAO,CAACC,IAAR,GAAeA,IAAf,CAF6D,CAI7D;AACD,GALD,MAKO,IACL,OAAOvE,IAAP,KAAgB,WAAhB,IACA,OAAOC,IAAP,KAAgB,WAFX,EAGL;AACA,QAAImF,MAAM,GAAGpF,IAAb;AACA,QAAIqF,OAAO,GAAGpF,IAAd;AACAyE,IAAAA,MAAM,GAAGU,MAAT;AACAd,IAAAA,OAAO,GAAGe,OAAV;AACD,GA7HqC,CA+HtC;;;AACAjB,EAAAA,IAAI,GAAG,IAAIkB,eAAJ,CAAShB,OAAT,CAAP;AAEAF,EAAAA,IAAI,CAACmB,EAAL,CAAQ,MAAR,EAAgB,UAAUC,EAAV,EAAc;AAC5B3F,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoB0F,EAAhC;AACD,GAFD;AAIApB,EAAAA,IAAI,CAACmB,EAAL,CAAQ,YAAR,EAAsB,UAAUlB,UAAV,EAAsB;AAC1CA,IAAAA,UAAU,CAACkB,EAAX,CAAc,MAAd,EAAsB,YAAY;AAChC1F,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,KAFD;AAGD,GAJD,EAtIsC,CA4ItC;;AACA6E,EAAAA,KAAK,GAAGc,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAR;AACAf,EAAAA,KAAK,CAACgB,KAAN,CAAYC,UAAZ,GAAyB,QAAzB;AACAjB,EAAAA,KAAK,CAACgB,KAAN,CAAYE,QAAZ,GAAuB,OAAvB;AACAlB,EAAAA,KAAK,CAACgB,KAAN,CAAYG,MAAZ,GAAqB,GAArB;AACAL,EAAAA,QAAQ,CAACrF,IAAT,CAAc2F,WAAd,CAA0BpB,KAA1B;AAEA,OAAKzE,GAAL,GAAWuF,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAX;AACAf,EAAAA,KAAK,CAACoB,WAAN,CAAkB,KAAK7F,GAAvB,EApJsC,CAsJtC;AACA;;AACA,MAAM8F,YAAY,GAAGP,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAArB;AACA,MAAMO,aAAa,GAAGD,YAAY,CAACE,UAAb,CAAwB,IAAxB,CAAtB;AACA,MAAMC,WAAW,GAAGV,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAApB;AAEAf,EAAAA,KAAK,CAACoB,WAAN,CAAkBC,YAAlB;AACArB,EAAAA,KAAK,CAACoB,WAAN,CAAkBI,WAAlB;;AAEA,OAAKC,iBAAL,GAAyB,YAAY;AACnCJ,IAAAA,YAAY,CAACK,KAAb,GAAqBzC,aAArB;AACAoC,IAAAA,YAAY,CAACM,MAAb,GAAsBzC,cAAtB;AACAoC,IAAAA,aAAa,CAACM,QAAd,CACE,CADF,EAEE,CAFF,EAGEP,YAAY,CAACK,KAHf,EAIEL,YAAY,CAACM,MAJf;AAMAH,IAAAA,WAAW,CAACK,gBAAZ,CAA6B,MAA7B,EAAqC,UAACC,CAAD,EAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACAR,MAAAA,aAAa,CAACS,SAAd,CACEP,WADF,EAEE,CAFF,EAGE,CAHF,EAIEH,YAAY,CAACK,KAJf,EAIsB;AACpBL,MAAAA,YAAY,CAACM,MALf;AAOD,KAdD;AAeD,GAxBD,CA/JsC,CAyLtC;;;AACA,OAAKK,cAAL,GAAsB,YAAY;AAChCtC,IAAAA,UAAU,GAAGD,IAAI,CAACwC,OAAL,CAAalC,MAAb,CAAb,CADgC,CACG;;AACnCL,IAAAA,UAAU,CAACkB,EAAX,CAAc,MAAd,EAAsB,UAAUsB,IAAV,EAAgB;AACpChH,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACD,KAFD,EAFgC,CAMhC;;AACAuE,IAAAA,UAAU,CAACkB,EAAX,CACE,MADF,EAEE,UAAUuB,YAAV,EAAwB;AAAA,UACdD,IADc,GACEC,YADF,CACdD,IADc;AAAA,UACRE,KADQ,GACED,YADF,CACRC,KADQ;AAGtBlH,MAAAA,OAAO,CAACC,GAAR,CAAY+G,IAAZ,EAHsB,CAKtB;AACA;;AACA,UAAI5B,KAAK,KAAK,KAAd,EAAqB;AACnBA,QAAAA,KAAK,GAAG,IAAR;AACAC,QAAAA,WAAW,GAAG8B,IAAI,CAACC,GAAL,EAAd;AACD;;AACD,UAAID,IAAI,CAACC,GAAL,KAAa/B,WAAW,GAAG,IAA/B,EAAqC;AACnCrF,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCqF,WAAvC;AACAF,QAAAA,KAAK,GAAG,KAAR;AACAE,QAAAA,WAAW,GAAG,CAAd;AACD,OAJD,MAIO;AACLA,QAAAA,WAAW,GADN,CACU;AAChB,OAjBqB,CAmBtB;AACA;;;AACA,cAAQ4B,KAAR;AACE;AAEA,aAAK,OAAL;AACE;AACA;AACA;AACA,cAAIF,IAAI,CAACK,MAAL,IAAepD,WAAW,KAAK,IAAnC,EAAyC;AACvC,gBAAIA,WAAW,KAAK+C,IAAI,CAACK,MAAzB,EAAiC;AAC/BpD,cAAAA,WAAW,GAAG+C,IAAI,CAACK,MAAnB;AACArH,cAAAA,OAAO,CAACsH,IAAR,oDAC8CrD,WAD9C;AAGD;AACF,WAXH,CAaE;AACA;;;AACA,cACEsD,MAAM,CAACC,OAAP,CAAeR,IAAf,EAAqBS,MAArB,KAAgC,CAAhC,IACAT,IAAI,CAACU,WAAL,KAAqBH,MADrB,IAEAtD,WAHF,EAIE;AACA,iBAAK0D,kBAAL,CAAwB1D,WAAxB;;AACAjE,YAAAA,OAAO,CAACC,GAAR,qCAAyCgE,WAAzC;AACD,WAtBH,CAwBE;;;AACA,cAAI+C,IAAI,CAACK,MAAL,IAAepD,WAAW,KAAK,IAAnC,EAAyC;AACvCA,YAAAA,WAAW,GAAG+C,IAAI,CAACK,MAAnB;;AAEA,iBAAKO,UAAL,CAAgB3D,WAAhB;;AACAjE,YAAAA,OAAO,CAACC,GAAR,qCAAyCgE,WAAzC;AACD;;AAED,cAAIA,WAAJ,EAAiB;AACfI,YAAAA,KAAK,GAAG,IAAR;;AACA,iBAAKkC,iBAAL,GAFe,CAEW;;;AAE1B,gBAAIjC,YAAJ,EAAkB;AAChBE,cAAAA,UAAU,CAACqD,IAAX,CAAgBvD,YAAhB;AACAA,cAAAA,YAAY,GAAG,IAAf;AACD;AACF,WARD,MAQO;AACLtE,YAAAA,OAAO,CAAC8H,KAAR,CACE,2FADF;AAGD;;AAED;AAEF;;AACA,aAAK,OAAL;AACE,eAAKzH,GAAL,CAAS0H,GAAT,GAAef,IAAI,CAACgB,SAApB;;AAEA,eAAK3H,GAAL,CAAS4H,MAAT,GAAkB,YAAY;AAC5B,iBAAKC,eAAL,CAAqBlB,IAAI,CAACmB,IAA1B;;AAEA,gBAAIpD,QAAJ,EAAc,KAAKqD,kBAAL,CAAwBpB,IAAI,CAACmB,IAA7B;AACf,WAJiB,CAIhBE,IAJgB,CAIX,IAJW,CAAlB;;AAMA;AAEF;;AACA,aAAK,WAAL;AACE,eAAKtH,cAAL,CAAoBiG,IAApB;;AAEA,cAAIjC,QAAJ,EAAc;AACZiC,YAAAA,IAAI,CAACsB,eAAL,GAAuBtD,eAAvB;AACAgC,YAAAA,IAAI,CAACuB,gBAAL,GAAwBpB,IAAI,CAACC,GAAL,KAAapC,eAArC;AACAC,YAAAA,UAAU,CAACuD,IAAX,CAAgBxB,IAAhB;AACD;;AACD;AAEF;;AACA,aAAK,kBAAL;AACE,eAAKzG,IAAL,GAAYyG,IAAZ,CADF,CAGE;;AACA,cACE,KAAKxG,SAAL,IACA,KAAKS,oBADL,IAEA,KAAKV,IAAL,CAAUkI,MAAV,CAAiB,KAAKjI,SAAtB,MAAqC,CAHvC,EAIE;AACA,gBAAIkI,KAAK,GAAG,KAAKnI,IAAL,CAAUkI,MAAV,CAAiB,KAAKjI,SAAtB,CAAZ;AACAkI,YAAAA,KAAK,CAACC,UAAN,GAAmB,KAAKpI,IAAL,CAAUoI,UAA7B;AACA,iBAAK1H,oBAAL,CAA0ByH,KAA1B;;AAEA,gBAAI3D,QAAJ,EAAc;AACZ2D,cAAAA,KAAK,CAACJ,eAAN,GAAwBtD,eAAxB;AACA0D,cAAAA,KAAK,CAACH,gBAAN,GAAyBpB,IAAI,CAACC,GAAL,KAAapC,eAAtC;AACAC,cAAAA,UAAU,CAACuD,IAAX,CAAgBE,KAAhB;AACD,aATD,CAUA;;AACD,WAfD,MAeO,IAAI,KAAK1H,qBAAT,EAAgC;AACrC,iBAAKA,qBAAL,CAA2BgG,IAA3B;;AAEA,gBAAIjC,QAAJ,EAAc;AACZiC,cAAAA,IAAI,CAACsB,eAAL,GAAuBtD,eAAvB;AACAgC,cAAAA,IAAI,CAACuB,gBAAL,GAAwBpB,IAAI,CAACC,GAAL,KAAapC,eAArC;AACAC,cAAAA,UAAU,CAACuD,IAAX,CAAgBxB,IAAhB;AACD;AACF;;AACD;AAEF;;AACA,aAAK,oBAAL;AACE,eAAK5F,UAAL,CAAgB4F,IAAhB;AACA;;AAEF,aAAK,UAAL;AACE,cAAI4B,aAAa,GAAG,KAAKC,gBAAL,CAAsB7B,IAAI,CAACgB,SAA3B,CAApB;;AACA,eAAKpH,gBAAL,CAAsBgI,aAAtB;;AAEA,cAAI7D,QAAJ,EAAc;AACZ,gBAAI+D,YAAY,GAAG,EAAnB;AACAA,YAAAA,YAAY,CAAC9B,IAAb,GAAoB4B,aAApB;AACAE,YAAAA,YAAY,CAACR,eAAb,GAA+BtD,eAA/B;AACA8D,YAAAA,YAAY,CAACP,gBAAb,GACEpB,IAAI,CAACC,GAAL,KAAapC,eADf;AAEAE,YAAAA,cAAc,CAACsD,IAAf,CAAoBM,YAApB;AACD;;AAED;;AAEF,aAAK,YAAL;AACE,cAAI9B,IAAI,CAAC+B,QAAT,EAAmB;AACjB,gBAAIC,qBAAqB,GAAG,KAAKH,gBAAL,CAC1B7B,IAAI,CAAC+B,QADqB,CAA5B;;AAGA/B,YAAAA,IAAI,CAAC+B,QAAL,GAAgBC,qBAAhB;AACD;;AAED,cAAI,KAAK3H,kBAAT,EAA6B;AAC3B,iBAAKA,kBAAL,CAAwB2F,IAAxB;;AAEA,gBAAIjC,QAAJ,EAAc;AACZ,kBAAIiC,IAAI,CAACiC,KAAT,EAAgB;AACd,oBAAIC,MAAM,GAAG,IAAIC,KAAJ,CACXnG,kBADW,EAEXD,iBAFW,CAAb;AAKAmG,gBAAAA,MAAM,CAACnB,GAAP,GAAaf,IAAI,CAACiC,KAAlB;;AAEAC,gBAAAA,MAAM,CAACjB,MAAP,GAAgB,YAAY;AAC1B,uBAAKvH,aAAL,CAAmBwI,MAAnB;AAEA,sBAAInE,QAAJ,EACE,KAAKqD,kBAAL,CAAwB,OAAxB,EAAiCc,MAAjC;AACH,iBALe,CAKdb,IALc,CAKT,IALS,CAAhB;AAMD;;AAED,kBAAIrB,IAAI,CAACoC,KAAT,EAAgB;AACd,oBAAIF,OAAM,GAAG,IAAIC,KAAJ,CACXlG,iBADW,EAEXC,kBAFW,CAAb;;AAKAgG,gBAAAA,OAAM,CAACnB,GAAP,GAAaf,IAAI,CAACoC,KAAlB;;AAEAF,gBAAAA,OAAM,CAACjB,MAAP,GAAgB,YAAY;AAC1B,uBAAKtH,aAAL,CAAmBuI,OAAnB;AAEA,sBAAInE,QAAJ,EACE,KAAKqD,kBAAL,CAAwB,OAAxB,EAAiCc,OAAjC;AACH,iBALe,CAKdb,IALc,CAKT,IALS,CAAhB;AAMD;;AAED,kBAAIrB,IAAI,CAACzG,IAAT,EAAe;AACbyG,gBAAAA,IAAI,CAACzG,IAAL,CAAU+H,eAAV,GAA4BtD,eAA5B;AACAgC,gBAAAA,IAAI,CAACzG,IAAL,CAAUgI,gBAAV,GACEpB,IAAI,CAACC,GAAL,KAAapC,eADf;AAEAC,gBAAAA,UAAU,CAACuD,IAAX,CAAgBxB,IAAI,CAACzG,IAArB;AACD;;AAED,kBAAIyG,IAAI,CAAC+B,QAAT,EAAmB;AACjB,oBAAIM,aAAa,GAAG,EAApB;AACAA,gBAAAA,aAAa,CAACrC,IAAd,GAAqBA,IAAI,CAAC+B,QAA1B;AACAM,gBAAAA,aAAa,CAACf,eAAd,GAAgCtD,eAAhC;AACAqE,gBAAAA,aAAa,CAACd,gBAAd,GACEpB,IAAI,CAACC,GAAL,KAAapC,eADf;AAEAE,gBAAAA,cAAc,CAACsD,IAAf,CAAoBa,aAApB;AACD;AACF;AACF,WApDD,MAoDO;AACL,gBAAIrC,IAAI,CAACiC,KAAT,EAAgB;AACd,kBAAIK,MAAM,GAAG,IAAIH,KAAJ,CACXnG,kBADW,EAEXD,iBAFW,CAAb;AAKAuG,cAAAA,MAAM,CAACvB,GAAP,GAAaf,IAAI,CAACiC,KAAlB;;AAEAK,cAAAA,MAAM,CAACrB,MAAP,GAAgB,YAAY;AAC1B,qBAAKvH,aAAL,CAAmB4I,MAAnB;AAEA,oBAAIvE,QAAJ,EACE,KAAKqD,kBAAL,CAAwB,OAAxB,EAAiCkB,MAAjC;AACH,eALe,CAKdjB,IALc,CAKT,IALS,CAAhB;AAMD;;AAED,gBAAIrB,IAAI,CAACoC,KAAT,EAAgB;AACd,kBAAIG,QAAQ,GAAG,IAAIJ,KAAJ,CACblG,iBADa,EAEbC,kBAFa,CAAf;AAKAqG,cAAAA,QAAQ,CAACxB,GAAT,GAAef,IAAI,CAACoC,KAApB;;AAEAG,cAAAA,QAAQ,CAACtB,MAAT,GAAkB,YAAY;AAC5B,qBAAKtH,aAAL,CAAmB4I,QAAnB;AAEA,oBAAIxE,QAAJ,EACE,KAAKqD,kBAAL,CAAwB,OAAxB,EAAiCmB,QAAjC;AACH,eALiB,CAKhBlB,IALgB,CAKX,IALW,CAAlB;AAMD;;AAED,gBAAIrB,IAAI,CAACzG,IAAT,EAAe;AACb,mBAAKQ,cAAL,CAAoBiG,IAAI,CAACzG,IAAzB;;AAEA,kBAAIwE,QAAJ,EAAc;AACZiC,gBAAAA,IAAI,CAACzG,IAAL,CAAU+H,eAAV,GAA4BtD,eAA5B;AACAgC,gBAAAA,IAAI,CAACzG,IAAL,CAAUgI,gBAAV,GACEpB,IAAI,CAACC,GAAL,KAAapC,eADf;AAEAC,gBAAAA,UAAU,CAACuD,IAAX,CAAgBxB,IAAI,CAACzG,IAArB;AACD;AACF;;AAED,gBAAIyG,IAAI,CAAC+B,QAAT,EAAmB;AACjB,mBAAKnI,gBAAL,CAAsBoG,IAAI,CAAC+B,QAA3B;;AAEA,kBAAIhE,QAAJ,EAAc;AACZ,oBAAIyE,aAAa,GAAG,EAApB;AACAA,gBAAAA,aAAa,CAACxC,IAAd,GAAqBA,IAAI,CAAC+B,QAA1B;AACAS,gBAAAA,aAAa,CAAClB,eAAd,GAAgCtD,eAAhC;AACAwE,gBAAAA,aAAa,CAACjB,gBAAd,GACEpB,IAAI,CAACC,GAAL,KAAapC,eADf;AAEAE,gBAAAA,cAAc,CAACsD,IAAf,CAAoBgB,aAApB;AACD;AACF;AACF;;AACD;AAlPJ;AAoPD,KAzQD,CAyQEnB,IAzQF,CAyQO,IAzQP,CAFF;AA6QD,GApRD;;AAsRA,OAAKoB,aAAL,GAAqB,UAAUC,UAAV,EAAsB;AACzC,SAAK9B,UAAL,CAAgB8B,UAAhB;AACD,GAFD,CAhdsC,CAodtC;;;AACA,OAAKC,QAAL,GAAgB,UAAUC,QAAV,EAAoB;AAClC5J,IAAAA,OAAO,CAACsH,IAAR,CAAa,mDAAb;;AACA,QAAIsC,QAAJ,EAAc;AACZ,WAAKlJ,aAAL,GAAqBkJ,QAArB;AACD;;AAED,SAAKC,QAAL,CAAc,OAAd;AACD,GAPD;;AASA,OAAKC,UAAL,GAAkB,UAAUF,QAAV,EAAoB;AACpC,QAAIA,QAAJ,EAAc;AACZ,WAAKlJ,aAAL,GAAqBkJ,QAArB;AACD;;AACD,SAAKC,QAAL,CAAc,OAAd;AACD,GALD;;AAOA,OAAKE,UAAL,GAAkB,UAAUH,QAAV,EAAoB;AACpC,QAAIA,QAAJ,EAAc;AACZ,WAAKjJ,aAAL,GAAqBiJ,QAArB;AACD;;AAED,SAAKC,QAAL,CAAc,OAAd;AACD,GAND;;AAQA,OAAKG,aAAL,GAAqB,UAAUJ,QAAV,EAAoB;AACvC,QAAIA,QAAJ,EAAc;AACZ,WAAKhJ,gBAAL,GAAwBgJ,QAAxB;AACD;;AAED,SAAKC,QAAL,CAAc,WAAd;AACD,GAND;;AAQA,OAAKI,aAAL,GAAqB,UAAUL,QAAV,EAAoB;AACvC,QAAIA,QAAJ,EAAc;AACZ,WAAK/I,gBAAL,GAAwB+I,QAAxB;AACD;;AAED,SAAKC,QAAL,CAAc,UAAd;AACD,GAND;;AAQA,OAAKK,eAAL,GAAuB,UAAUN,QAAV,EAAoB;AACzC,QAAIA,QAAJ,EAAc;AACZ,WAAK9I,kBAAL,GAA0B8I,QAA1B;AACD;;AAED,SAAKC,QAAL,CAAc,aAAd;AACD,GAND;;AAQA,OAAKM,WAAL,GAAmB,UAAUP,QAAV,EAAoB;AACrC,QAAIA,QAAJ,EAAc;AACZ,WAAK7I,cAAL,GAAsB6I,QAAtB;AACD;;AAED,SAAKC,QAAL,CAAc,MAAd;AACD,GAND;;AAQA,OAAKO,kBAAL,GAA0B,UAAUR,QAAV,EAAoB;AAC5C,QAAIA,QAAJ,EAAc;AACZ,WAAK5I,qBAAL,GAA6B4I,QAA7B;AACD,KAH2C,CAK5C;;;AACA,SAAKpJ,SAAL,GAAiB,IAAjB;AACA,SAAKS,oBAAL,GAA4B,IAA5B;;AAEA,SAAK4I,QAAL,CAAc,UAAd;AACD,GAVD;;AAYA,OAAKQ,iBAAL,GAAyB,UAAU7J,SAAV,EAAqBoJ,QAArB,EAA+B;AACtD,QAAI,OAAOpJ,SAAP,IAAoB,WAAxB,EAAqC;AACnCR,MAAAA,OAAO,CAACsH,IAAR,CAAa,4BAAb;AACA;AACD;;AAED,QAAI9G,SAAS,IAAIoJ,QAAjB,EAA2B;AACzB,WAAKpJ,SAAL,GAAiBA,SAAjB;AACA,WAAKS,oBAAL,GAA4B2I,QAA5B;AACD;;AAED,SAAKC,QAAL,CAAc,UAAd;AACD,GAZD;;AAcA,OAAKS,eAAL,GAAuB,UAAUC,MAAV,EAAkBX,QAAlB,EAA4B;AACjD,QAAI,OAAOA,QAAP,KAAoB,WAAxB,EAAqC;AACnC,WAAKvI,kBAAL,GAA0BuI,QAA1B;AACD,KAFD,MAEO,IAAI,OAAOA,QAAP,IAAmB,WAAvB,EAAoC;AACzC,WAAKvI,kBAAL,GAA0B,IAA1B;AACD;;AAED8C,IAAAA,UAAU,GAAG,IAAb;AACAC,IAAAA,aAAa,GAAGmG,MAAhB;;AAEA,SAAKC,WAAL,CAAiB,OAAjB,EAA0BD,MAA1B;AACD,GAXD;;AAaA,OAAKE,QAAL,GAAgB,UAAUb,QAAV,EAAoB;AAClC,QAAIA,QAAJ,EAAc;AACZ,WAAK1I,WAAL,GAAmB0I,QAAnB;AACD;;AAED,SAAKC,QAAL,CAAc,KAAd;AACD,GAND;;AAQA,OAAKa,SAAL,GAAiB,UAAUd,QAAV,EAAoB;AACnC,QAAIA,QAAJ,EAAc;AACZ,WAAKzI,YAAL,GAAoByI,QAApB;AACD;;AAED,SAAKC,QAAL,CAAc,MAAd;AACD,GAND,CA5jBsC,CAokBtC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;AACA,OAAKc,OAAL,GAAe,YAAY;AACzB,SAAKd,QAAL,CAAc,UAAd;AACD,GAFD,CAllBsC,CAslBtC;AAEA;;;AACA,OAAKe,cAAL,GAAsB,UAAUhB,QAAV,EAAoB;AACxC5J,IAAAA,OAAO,CAACsH,IAAR,CACE,+DADF;AAGA,SAAK5G,aAAL,GAAqBkJ,QAArB;AACD,GALD;;AAOA,OAAKiB,gBAAL,GAAwB,UAAUjB,QAAV,EAAoB;AAC1C,SAAKlJ,aAAL,GAAqBkJ,QAArB;AACD,GAFD;;AAIA,OAAKkB,gBAAL,GAAwB,UAAUlB,QAAV,EAAoB;AAC1C,SAAKjJ,aAAL,GAAqBiJ,QAArB;AACD,GAFD;;AAIA,OAAKmB,mBAAL,GAA2B,UAAUnB,QAAV,EAAoB;AAC7C,SAAKhJ,gBAAL,GAAwBgJ,QAAxB;AACD,GAFD;;AAIA,OAAKoB,mBAAL,GAA2B,UAAUpB,QAAV,EAAoB;AAC7C,SAAK/I,gBAAL,GAAwB+I,QAAxB;AACD,GAFD;;AAIA,OAAKqB,qBAAL,GAA6B,UAAUrB,QAAV,EAAoB;AAC/C,SAAK9I,kBAAL,GAA0B8I,QAA1B;AACD,GAFD;;AAIA,OAAKsB,iBAAL,GAAyB,UAAUtB,QAAV,EAAoB;AAC3C,SAAK7I,cAAL,GAAsB6I,QAAtB;AACD,GAFD;;AAIA,OAAKuB,wBAAL,GAAgC,UAAUvB,QAAV,EAAoB;AAClD,SAAK5I,qBAAL,GAA6B4I,QAA7B;AACD,GAFD;;AAIA,OAAKwB,cAAL,GAAsB,UAAUxB,QAAV,EAAoB;AACxC,SAAK1I,WAAL,GAAmB0I,QAAnB;AACD,GAFD;;AAIA,OAAKyB,eAAL,GAAuB,UAAUzB,QAAV,EAAoB;AACzC,SAAKzI,YAAL,GAAoByI,QAApB;AACD,GAFD;;AAIA,OAAK0B,aAAL,GAAqB,UAAU1B,QAAV,EAAoB;AACvC,SAAKxI,UAAL,GAAkBwI,QAAlB;AACD,GAFD;;AAIA,OAAK2B,qBAAL,GAA6B,UAAU3B,QAAV,EAAoB;AAC/C,SAAKvI,kBAAL,GAA0BuI,QAA1B;AACD,GAFD;;AAIA,OAAK4B,SAAL,GAAiB,UAAU5B,QAAV,EAAoB;AACnC,QAAI6B,aAAa,GAAG7B,QAApB;;AAEA,QAAI3F,WAAW,KAAK,OAApB,EAA6B;AAC3B,UAAIwE,MAAM,GAAG,KAAKlI,IAAL,CAAUmL,QAAV,CAAmBjD,MAAhC;;AAEA,WAAK,IAAIkD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlD,MAAM,CAAChB,MAA3B,EAAmCkE,CAAC,EAApC,EAAwC;AACtC,YAAIjD,KAAK,GAAGD,MAAM,CAACkD,CAAD,CAAlB;AACAF,QAAAA,aAAa,CAAC/C,KAAD,CAAb;AACD;AACF,KAPD,MAOO;AACL;AACA,WAAK,IAAIkD,SAAT,IAAsB,KAAKrL,IAAL,CAAUkI,MAAhC,EAAwC;AACtC,YAAIC,MAAK,GAAG,KAAKnI,IAAL,CAAUkI,MAAV,CAAiBmD,SAAjB,CAAZ;AACAH,QAAAA,aAAa,CAAC/C,MAAD,CAAb;AACD;AACF;AACF,GAjBD;;AAmBA,OAAKmD,QAAL,GAAgB,UAAUjC,QAAV,EAAoB;AAClC,QAAIkC,YAAY,GAAGlC,QAAnB;AACA,QAAImC,QAAJ;AACA,QAAIC,SAAJ;AACA,QAAIC,aAAJ;AACA,QAAIC,cAAJ;;AAEA,QAAIjI,WAAW,KAAK,OAApB,EAA6B;AAC3B8H,MAAAA,QAAQ,GAAG,KAAKxL,IAAL,CAAUmL,QAAV,CAAmBjD,MAAnB,CAA0B,CAA1B,CAAX;AACAuD,MAAAA,SAAS,GAAG,KAAKzL,IAAL,CAAUmL,QAAV,CAAmBjD,MAAnB,CAA0B,EAA1B,CAAZ;AACAwD,MAAAA,aAAa,GAAG,IAAhB,CAH2B,CAGL;;AACtBC,MAAAA,cAAc,GAAG,IAAjB,CAJ2B,CAIJ;AACxB,KALD,MAKO;AACL;AACAH,MAAAA,QAAQ,GAAG,KAAKxL,IAAL,CAAUkI,MAAV,CAAiB,CAAjB,CAAX;AACAuD,MAAAA,SAAS,GAAG,KAAKzL,IAAL,CAAUkI,MAAV,CAAiB,EAAjB,CAAZ;AACAwD,MAAAA,aAAa,GAAG,KAAKE,aAAL,CAAmB,KAAK5L,IAAL,CAAU0L,aAA7B,CAAhB;AACAC,MAAAA,cAAc,GAAG,KAAKC,aAAL,CAAmB,KAAK5L,IAAL,CAAU2L,cAA7B,CAAjB;AACD;;AAED,QAAIE,KAAK,GAAG;AACVL,MAAAA,QAAQ,EAAEA,QADA;AAEVC,MAAAA,SAAS,EAAEA,SAFD;AAGVC,MAAAA,aAAa,EAAEA,aAHL;AAIVC,MAAAA,cAAc,EAAEA;AAJN,KAAZ;AAOAJ,IAAAA,YAAY,CAACM,KAAD,CAAZ;AACD,GA5BD;;AA8BA,OAAKC,WAAL,GAAmB,YAAY;AAC7BrM,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AACA,SAAKqM,OAAL;AACD,GAHD;;AAKA,OAAKC,UAAL,GAAkB,YAAY;AAC5BvM,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AACA,SAAKqM,OAAL;AACD,GAHD;;AAKA,OAAKE,iBAAL,GAAyB,YAAY;AACnCxM,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;;AACA,SAAKuK,WAAL,CAAiB,QAAjB,EAA2B,OAA3B;AACD,GAHD;;AAKA,OAAKiC,gBAAL,GAAwB,YAAY;AAClCzM,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;;AACA,SAAKuK,WAAL,CAAiB,QAAjB,EAA2B,MAA3B;AACD,GAHD,CA5sBsC,CAitBtC;;;AACA,OAAK5C,UAAL,GAAkB,UAAU8B,UAAV,EAAsB;AACtCzF,IAAAA,WAAW,GAAGyF,UAAd;;AACA,SAAKgD,oBAAL,CAA0BhD,UAA1B;AACD,GAHD;;AAKA,OAAK/B,kBAAL,GAA0B,UAAU+B,UAAV,EAAsB;AAC9C,SAAKc,WAAL,CAAiB,WAAjB,EAA8Bd,UAA9B;AACD,GAFD;;AAIA,OAAKgD,oBAAL,GAA4B,UAAUhD,UAAV,EAAsB;AAChD,QAAIA,UAAU,KAAK,OAAnB,EAA4B;AAC1B/F,MAAAA,UAAU,GAAGN,eAAb;AACAO,MAAAA,WAAW,GAAGN,gBAAd;AAEAO,MAAAA,UAAU,GAAGN,eAAb;AACAO,MAAAA,WAAW,GAAGN,gBAAd;AAEAO,MAAAA,aAAa,GAAGN,aAAhB;AACAO,MAAAA,cAAc,GAAGN,cAAjB;AACD,KATD,MASO,IAAIgG,UAAU,KAAK,SAAnB,EAA8B;AACnC/F,MAAAA,UAAU,GAAGZ,iBAAb;AACAa,MAAAA,WAAW,GAAGZ,kBAAd;AAEAa,MAAAA,UAAU,GAAGZ,iBAAb;AACAa,MAAAA,WAAW,GAAGZ,kBAAd;AAEAa,MAAAA,aAAa,GAAGZ,eAAhB;AACAa,MAAAA,cAAc,GAAGZ,gBAAjB;AACD;AACF,GApBD,CA3tBsC,CAivBtC;;;AACA,OAAKyG,QAAL,GAAgB,UAAUvJ,IAAV,EAAgB;AAC9B,QAAIqM,UAAU,GAAG,IAAjB;AACA,SAAKrM,IAAL,GAAYA,IAAZ;AACAqM,IAAAA,UAAU,GAAG;AACXrM,MAAAA,IAAI,EAAE,KAAKA;AADA,KAAb,CAH8B,CAO9B;;AACA6D,IAAAA,UAAU,GAAG,KAAb;;AAEA,SAAKqG,WAAL,CAAiB,MAAjB,EAAyBmC,UAAzB;AACD,GAXD,CAlvBsC,CA+vBtC;;;AACA,OAAKnC,WAAL,GAAmB,UAAUoC,GAAV,EAAe5F,IAAf,EAAqB;AACtC,QAAI2F,UAAU,GAAG;AACfzF,MAAAA,KAAK,EAAE0F,GADQ;AAEf5F,MAAAA,IAAI,EAAEA;AAFS,KAAjB,CADsC,CAMtC;AACA;;AACA,QAAI,CAAC3C,KAAD,IAAUsI,UAAU,CAACzF,KAAX,KAAqB,WAAnC,EAAgD;AAC9C5C,MAAAA,YAAY,GAAGqI,UAAf;AACA;AACD;;AACDnI,IAAAA,UAAU,CAACqD,IAAX,CAAgB8E,UAAhB;AACD,GAbD,CAhwBsC,CA+wBtC;;;AACA,OAAKzE,eAAL,GAAuB,UAAU2E,KAAV,EAAiB;AACtC,YAAQA,KAAR;AACE,WAAK,OAAL;AACE,aAAKnM,aAAL,CAAmB,KAAKL,GAAxB;AACA;;AAEF,WAAK,OAAL;AACE,aAAKM,aAAL,CAAmB,KAAKN,GAAxB;AACA;;AAEF,WAAK,UAAL;AACE,aAAKQ,gBAAL,CAAsB,KAAKR,GAA3B;AACA;;AAEF,WAAK,YAAL;AACE,aAAKS,kBAAL,CAAwB,KAAKT,GAA7B;AACA;;AAEF,WAAK,KAAL;AACE,aAAKa,WAAL,CAAiB,KAAKb,GAAtB;AACA;;AAEF,WAAK,MAAL;AACE,aAAKc,YAAL,CAAkB,KAAKd,GAAvB;AACA;AAvBJ;AAyBD,GA1BD,CAhxBsC,CA4yBtC;;;AACA,OAAK8L,aAAL,GAAqB,UAAUW,SAAV,EAAqB;AACxC,YAAQA,SAAR;AACE,WAAK,CAAL;AACE,eAAO,SAAP;;AAEF,WAAK,CAAL;AACE,eAAO,YAAP;;AAEF,WAAK,CAAL;AACE,eAAO,MAAP;;AAEF,WAAK,CAAL;AACE,eAAO,QAAP;;AAEF,WAAK,CAAL;AACE,eAAO,OAAP;AAdJ;AAgBD,GAjBD,CA7yBsC,CAg0BtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAKjE,gBAAL,GAAwB,UAAU7B,IAAV,EAAgB;AACtC,QAAI9C,IAAJ,EAAU;AACVA,IAAAA,IAAI,GAAG,IAAP;AAEA,QAAI6I,SAAJ;AACA,QAAIC,WAAJ;AACA,QAAIpE,aAAa,GAAG,EAApB;AAEAtC,IAAAA,WAAW,CAACyB,GAAZ,GAAkBf,IAAlB;AAEA+F,IAAAA,SAAS,GAAG3G,aAAa,CAAC6G,YAAd,CACV,CADU,EAEV,CAFU,EAGV7G,aAAa,CAAC8G,MAAd,CAAqB1G,KAHX,EAIVJ,aAAa,CAAC8G,MAAd,CAAqBzG,MAJX,CAAZ;;AAOA,SAAK,IAAIkF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,SAAS,CAAC/F,IAAV,CAAeS,MAAnC,EAA2CkE,CAAC,IAAI,CAAhD,EAAmD;AACjD,UAAIvC,KAAK,GAAG,CAAC2D,SAAS,CAAC/F,IAAV,CAAe2E,CAAC,GAAG,CAAnB,KAAyB,CAA1B,IAA+BoB,SAAS,CAAC/F,IAAV,CAAe2E,CAAf,CAA3C,CADiD,CACa;;AAC9D/C,MAAAA,aAAa,CAACJ,IAAd,CAAmBY,KAAnB;AACD;;AAEDlF,IAAAA,IAAI,GAAG,KAAP;AACA,WAAO0E,aAAP;AACD,GAxBD,CAn1BsC,CA62BtC;;;AACA,OAAK0D,OAAL,GAAe,YAAY;AACzB,QAAI,CAACvH,QAAL,EAAe;AACb;AACA,UACGZ,UAAU,KAAK,KAAf,IAAwB,KAAK7D,IAAL,KAAc,IAAvC,IACA,KAAKA,IAAL,KAAc,UAFhB,EAGE;AACAN,QAAAA,OAAO,CAACsH,IAAR,CAAa,8CAAb;AACA;AACD;;AAED,UAAI6F,cAAc,GAAG,EAArB,CAVa,CAYb;;AACA,UAAIhJ,UAAJ,EAAgB;AACd,aAAK,IAAIwH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGvH,aAAa,CAACqD,MAAlC,EAA0CkE,CAAC,EAA3C,EAA+C;AAC7CwB,UAAAA,cAAc,CAAC3E,IAAf,CAAoBpE,aAAa,CAACuH,CAAD,CAAjC;AACD;AACF,OAJD,MAIO;AACLwB,QAAAA,cAAc,CAAC3E,IAAf,CAAoB,KAAKlI,IAAzB;AACD,OAnBY,CAqBb;;;AACA,WAAK,IAAI8M,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,cAAc,CAAC1F,MAAnC,EAA2C2F,CAAC,EAA5C,EAAgD;AAC9CjI,QAAAA,cAAc,CAACqD,IAAf,CACE,KAAK6E,oBAAL,CAA0BF,cAAc,CAACC,CAAD,CAAxC,CADF;AAGD;;AAEDpI,MAAAA,eAAe,GAAGmC,IAAI,CAACC,GAAL,EAAlB;AACArC,MAAAA,QAAQ,GAAG,IAAX;AACD,KA9BD,MA8BO;AACLA,MAAAA,QAAQ,GAAG,KAAX,CADK,CAGL;;AACA,WAAK,IAAIuI,CAAC,GAAGnI,cAAc,CAACsC,MAAf,GAAwB,CAArC,EAAwC6F,CAAC,IAAI,CAA7C,EAAgDA,CAAC,EAAjD,EAAqD;AACnDnI,QAAAA,cAAc,CAACmI,CAAD,CAAd,CAAkBC,IAAlB;AACApI,QAAAA,cAAc,CAACqI,MAAf,CAAsBF,CAAtB,EAAyB,CAAzB;AACD;AACF;AACF,GAxCD;;AA0CA,OAAKlF,kBAAL,GAA0B,UAAUyE,KAAV,EAAiBxM,GAAjB,EAAsB;AAC9C,QAAIoN,WAAJ,CAD8C,CAG9C;;AACA,SAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnI,cAAc,CAACsC,MAAnC,EAA2C6F,CAAC,EAA5C,EAAgD;AAC9C,UAAI3H,EAAE,GAAGR,cAAc,CAACmI,CAAD,CAAd,CAAkBJ,MAAlB,CAAyBvH,EAAlC;;AACA,UAAIA,EAAE,CAAC+H,OAAH,CAAWb,KAAX,KAAqB,CAAzB,EAA4B;AAC1BY,QAAAA,WAAW,GAAGtI,cAAc,CAACmI,CAAD,CAAd,CAAkBJ,MAAlB,CAAyB7G,UAAzB,CAAoC,IAApC,CAAd;AACD;AACF,KAT6C,CAW9C;;;AACAoH,IAAAA,WAAW,CAACE,SAAZ,CACE,CADF,EAEE,CAFF,EAGEF,WAAW,CAACP,MAAZ,CAAmB1G,KAHrB,EAIEiH,WAAW,CAACP,MAAZ,CAAmBzG,MAJrB;AAMAgH,IAAAA,WAAW,CAAC5G,SAAZ,CAAsBxG,GAAtB,EAA2B,CAA3B,EAA8B,CAA9B;AACD,GAnBD;;AAqBA,OAAKgN,oBAAL,GAA4B,UAAUR,KAAV,EAAiB;AAC3C,QAAIe,gBAAJ,CAD2C,CAG3C;;AACA,QAAIC,eAAe,GAAGjI,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAtB;AACAgI,IAAAA,eAAe,CAACC,YAAhB,CAA6B,IAA7B,EAAmCjB,KAAK,GAAG1F,IAAI,CAACC,GAAL,EAA3C;;AAEA,QAAIyF,KAAK,IAAI,OAAT,IAAoBA,KAAK,IAAI,KAAjC,EAAwC;AACtCgB,MAAAA,eAAe,CAACrH,KAAhB,GAAwB7C,UAAxB;AACAkK,MAAAA,eAAe,CAACpH,MAAhB,GAAyB7C,WAAzB;AACD,KAHD,MAGO;AACLiK,MAAAA,eAAe,CAACrH,KAAhB,GAAwB3C,UAAxB;AACAgK,MAAAA,eAAe,CAACpH,MAAhB,GAAyB3C,WAAzB;AACD;;AAED,QAAIiK,gBAAgB,GAAG5H,YAAY,CAACE,UAAb,CAAwB,IAAxB,CAAvB;AACA0H,IAAAA,gBAAgB,CAACrH,QAAjB,CACE,CADF,EAEE,CAFF,EAGEmH,eAAe,CAACrH,KAHlB,EAIEqH,eAAe,CAACpH,MAJlB,EAhB2C,CAuB3C;;AACA3B,IAAAA,KAAK,CAACoB,WAAN,CAAkB2H,eAAlB,EAxB2C,CA0B3C;;AACAD,IAAAA,gBAAgB,GAAG,IAAII,aAAJ,CACjBH,eAAe,CAACI,aAAhB,EADiB,CAAnB;AAGAL,IAAAA,gBAAgB,CAACV,MAAjB,GAA0BW,eAA1B;AAEA,QAAIK,WAAW,GAAG,EAAlB;;AAEAN,IAAAA,gBAAgB,CAACO,MAAjB,GAA0B,UAAUvH,CAAV,EAAa;AACrC;AACA,UAAIiG,KAAK,IAAI,MAAT,IAAmBA,KAAK,IAAI,UAAhC,EAA4C;AAC1C,YAAIuB,QAAQ,GAAG,IAAIC,IAAJ,CAAS,CAACC,IAAI,CAACC,SAAL,CAAetJ,UAAf,CAAD,CAAT,EAAuC;AACpDuJ,UAAAA,IAAI,EAAE;AAD8C,SAAvC,CAAf;AAGA,YAAIC,OAAO,GAAGC,GAAG,CAACC,eAAJ,CAAoBP,QAApB,CAAd;AACA,YAAIQ,EAAE,GAAGhJ,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAT;AACAD,QAAAA,QAAQ,CAACrF,IAAT,CAAc2F,WAAd,CAA0B0I,EAA1B;AACAA,QAAAA,EAAE,CAAC9I,KAAH,GAAW,eAAX;AACA8I,QAAAA,EAAE,CAACC,IAAH,GAAUJ,OAAV;AACAG,QAAAA,EAAE,CAACE,QAAH,GAAcjC,KAAK,GAAG1F,IAAI,CAACC,GAAL,EAAR,GAAqB,OAAnC;AACAwH,QAAAA,EAAE,CAACG,KAAH;AACAC,QAAAA,MAAM,CAACN,GAAP,CAAWO,eAAX,CAA2BR,OAA3B,EAX0C,CAa1C;;AACAxJ,QAAAA,UAAU,CAACwC,MAAX,GAAoB,CAApB,CAd0C,CAgB1C;AACD,OAjBD,MAiBO,IAAIoF,KAAK,IAAI,WAAb,EAA0B;AAC/B,YAAIqC,UAAU,GAAG,IAAIb,IAAJ,CAAS,CAACC,IAAI,CAACC,SAAL,CAAerJ,cAAf,CAAD,CAAT,EAA2C;AAC1DsJ,UAAAA,IAAI,EAAE;AADoD,SAA3C,CAAjB;AAGA,YAAIW,SAAS,GAAGT,GAAG,CAACC,eAAJ,CAAoBO,UAApB,CAAhB;AACA,YAAIE,EAAE,GAAGxJ,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAT;AACAD,QAAAA,QAAQ,CAACrF,IAAT,CAAc2F,WAAd,CAA0BkJ,EAA1B;AACAA,QAAAA,EAAE,CAACtJ,KAAH,GAAW,eAAX;AACAsJ,QAAAA,EAAE,CAACP,IAAH,GAAUM,SAAV;AACAC,QAAAA,EAAE,CAACN,QAAH,GAAcjC,KAAK,GAAG1F,IAAI,CAACC,GAAL,EAAR,GAAqB,OAAnC;AACAgI,QAAAA,EAAE,CAACL,KAAH;AACAC,QAAAA,MAAM,CAACN,GAAP,CAAWO,eAAX,CAA2BE,SAA3B,EAX+B,CAa/B;;AACAjK,QAAAA,cAAc,CAACuC,MAAf,GAAwB,CAAxB,CAd+B,CAgB/B;AACD,OAjBM,MAiBA;AACL;AACA,YAAI4H,SAAS,GAAG,IAAIhB,IAAJ,CAASH,WAAT,EAAsB;AAAEM,UAAAA,IAAI,EAAE;AAAR,SAAtB,CAAhB,CAFK,CAIL;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,YAAIc,GAAG,GAAGZ,GAAG,CAACC,eAAJ,CAAoBU,SAApB,CAAV;AACA,YAAIE,CAAC,GAAG3J,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAR;AACAD,QAAAA,QAAQ,CAACrF,IAAT,CAAc2F,WAAd,CAA0BqJ,CAA1B;AACAA,QAAAA,CAAC,CAACzJ,KAAF,GAAU,eAAV;AACAyJ,QAAAA,CAAC,CAACV,IAAF,GAASS,GAAT;AACAC,QAAAA,CAAC,CAACT,QAAF,GAAajC,KAAK,GAAG1F,IAAI,CAACC,GAAL,EAAR,GAAqB,OAAlC;AACAmI,QAAAA,CAAC,CAACR,KAAF;AACAC,QAAAA,MAAM,CAACN,GAAP,CAAWO,eAAX,CAA2BK,GAA3B,EAnBK,CAqBL;;AACApB,QAAAA,WAAW,CAACzG,MAAZ,GAAqB,CAArB;AACD;AACF,KA5DyB,CA4DxBY,IA5DwB,CA4DnB,IA5DmB,CAA1B,CAlC2C,CAgG3C;;;AACAuF,IAAAA,gBAAgB,CAAC4B,eAAjB,GAAmC,UAAU5I,CAAV,EAAa;AAC9CsH,MAAAA,WAAW,CAAC1F,IAAZ,CAAiB5B,CAAC,CAACI,IAAnB;AACD,KAFD,CAjG2C,CAqG3C;;;AACA4G,IAAAA,gBAAgB,CAAC6B,KAAjB;AACA,WAAO7B,gBAAP;AACD,GAxGD;AAyGD,CAthCD;;AAwhCAoB,MAAM,CAAC9O,SAAP,GAAmBA,SAAnB;;;AC5hCA,IAAIwP,UAAU,GAAG,4BAAjB;AAEA,IAAIC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcC,MAA9B;;AAEA,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC1BJ,EAAAA,SAAS,CAACK,IAAV,CAAe,IAAf,EAAqBD,UAArB;AACA,OAAKE,GAAL,GAAW;AACTjJ,IAAAA,IAAI,EAAE4I,MAAM,CAACC,MAAP,CAAcK,OADX;AAETC,IAAAA,gBAAgB,EAAE,EAFT;AAGTC,IAAAA,iBAAiB,EAAE,EAHV;AAITC,IAAAA,MAAM,EAAE,UAAUC,EAAV,EAAc;AACpB,WAAKH,gBAAL,CAAsB3H,IAAtB,CAA2B8H,EAAE,IAAI,YAAY,CAAE,CAA/C;AACD,KANQ;AAOTC,IAAAA,OAAO,EAAE,UAAUD,EAAV,EAAc;AACrB,WAAKF,iBAAL,CAAuB5H,IAAvB,CAA4B8H,EAA5B;AACD;AATQ,GAAX;AAYAV,EAAAA,MAAM,CAACC,MAAP,CAAcK,OAAd,GAAwB,IAAxB;AACD;;AAEDN,MAAM,CAACC,MAAP,CAAcC,MAAd,GAAuBA,MAAvB;AACA,IAAIU,aAAJ,EAAmBC,cAAnB;AAEA,IAAIC,MAAM,GAAGd,MAAM,CAACC,MAAP,CAAca,MAA3B;;AACA,IAAI,CAAC,CAACA,MAAD,IAAW,CAACA,MAAM,CAACC,eAApB,KAAwC,OAAOC,SAAP,KAAqB,WAAjE,EAA8E;AAC5E,MAAIC,QAAQ,GAAG,MAA4BC,QAAQ,CAACD,QAApD;AACA,MAAIE,QAAQ,GAAGD,QAAQ,CAACC,QAAT,KAAsB,QAAtB,GAAiC,KAAjC,GAAyC,IAAxD;AACA,MAAIC,EAAE,GAAG,IAAIJ,SAAJ,CAAcG,QAAQ,GAAG,KAAX,GAAmBF,QAAnB,GAA8B,GAA9B,aAA2D,GAAzE,CAAT;;AACAG,EAAAA,EAAE,CAACC,SAAH,GAAe,UAAS/J,KAAT,EAAgB;AAC7BsJ,IAAAA,aAAa,GAAG,EAAhB;AACAC,IAAAA,cAAc,GAAG,EAAjB;AAEA,QAAIzJ,IAAI,GAAGsH,IAAI,CAAC4C,KAAL,CAAWhK,KAAK,CAACF,IAAjB,CAAX;;AAEA,QAAIA,IAAI,CAACwH,IAAL,KAAc,QAAlB,EAA4B;AAC1B,UAAI2C,OAAO,GAAG,KAAd;AACAnK,MAAAA,IAAI,CAACoK,MAAL,CAAYC,OAAZ,CAAoB,UAASC,KAAT,EAAgB;AAClC,YAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;AAChB,cAAIC,SAAS,GAAGC,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBL,KAAK,CAAC3L,EAA7B,CAA9B;;AACA,cAAI6L,SAAJ,EAAe;AACbL,YAAAA,OAAO,GAAG,IAAV;AACD;AACF;AACF,OAPD,EAF0B,CAW1B;;AACAA,MAAAA,OAAO,GAAGA,OAAO,IAAInK,IAAI,CAACoK,MAAL,CAAYQ,KAAZ,CAAkB,UAASN,KAAT,EAAgB;AACrD,eAAOA,KAAK,CAAC9C,IAAN,KAAe,KAAf,IAAwB8C,KAAK,CAACO,SAAN,CAAgBC,EAA/C;AACD,OAFoB,CAArB;;AAIA,UAAIX,OAAJ,EAAa;AACXnR,QAAAA,OAAO,CAAC+R,KAAR;AAEA/K,QAAAA,IAAI,CAACoK,MAAL,CAAYC,OAAZ,CAAoB,UAAUC,KAAV,EAAiB;AACnCU,UAAAA,QAAQ,CAACN,MAAM,CAACC,aAAR,EAAuBL,KAAvB,CAAR;AACD,SAFD;AAIAb,QAAAA,cAAc,CAACY,OAAf,CAAuB,UAAUY,CAAV,EAAa;AAClCC,UAAAA,YAAY,CAACD,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,CAAZ;AACD,SAFD;AAGD,OAVD,MAUO,IAAInB,QAAQ,CAACqB,MAAb,EAAqB;AAAE;AAC5BrB,QAAAA,QAAQ,CAACqB,MAAT;AACD;AACF;;AAED,QAAInL,IAAI,CAACwH,IAAL,KAAc,QAAlB,EAA4B;AAC1BwC,MAAAA,EAAE,CAACoB,KAAH;;AACApB,MAAAA,EAAE,CAACqB,OAAH,GAAa,YAAY;AACvBvB,QAAAA,QAAQ,CAACqB,MAAT;AACD,OAFD;AAGD;;AAED,QAAInL,IAAI,CAACwH,IAAL,KAAc,gBAAlB,EAAoC;AAClCxO,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AAEAqS,MAAAA,kBAAkB;AACnB;;AAED,QAAItL,IAAI,CAACwH,IAAL,KAAc,OAAlB,EAA2B;AACzBxO,MAAAA,OAAO,CAAC8H,KAAR,CAAc,kBAAkBd,IAAI,CAACc,KAAL,CAAWyK,OAA7B,GAAuC,IAAvC,GAA8CvL,IAAI,CAACc,KAAL,CAAW0K,KAAvE;AAEAF,MAAAA,kBAAkB;AAElB,UAAIG,OAAO,GAAGC,kBAAkB,CAAC1L,IAAD,CAAhC;AACApB,MAAAA,QAAQ,CAACrF,IAAT,CAAc2F,WAAd,CAA0BuM,OAA1B;AACD;AACF,GA1DD;AA2DD;;AAED,SAASH,kBAAT,GAA8B;AAC5B,MAAIG,OAAO,GAAG7M,QAAQ,CAAC+M,cAAT,CAAwBjD,UAAxB,CAAd;;AACA,MAAI+C,OAAJ,EAAa;AACXA,IAAAA,OAAO,CAACG,MAAR;AACD;AACF;;AAED,SAASF,kBAAT,CAA4B1L,IAA5B,EAAkC;AAChC,MAAIyL,OAAO,GAAG7M,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd;AACA4M,EAAAA,OAAO,CAAC9M,EAAR,GAAa+J,UAAb,CAFgC,CAIhC;;AACA,MAAI6C,OAAO,GAAG3M,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd;AACA,MAAIgN,UAAU,GAAGjN,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAjB;AACA0M,EAAAA,OAAO,CAACO,SAAR,GAAoB9L,IAAI,CAACc,KAAL,CAAWyK,OAA/B;AACAM,EAAAA,UAAU,CAACC,SAAX,GAAuB9L,IAAI,CAACc,KAAL,CAAW0K,KAAlC;AAEAC,EAAAA,OAAO,CAACM,SAAR,GACE,2NACE,mFADF,GAEE,yEAFF,GAGE,qEAHF,GAG0ER,OAAO,CAACQ,SAHlF,GAG8F,QAH9F,GAIE,OAJF,GAIYF,UAAU,CAACE,SAJvB,GAImC,QAJnC,GAKA,QANF;AASA,SAAON,OAAP;AAED;;AAED,SAASO,UAAT,CAAoBnD,MAApB,EAA4BlK,EAA5B,EAAgC;AAC9B,MAAIsN,OAAO,GAAGpD,MAAM,CAACoD,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ,WAAO,EAAP;AACD;;AAED,MAAIC,OAAO,GAAG,EAAd;AACA,MAAI5F,CAAJ,EAAO6F,CAAP,EAAUC,GAAV;;AAEA,OAAK9F,CAAL,IAAU2F,OAAV,EAAmB;AACjB,SAAKE,CAAL,IAAUF,OAAO,CAAC3F,CAAD,CAAP,CAAW,CAAX,CAAV,EAAyB;AACvB8F,MAAAA,GAAG,GAAGH,OAAO,CAAC3F,CAAD,CAAP,CAAW,CAAX,EAAc6F,CAAd,CAAN;;AACA,UAAIC,GAAG,KAAKzN,EAAR,IAAe0N,KAAK,CAACC,OAAN,CAAcF,GAAd,KAAsBA,GAAG,CAACA,GAAG,CAAC3L,MAAJ,GAAa,CAAd,CAAH,KAAwB9B,EAAjE,EAAsE;AACpEuN,QAAAA,OAAO,CAAC1K,IAAR,CAAa8E,CAAb;AACD;AACF;AACF;;AAED,MAAIuC,MAAM,CAACa,MAAX,EAAmB;AACjBwC,IAAAA,OAAO,GAAGA,OAAO,CAACK,MAAR,CAAeP,UAAU,CAACnD,MAAM,CAACa,MAAR,EAAgB/K,EAAhB,CAAzB,CAAV;AACD;;AAED,SAAOuN,OAAP;AACD;;AAED,SAASlB,QAAT,CAAkBnC,MAAlB,EAA0ByB,KAA1B,EAAiC;AAC/B,MAAI2B,OAAO,GAAGpD,MAAM,CAACoD,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAIA,OAAO,CAAC3B,KAAK,CAAC3L,EAAP,CAAP,IAAqB,CAACkK,MAAM,CAACa,MAAjC,EAAyC;AACvC,QAAIJ,EAAE,GAAG,IAAIkD,QAAJ,CAAa,SAAb,EAAwB,QAAxB,EAAkC,SAAlC,EAA6ClC,KAAK,CAACO,SAAN,CAAgBC,EAA7D,CAAT;AACAR,IAAAA,KAAK,CAACC,KAAN,GAAc,CAAC0B,OAAO,CAAC3B,KAAK,CAAC3L,EAAP,CAAtB;AACAsN,IAAAA,OAAO,CAAC3B,KAAK,CAAC3L,EAAP,CAAP,GAAoB,CAAC2K,EAAD,EAAKgB,KAAK,CAACmC,IAAX,CAApB;AACD,GAJD,MAIO,IAAI5D,MAAM,CAACa,MAAX,EAAmB;AACxBsB,IAAAA,QAAQ,CAACnC,MAAM,CAACa,MAAR,EAAgBY,KAAhB,CAAR;AACD;AACF;;AAED,SAASG,cAAT,CAAwB5B,MAAxB,EAAgClK,EAAhC,EAAoC;AAClC,MAAIsN,OAAO,GAAGpD,MAAM,CAACoD,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAI,CAACA,OAAO,CAACtN,EAAD,CAAR,IAAgBkK,MAAM,CAACa,MAA3B,EAAmC;AACjC,WAAOe,cAAc,CAAC5B,MAAM,CAACa,MAAR,EAAgB/K,EAAhB,CAArB;AACD;;AAED,MAAI6K,aAAa,CAAC7K,EAAD,CAAjB,EAAuB;AACrB;AACD;;AACD6K,EAAAA,aAAa,CAAC7K,EAAD,CAAb,GAAoB,IAApB;AAEA,MAAI+N,MAAM,GAAG7D,MAAM,CAAC8D,KAAP,CAAahO,EAAb,CAAb;AAEA8K,EAAAA,cAAc,CAACjI,IAAf,CAAoB,CAACqH,MAAD,EAASlK,EAAT,CAApB;;AAEA,MAAI+N,MAAM,IAAIA,MAAM,CAACzD,GAAjB,IAAwByD,MAAM,CAACzD,GAAP,CAAWE,gBAAX,CAA4B1I,MAAxD,EAAgE;AAC9D,WAAO,IAAP;AACD;;AAED,SAAOuL,UAAU,CAACtB,MAAM,CAACC,aAAR,EAAuBhM,EAAvB,CAAV,CAAqCiO,IAArC,CAA0C,UAAUjO,EAAV,EAAc;AAC7D,WAAO8L,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBhM,EAAvB,CAArB;AACD,GAFM,CAAP;AAGD;;AAED,SAASuM,YAAT,CAAsBrC,MAAtB,EAA8BlK,EAA9B,EAAkC;AAChC,MAAI+N,MAAM,GAAG7D,MAAM,CAAC8D,KAAP,CAAahO,EAAb,CAAb;AACAkK,EAAAA,MAAM,CAACK,OAAP,GAAiB,EAAjB;;AACA,MAAIwD,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAACzD,GAAP,CAAWjJ,IAAX,GAAkB6I,MAAM,CAACK,OAAzB;AACD;;AAED,MAAIwD,MAAM,IAAIA,MAAM,CAACzD,GAAjB,IAAwByD,MAAM,CAACzD,GAAP,CAAWG,iBAAX,CAA6B3I,MAAzD,EAAiE;AAC/DiM,IAAAA,MAAM,CAACzD,GAAP,CAAWG,iBAAX,CAA6BiB,OAA7B,CAAqC,UAAUwC,EAAV,EAAc;AACjDA,MAAAA,EAAE,CAAChE,MAAM,CAACK,OAAR,CAAF;AACD,KAFD;AAGD;;AAED,SAAOL,MAAM,CAAC8D,KAAP,CAAahO,EAAb,CAAP;AACAkK,EAAAA,MAAM,CAAClK,EAAD,CAAN;AAEA+N,EAAAA,MAAM,GAAG7D,MAAM,CAAC8D,KAAP,CAAahO,EAAb,CAAT;;AACA,MAAI+N,MAAM,IAAIA,MAAM,CAACzD,GAAjB,IAAwByD,MAAM,CAACzD,GAAP,CAAWE,gBAAX,CAA4B1I,MAAxD,EAAgE;AAC9DiM,IAAAA,MAAM,CAACzD,GAAP,CAAWE,gBAAX,CAA4BkB,OAA5B,CAAoC,UAAUwC,EAAV,EAAc;AAChDA,MAAAA,EAAE;AACH,KAFD;;AAGA,WAAO,IAAP;AACD;AACF","file":"kinectron-client.js","sourceRoot":"..\\src","sourcesContent":["var binaryFeatures = {};\r\nbinaryFeatures.useBlobBuilder = (function(){\r\n  try {\r\n    new Blob([]);\r\n    return false;\r\n  } catch (e) {\r\n    return true;\r\n  }\r\n})();\r\n\r\nbinaryFeatures.useArrayBufferView = !binaryFeatures.useBlobBuilder && (function(){\r\n  try {\r\n    return (new Blob([new Uint8Array([])])).size === 0;\r\n  } catch (e) {\r\n    return true;\r\n  }\r\n})();\r\n\r\nmodule.exports.binaryFeatures = binaryFeatures;\r\nvar BlobBuilder = module.exports.BlobBuilder;\r\nif (typeof window != 'undefined') {\r\n  BlobBuilder = module.exports.BlobBuilder = window.WebKitBlobBuilder ||\r\n    window.MozBlobBuilder || window.MSBlobBuilder || window.BlobBuilder;\r\n}\r\n\r\nfunction BufferBuilder(){\r\n  this._pieces = [];\r\n  this._parts = [];\r\n}\r\n\r\nBufferBuilder.prototype.append = function(data) {\r\n  if(typeof data === 'number') {\r\n    this._pieces.push(data);\r\n  } else {\r\n    this.flush();\r\n    this._parts.push(data);\r\n  }\r\n};\r\n\r\nBufferBuilder.prototype.flush = function() {\r\n  if (this._pieces.length > 0) {\r\n    var buf = new Uint8Array(this._pieces);\r\n    if(!binaryFeatures.useArrayBufferView) {\r\n      buf = buf.buffer;\r\n    }\r\n    this._parts.push(buf);\r\n    this._pieces = [];\r\n  }\r\n};\r\n\r\nBufferBuilder.prototype.getBuffer = function() {\r\n  this.flush();\r\n  if(binaryFeatures.useBlobBuilder) {\r\n    var builder = new BlobBuilder();\r\n    for(var i = 0, ii = this._parts.length; i < ii; i++) {\r\n      builder.append(this._parts[i]);\r\n    }\r\n    return builder.getBlob();\r\n  } else {\r\n    return new Blob(this._parts);\r\n  }\r\n};\r\n\r\nmodule.exports.BufferBuilder = BufferBuilder;\r\n","var BufferBuilder = require('./bufferbuilder').BufferBuilder;\r\nvar binaryFeatures = require('./bufferbuilder').binaryFeatures;\r\n\r\nvar BinaryPack = {\r\n  unpack: function(data){\r\n    var unpacker = new Unpacker(data);\r\n    return unpacker.unpack();\r\n  },\r\n  pack: function(data){\r\n    var packer = new Packer();\r\n    packer.pack(data);\r\n    var buffer = packer.getBuffer();\r\n    return buffer;\r\n  }\r\n};\r\n\r\nmodule.exports = BinaryPack;\r\n\r\nfunction Unpacker (data){\r\n  // Data is ArrayBuffer\r\n  this.index = 0;\r\n  this.dataBuffer = data;\r\n  this.dataView = new Uint8Array(this.dataBuffer);\r\n  this.length = this.dataBuffer.byteLength;\r\n}\r\n\r\nUnpacker.prototype.unpack = function(){\r\n  var type = this.unpack_uint8();\r\n  if (type < 0x80){\r\n    var positive_fixnum = type;\r\n    return positive_fixnum;\r\n  } else if ((type ^ 0xe0) < 0x20){\r\n    var negative_fixnum = (type ^ 0xe0) - 0x20;\r\n    return negative_fixnum;\r\n  }\r\n  var size;\r\n  if ((size = type ^ 0xa0) <= 0x0f){\r\n    return this.unpack_raw(size);\r\n  } else if ((size = type ^ 0xb0) <= 0x0f){\r\n    return this.unpack_string(size);\r\n  } else if ((size = type ^ 0x90) <= 0x0f){\r\n    return this.unpack_array(size);\r\n  } else if ((size = type ^ 0x80) <= 0x0f){\r\n    return this.unpack_map(size);\r\n  }\r\n  switch(type){\r\n    case 0xc0:\r\n      return null;\r\n    case 0xc1:\r\n      return undefined;\r\n    case 0xc2:\r\n      return false;\r\n    case 0xc3:\r\n      return true;\r\n    case 0xca:\r\n      return this.unpack_float();\r\n    case 0xcb:\r\n      return this.unpack_double();\r\n    case 0xcc:\r\n      return this.unpack_uint8();\r\n    case 0xcd:\r\n      return this.unpack_uint16();\r\n    case 0xce:\r\n      return this.unpack_uint32();\r\n    case 0xcf:\r\n      return this.unpack_uint64();\r\n    case 0xd0:\r\n      return this.unpack_int8();\r\n    case 0xd1:\r\n      return this.unpack_int16();\r\n    case 0xd2:\r\n      return this.unpack_int32();\r\n    case 0xd3:\r\n      return this.unpack_int64();\r\n    case 0xd4:\r\n      return undefined;\r\n    case 0xd5:\r\n      return undefined;\r\n    case 0xd6:\r\n      return undefined;\r\n    case 0xd7:\r\n      return undefined;\r\n    case 0xd8:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_string(size);\r\n    case 0xd9:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_string(size);\r\n    case 0xda:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_raw(size);\r\n    case 0xdb:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_raw(size);\r\n    case 0xdc:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_array(size);\r\n    case 0xdd:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_array(size);\r\n    case 0xde:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_map(size);\r\n    case 0xdf:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_map(size);\r\n  }\r\n}\r\n\r\nUnpacker.prototype.unpack_uint8 = function(){\r\n  var byte = this.dataView[this.index] & 0xff;\r\n  this.index++;\r\n  return byte;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint16 = function(){\r\n  var bytes = this.read(2);\r\n  var uint16 =\r\n    ((bytes[0] & 0xff) * 256) + (bytes[1] & 0xff);\r\n  this.index += 2;\r\n  return uint16;\r\n}\r\n\r\nUnpacker.prototype.unpack_uint32 = function(){\r\n  var bytes = this.read(4);\r\n  var uint32 =\r\n     ((bytes[0]  * 256 +\r\n       bytes[1]) * 256 +\r\n       bytes[2]) * 256 +\r\n       bytes[3];\r\n  this.index += 4;\r\n  return uint32;\r\n}\r\n\r\nUnpacker.prototype.unpack_uint64 = function(){\r\n  var bytes = this.read(8);\r\n  var uint64 =\r\n   ((((((bytes[0]  * 256 +\r\n       bytes[1]) * 256 +\r\n       bytes[2]) * 256 +\r\n       bytes[3]) * 256 +\r\n       bytes[4]) * 256 +\r\n       bytes[5]) * 256 +\r\n       bytes[6]) * 256 +\r\n       bytes[7];\r\n  this.index += 8;\r\n  return uint64;\r\n}\r\n\r\n\r\nUnpacker.prototype.unpack_int8 = function(){\r\n  var uint8 = this.unpack_uint8();\r\n  return (uint8 < 0x80 ) ? uint8 : uint8 - (1 << 8);\r\n};\r\n\r\nUnpacker.prototype.unpack_int16 = function(){\r\n  var uint16 = this.unpack_uint16();\r\n  return (uint16 < 0x8000 ) ? uint16 : uint16 - (1 << 16);\r\n}\r\n\r\nUnpacker.prototype.unpack_int32 = function(){\r\n  var uint32 = this.unpack_uint32();\r\n  return (uint32 < Math.pow(2, 31) ) ? uint32 :\r\n    uint32 - Math.pow(2, 32);\r\n}\r\n\r\nUnpacker.prototype.unpack_int64 = function(){\r\n  var uint64 = this.unpack_uint64();\r\n  return (uint64 < Math.pow(2, 63) ) ? uint64 :\r\n    uint64 - Math.pow(2, 64);\r\n}\r\n\r\nUnpacker.prototype.unpack_raw = function(size){\r\n  if ( this.length < this.index + size){\r\n    throw new Error('BinaryPackFailure: index is out of range'\r\n      + ' ' + this.index + ' ' + size + ' ' + this.length);\r\n  }\r\n  var buf = this.dataBuffer.slice(this.index, this.index + size);\r\n  this.index += size;\r\n\r\n    //buf = util.bufferToString(buf);\r\n\r\n  return buf;\r\n}\r\n\r\nUnpacker.prototype.unpack_string = function(size){\r\n  var bytes = this.read(size);\r\n  var i = 0, str = '', c, code;\r\n  while(i < size){\r\n    c = bytes[i];\r\n    if ( c < 128){\r\n      str += String.fromCharCode(c);\r\n      i++;\r\n    } else if ((c ^ 0xc0) < 32){\r\n      code = ((c ^ 0xc0) << 6) | (bytes[i+1] & 63);\r\n      str += String.fromCharCode(code);\r\n      i += 2;\r\n    } else {\r\n      code = ((c & 15) << 12) | ((bytes[i+1] & 63) << 6) |\r\n        (bytes[i+2] & 63);\r\n      str += String.fromCharCode(code);\r\n      i += 3;\r\n    }\r\n  }\r\n  this.index += size;\r\n  return str;\r\n}\r\n\r\nUnpacker.prototype.unpack_array = function(size){\r\n  var objects = new Array(size);\r\n  for(var i = 0; i < size ; i++){\r\n    objects[i] = this.unpack();\r\n  }\r\n  return objects;\r\n}\r\n\r\nUnpacker.prototype.unpack_map = function(size){\r\n  var map = {};\r\n  for(var i = 0; i < size ; i++){\r\n    var key  = this.unpack();\r\n    var value = this.unpack();\r\n    map[key] = value;\r\n  }\r\n  return map;\r\n}\r\n\r\nUnpacker.prototype.unpack_float = function(){\r\n  var uint32 = this.unpack_uint32();\r\n  var sign = uint32 >> 31;\r\n  var exp  = ((uint32 >> 23) & 0xff) - 127;\r\n  var fraction = ( uint32 & 0x7fffff ) | 0x800000;\r\n  return (sign == 0 ? 1 : -1) *\r\n    fraction * Math.pow(2, exp - 23);\r\n}\r\n\r\nUnpacker.prototype.unpack_double = function(){\r\n  var h32 = this.unpack_uint32();\r\n  var l32 = this.unpack_uint32();\r\n  var sign = h32 >> 31;\r\n  var exp  = ((h32 >> 20) & 0x7ff) - 1023;\r\n  var hfrac = ( h32 & 0xfffff ) | 0x100000;\r\n  var frac = hfrac * Math.pow(2, exp - 20) +\r\n    l32   * Math.pow(2, exp - 52);\r\n  return (sign == 0 ? 1 : -1) * frac;\r\n}\r\n\r\nUnpacker.prototype.read = function(length){\r\n  var j = this.index;\r\n  if (j + length <= this.length) {\r\n    return this.dataView.subarray(j, j + length);\r\n  } else {\r\n    throw new Error('BinaryPackFailure: read index out of range');\r\n  }\r\n}\r\n\r\nfunction Packer(){\r\n  this.bufferBuilder = new BufferBuilder();\r\n}\r\n\r\nPacker.prototype.getBuffer = function(){\r\n  return this.bufferBuilder.getBuffer();\r\n}\r\n\r\nPacker.prototype.pack = function(value){\r\n  var type = typeof(value);\r\n  if (type == 'string'){\r\n    this.pack_string(value);\r\n  } else if (type == 'number'){\r\n    if (Math.floor(value) === value){\r\n      this.pack_integer(value);\r\n    } else{\r\n      this.pack_double(value);\r\n    }\r\n  } else if (type == 'boolean'){\r\n    if (value === true){\r\n      this.bufferBuilder.append(0xc3);\r\n    } else if (value === false){\r\n      this.bufferBuilder.append(0xc2);\r\n    }\r\n  } else if (type == 'undefined'){\r\n    this.bufferBuilder.append(0xc0);\r\n  } else if (type == 'object'){\r\n    if (value === null){\r\n      this.bufferBuilder.append(0xc0);\r\n    } else {\r\n      var constructor = value.constructor;\r\n      if (constructor == Array){\r\n        this.pack_array(value);\r\n      } else if (constructor == Blob || constructor == File) {\r\n        this.pack_bin(value);\r\n      } else if (constructor == ArrayBuffer) {\r\n        if(binaryFeatures.useArrayBufferView) {\r\n          this.pack_bin(new Uint8Array(value));\r\n        } else {\r\n          this.pack_bin(value);\r\n        }\r\n      } else if ('BYTES_PER_ELEMENT' in value){\r\n        if(binaryFeatures.useArrayBufferView) {\r\n          this.pack_bin(new Uint8Array(value.buffer));\r\n        } else {\r\n          this.pack_bin(value.buffer);\r\n        }\r\n      } else if (constructor == Object){\r\n        this.pack_object(value);\r\n      } else if (constructor == Date){\r\n        this.pack_string(value.toString());\r\n      } else if (typeof value.toBinaryPack == 'function'){\r\n        this.bufferBuilder.append(value.toBinaryPack());\r\n      } else {\r\n        throw new Error('Type \"' + constructor.toString() + '\" not yet supported');\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error('Type \"' + type + '\" not yet supported');\r\n  }\r\n  this.bufferBuilder.flush();\r\n}\r\n\r\n\r\nPacker.prototype.pack_bin = function(blob){\r\n  var length = blob.length || blob.byteLength || blob.size;\r\n  if (length <= 0x0f){\r\n    this.pack_uint8(0xa0 + length);\r\n  } else if (length <= 0xffff){\r\n    this.bufferBuilder.append(0xda) ;\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff){\r\n    this.bufferBuilder.append(0xdb);\r\n    this.pack_uint32(length);\r\n  } else{\r\n    throw new Error('Invalid length');\r\n  }\r\n  this.bufferBuilder.append(blob);\r\n}\r\n\r\nPacker.prototype.pack_string = function(str){\r\n  var length = utf8Length(str);\r\n\r\n  if (length <= 0x0f){\r\n    this.pack_uint8(0xb0 + length);\r\n  } else if (length <= 0xffff){\r\n    this.bufferBuilder.append(0xd8) ;\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff){\r\n    this.bufferBuilder.append(0xd9);\r\n    this.pack_uint32(length);\r\n  } else{\r\n    throw new Error('Invalid length');\r\n  }\r\n  this.bufferBuilder.append(str);\r\n}\r\n\r\nPacker.prototype.pack_array = function(ary){\r\n  var length = ary.length;\r\n  if (length <= 0x0f){\r\n    this.pack_uint8(0x90 + length);\r\n  } else if (length <= 0xffff){\r\n    this.bufferBuilder.append(0xdc)\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff){\r\n    this.bufferBuilder.append(0xdd);\r\n    this.pack_uint32(length);\r\n  } else{\r\n    throw new Error('Invalid length');\r\n  }\r\n  for(var i = 0; i < length ; i++){\r\n    this.pack(ary[i]);\r\n  }\r\n}\r\n\r\nPacker.prototype.pack_integer = function(num){\r\n  if ( -0x20 <= num && num <= 0x7f){\r\n    this.bufferBuilder.append(num & 0xff);\r\n  } else if (0x00 <= num && num <= 0xff){\r\n    this.bufferBuilder.append(0xcc);\r\n    this.pack_uint8(num);\r\n  } else if (-0x80 <= num && num <= 0x7f){\r\n    this.bufferBuilder.append(0xd0);\r\n    this.pack_int8(num);\r\n  } else if ( 0x0000 <= num && num <= 0xffff){\r\n    this.bufferBuilder.append(0xcd);\r\n    this.pack_uint16(num);\r\n  } else if (-0x8000 <= num && num <= 0x7fff){\r\n    this.bufferBuilder.append(0xd1);\r\n    this.pack_int16(num);\r\n  } else if ( 0x00000000 <= num && num <= 0xffffffff){\r\n    this.bufferBuilder.append(0xce);\r\n    this.pack_uint32(num);\r\n  } else if (-0x80000000 <= num && num <= 0x7fffffff){\r\n    this.bufferBuilder.append(0xd2);\r\n    this.pack_int32(num);\r\n  } else if (-0x8000000000000000 <= num && num <= 0x7FFFFFFFFFFFFFFF){\r\n    this.bufferBuilder.append(0xd3);\r\n    this.pack_int64(num);\r\n  } else if (0x0000000000000000 <= num && num <= 0xFFFFFFFFFFFFFFFF){\r\n    this.bufferBuilder.append(0xcf);\r\n    this.pack_uint64(num);\r\n  } else{\r\n    throw new Error('Invalid integer');\r\n  }\r\n}\r\n\r\nPacker.prototype.pack_double = function(num){\r\n  var sign = 0;\r\n  if (num < 0){\r\n    sign = 1;\r\n    num = -num;\r\n  }\r\n  var exp  = Math.floor(Math.log(num) / Math.LN2);\r\n  var frac0 = num / Math.pow(2, exp) - 1;\r\n  var frac1 = Math.floor(frac0 * Math.pow(2, 52));\r\n  var b32   = Math.pow(2, 32);\r\n  var h32 = (sign << 31) | ((exp+1023) << 20) |\r\n      (frac1 / b32) & 0x0fffff;\r\n  var l32 = frac1 % b32;\r\n  this.bufferBuilder.append(0xcb);\r\n  this.pack_int32(h32);\r\n  this.pack_int32(l32);\r\n}\r\n\r\nPacker.prototype.pack_object = function(obj){\r\n  var keys = Object.keys(obj);\r\n  var length = keys.length;\r\n  if (length <= 0x0f){\r\n    this.pack_uint8(0x80 + length);\r\n  } else if (length <= 0xffff){\r\n    this.bufferBuilder.append(0xde);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff){\r\n    this.bufferBuilder.append(0xdf);\r\n    this.pack_uint32(length);\r\n  } else{\r\n    throw new Error('Invalid length');\r\n  }\r\n  for(var prop in obj){\r\n    if (obj.hasOwnProperty(prop)){\r\n      this.pack(prop);\r\n      this.pack(obj[prop]);\r\n    }\r\n  }\r\n}\r\n\r\nPacker.prototype.pack_uint8 = function(num){\r\n  this.bufferBuilder.append(num);\r\n}\r\n\r\nPacker.prototype.pack_uint16 = function(num){\r\n  this.bufferBuilder.append(num >> 8);\r\n  this.bufferBuilder.append(num & 0xff);\r\n}\r\n\r\nPacker.prototype.pack_uint32 = function(num){\r\n  var n = num & 0xffffffff;\r\n  this.bufferBuilder.append((n & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((n & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((n & 0x0000ff00) >>>  8);\r\n  this.bufferBuilder.append((n & 0x000000ff));\r\n}\r\n\r\nPacker.prototype.pack_uint64 = function(num){\r\n  var high = num / Math.pow(2, 32);\r\n  var low  = num % Math.pow(2, 32);\r\n  this.bufferBuilder.append((high & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((high & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((high & 0x0000ff00) >>>  8);\r\n  this.bufferBuilder.append((high & 0x000000ff));\r\n  this.bufferBuilder.append((low  & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((low  & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((low  & 0x0000ff00) >>>  8);\r\n  this.bufferBuilder.append((low  & 0x000000ff));\r\n}\r\n\r\nPacker.prototype.pack_int8 = function(num){\r\n  this.bufferBuilder.append(num & 0xff);\r\n}\r\n\r\nPacker.prototype.pack_int16 = function(num){\r\n  this.bufferBuilder.append((num & 0xff00) >> 8);\r\n  this.bufferBuilder.append(num & 0xff);\r\n}\r\n\r\nPacker.prototype.pack_int32 = function(num){\r\n  this.bufferBuilder.append((num >>> 24) & 0xff);\r\n  this.bufferBuilder.append((num & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((num & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((num & 0x000000ff));\r\n}\r\n\r\nPacker.prototype.pack_int64 = function(num){\r\n  var high = Math.floor(num / Math.pow(2, 32));\r\n  var low  = num % Math.pow(2, 32);\r\n  this.bufferBuilder.append((high & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((high & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((high & 0x0000ff00) >>>  8);\r\n  this.bufferBuilder.append((high & 0x000000ff));\r\n  this.bufferBuilder.append((low  & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((low  & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((low  & 0x0000ff00) >>>  8);\r\n  this.bufferBuilder.append((low  & 0x000000ff));\r\n}\r\n\r\nfunction _utf8Replace(m){\r\n  var code = m.charCodeAt(0);\r\n\r\n  if(code <= 0x7ff) return '00';\r\n  if(code <= 0xffff) return '000';\r\n  if(code <= 0x1fffff) return '0000';\r\n  if(code <= 0x3ffffff) return '00000';\r\n  return '000000';\r\n}\r\n\r\nfunction utf8Length(str){\r\n  if (str.length > 600) {\r\n    // Blob method faster for large strings\r\n    return (new Blob([str])).size;\r\n  } else {\r\n    return str.replace(/[^\\u0000-\\u007F]/g, _utf8Replace).length;\r\n  }\r\n}\r\n","import { adapter as _ } from \"webrtc-adapter\";\n\nexport const RTCSessionDescription =\n  // @ts-ignore\n  window.RTCSessionDescription || window.mozRTCSessionDescription;\nexport const RTCPeerConnection =\n  // @ts-ignore\n  window.RTCPeerConnection ||\n  // @ts-ignore\n  window.mozRTCPeerConnection ||\n  // @ts-ignore\n  window.webkitRTCPeerConnection;\nexport const RTCIceCandidate =\n  // @ts-ignore\n  window.RTCIceCandidate || window.mozRTCIceCandidate;\n","import * as BinaryPack from \"js-binarypack\";\nimport { RTCPeerConnection } from \"./adapter\";\n\nconst DEFAULT_CONFIG = {\n  iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }],\n  sdpSemantics: \"unified-plan\"\n};\n\nexport class util {\n  static noop(): void { }\n\n  static readonly CLOUD_HOST = \"0.peerjs.com\";\n  static readonly CLOUD_PORT = 443;\n\n  // Browsers that need chunking:\n  static readonly chunkedBrowsers = { Chrome: 1 };\n  static readonly chunkedMTU = 16300; // The original 60000 bytes setting does not work when sending data from Firefox to Chrome, which is \"cut off\" after 16384 bytes and delivered individually.\n\n  // Returns browser-agnostic default config\n  static readonly defaultConfig = DEFAULT_CONFIG;\n\n  // Returns the current browser.\n  static readonly browser: string = (function (global) {\n    // @ts-ignore\n    if (global.mozRTCPeerConnection) {\n      return \"Firefox\";\n    }\n    // @ts-ignore\n    if (global.webkitRTCPeerConnection) {\n      return \"Chrome\";\n    }\n\n    if (global.RTCPeerConnection) {\n      return \"Supported\";\n    }\n\n    return \"Unsupported\";\n  })(window);\n\n  // Lists which features are supported\n  static readonly supports = (function () {\n    if (typeof RTCPeerConnection === \"undefined\") {\n      return {};\n    }\n\n    let data = true;\n    let audioVideo = true;\n\n    let binaryBlob = false;\n    let sctp = false;\n    // @ts-ignore\n    const onnegotiationneeded = !!window.webkitRTCPeerConnection;\n\n    let pc, dc;\n\n    try {\n      pc = new RTCPeerConnection(DEFAULT_CONFIG, {\n        optional: [{ RtpDataChannels: true }]\n      });\n    } catch (e) {\n      data = false;\n      audioVideo = false;\n    }\n\n    if (data) {\n      try {\n        dc = pc.createDataChannel(\"_PEERJSTEST\");\n      } catch (e) {\n        data = false;\n      }\n    }\n\n    if (data) {\n      // Binary test\n      try {\n        dc.binaryType = \"blob\";\n        binaryBlob = true;\n      } catch (e) { }\n\n      // Reliable test.\n      // Unfortunately Chrome is a bit unreliable about whether or not they\n      // support reliable.\n      const reliablePC = new RTCPeerConnection(DEFAULT_CONFIG, {});\n      try {\n        const reliableDC = reliablePC.createDataChannel(\n          \"_PEERJSRELIABLETEST\",\n          {}\n        );\n        sctp = reliableDC.ordered;\n      } catch (e) { }\n      reliablePC.close();\n    }\n\n    // FIXME: not really the best check...\n    if (audioVideo) {\n      audioVideo = !!pc.addStream;\n    }\n\n    if (pc) {\n      pc.close();\n    }\n\n    return {\n      audioVideo: audioVideo,\n      data: data,\n      binaryBlob: binaryBlob,\n      binary: sctp, // deprecated; sctp implies binary support.\n      reliable: sctp, // deprecated; sctp implies reliable data.\n      sctp: sctp,\n      onnegotiationneeded: onnegotiationneeded\n    };\n  })();\n\n  // Ensure alphanumeric ids\n  static validateId(id: string): boolean {\n    // Allow empty ids\n    return !id || /^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/.test(id);\n  }\n\n  static pack = BinaryPack.pack;\n  static unpack = BinaryPack.unpack;\n\n  // Binary stuff\n\n  private static _dataCount = 1;\n\n  // chunks a blob.\n  static chunk(bl: Blob): any[] {\n    const chunks = [];\n    const size = bl.size;\n    const total = Math.ceil(size / util.chunkedMTU);\n\n    let index;\n    let start = (index = 0);\n\n    while (start < size) {\n      const end = Math.min(size, start + util.chunkedMTU);\n      const b = bl.slice(start, end);\n\n      const chunk = {\n        __peerData: this._dataCount,\n        n: index,\n        data: b,\n        total: total\n      };\n\n      chunks.push(chunk);\n\n      start = end;\n      index++;\n    }\n\n    this._dataCount++;\n\n    return chunks;\n  }\n\n  static blobToArrayBuffer(blob: Blob, cb: (arg: any) => void): void {\n    const fr = new FileReader();\n\n    fr.onload = function (evt) {\n      // @ts-ignore\n      cb(evt.target.result);\n    };\n\n    fr.readAsArrayBuffer(blob);\n  }\n\n  static blobToBinaryString(blob: Blob, cb: (arg: any) => void): void {\n    const fr = new FileReader();\n\n    fr.onload = function (evt) {\n      // @ts-ignore\n      cb(evt.target.result);\n    };\n\n    fr.readAsBinaryString(blob);\n  }\n\n  static binaryStringToArrayBuffer(binary): ArrayBuffer | SharedArrayBuffer {\n    let byteArray = new Uint8Array(binary.length);\n\n    for (let i = 0; i < binary.length; i++) {\n      byteArray[i] = binary.charCodeAt(i) & 0xff;\n    }\n\n    return byteArray.buffer;\n  }\n\n  static randomToken(): string {\n    return Math.random()\n      .toString(36)\n      .substr(2);\n  }\n\n  static isSecure(): boolean {\n    return location.protocol === \"https:\";\n  }\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","const LOG_PREFIX = 'PeerJS: ';\n\n/*\nPrints log messages depending on the debug level passed in. Defaults to 0.\n0  Prints no logs.\n1  Prints only errors.\n2  Prints errors and warnings.\n3  Prints all logs.\n*/\nexport enum LogLevel {\n    Disabled,\n    Errors,\n    Warnings,\n    All\n}\n\nclass Logger {\n    private _logLevel = LogLevel.Disabled;\n\n    get logLevel(): LogLevel { return this._logLevel; }\n\n    set logLevel(logLevel: LogLevel) { this._logLevel = logLevel; }\n\n    log(...args) {\n        if (this._logLevel >= LogLevel.All) {\n            this._print(LogLevel.All, ...args);\n        }\n    }\n\n    warn(...args) {\n        if (this._logLevel >= LogLevel.Warnings) {\n            this._print(LogLevel.Warnings, ...args);\n        }\n    }\n\n    error(...args) {\n        if (this._logLevel >= LogLevel.Errors) {\n            this._print(LogLevel.Errors, ...args);\n        }\n    }\n\n    setLogFunction(fn: (logLevel: LogLevel, ..._) => void): void {\n        this._print = fn;\n    }\n\n    private _print(logLevel: LogLevel, ...rest): void {\n        const copy = [LOG_PREFIX, ...rest];\n\n        for (let i in copy) {\n            if (copy[i] instanceof Error) {\n                copy[i] = \"(\" + copy[i].name + \") \" + copy[i].message;\n\n            }\n        }\n\n        if (logLevel >= LogLevel.All) {\n            console.log(...copy);\n        } else if (logLevel >= LogLevel.Warnings) {\n            console.warn(\"WARNING\", ...copy);\n        } else if (logLevel >= LogLevel.Errors) {\n            console.error(\"ERROR\", ...copy);\n        }\n    }\n}\n\nexport default new Logger();","export enum ConnectionEventType {\n  Open = \"open\",\n  Stream = \"stream\",\n  Data = \"data\",\n  Close = \"close\",\n  Error = \"error\",\n  IceStateChanged = \"iceStateChanged\"\n}\n\nexport enum ConnectionType {\n  Data = \"data\",\n  Media = \"media\"\n}\n\nexport enum PeerEventType {\n  Open = \"open\",\n  Close = \"close\",\n  Connection = \"connection\",\n  Call = \"call\",\n  Disconnected = \"disconnected\",\n  Error = \"error\"\n}\n\nexport enum PeerErrorType {\n  BrowserIncompatible = \"browser-incompatible\",\n  Disconnected = \"disconnected\",\n  InvalidID = \"invalid-id\",\n  InvalidKey = \"invalid-key\",\n  Network = \"network\",\n  PeerUnavailable = \"peer-unavailable\",\n  SslUnavailable = \"ssl-unavailable\",\n  ServerError = \"server-error\",\n  SocketError = \"socket-error\",\n  SocketClosed = \"socket-closed\",\n  UnavailableID = \"unavailable-id\",\n  WebRTC = \"webrtc\"\n}\n\nexport enum SerializationType {\n  Binary = \"binary\",\n  BinaryUTF8 = \"binary-utf8\",\n  JSON = \"json\"\n}\n\nexport enum SocketEventType {\n  Message = \"message\",\n  Disconnected = \"disconnected\",\n  Error = \"error\",\n  Close = \"close\"\n}\n\nexport enum ServerMessageType {\n  Heartbeat = \"HEARTBEAT\",\n  Candidate = \"CANDIDATE\",\n  Offer = \"OFFER\",\n  Answer = \"ANSWER\",\n  Open = \"OPEN\", // The connection to the server is open.\n  Error = \"ERROR\", // Server error.\n  IdTaken = \"ID-TAKEN\", // The selected ID is taken.\n  InvalidKey = \"INVALID-KEY\", // The given API key cannot be found.\n  Leave = \"LEAVE\", // Another peer has closed its connection to this peer.\n  Expire = \"EXPIRE\" // The offer sent to a peer has expired without response.\n\n}","import { EventEmitter } from \"eventemitter3\";\nimport logger from \"./logger\";\nimport { SocketEventType, ServerMessageType } from \"./enums\";\n\n/**\n * An abstraction on top of WebSockets to provide fastest\n * possible connection for peers.\n */\nexport class Socket extends EventEmitter {\n  private _disconnected = false;\n  private _id: string;\n  private _messagesQueue: Array<any> = [];\n  private _wsUrl: string;\n  private _socket: WebSocket;\n  private _wsPingTimer: any;\n\n  constructor(\n    secure: any,\n    host: string,\n    port: number,\n    path: string,\n    key: string,\n    private readonly pingInterval: number = 5000,\n  ) {\n    super();\n\n    const wsProtocol = secure ? \"wss://\" : \"ws://\";\n\n    this._wsUrl = wsProtocol + host + \":\" + port + path + \"peerjs?key=\" + key;\n  }\n\n  /** Check in with ID or get one from server. */\n  start(id: string, token: string): void {\n    this._id = id;\n\n    this._wsUrl += \"&id=\" + id + \"&token=\" + token;\n\n    this._startWebSocket();\n  }\n\n  /** Start up websocket communications. */\n  private _startWebSocket(): void {\n    if (this._socket) {\n      return;\n    }\n\n    this._socket = new WebSocket(this._wsUrl);\n\n    this._socket.onmessage = (event) => {\n      let data;\n\n      try {\n        data = JSON.parse(event.data);\n      } catch (e) {\n        logger.log(\"Invalid server message\", event.data);\n        return;\n      }\n\n      this.emit(SocketEventType.Message, data);\n    };\n\n    this._socket.onclose = (event) => {\n      logger.log(\"Socket closed.\", event);;\n\n      this._disconnected = true;\n      clearTimeout(this._wsPingTimer);\n\n      this.emit(SocketEventType.Disconnected);\n    };\n\n    // Take care of the queue of connections if necessary and make sure Peer knows\n    // socket is open.\n    this._socket.onopen = () => {\n      if (this._disconnected) return;\n\n      this._sendQueuedMessages();\n\n      logger.log(\"Socket open\");\n\n      this._scheduleHeartbeat();\n    };\n  }\n\n  private _scheduleHeartbeat(): void {\n    this._wsPingTimer = setTimeout(() => { this._sendHeartbeat() }, this.pingInterval);\n  }\n\n  private _sendHeartbeat(): void {\n    if (!this._wsOpen()) {\n      logger.log(`Cannot send heartbeat, because socket closed`);\n      return;\n    }\n\n    const message = JSON.stringify({ type: ServerMessageType.Heartbeat });\n\n    this._socket.send(message);\n\n    this._scheduleHeartbeat();\n  }\n\n  /** Is the websocket currently open? */\n  private _wsOpen(): boolean {\n    return !!this._socket && this._socket.readyState == 1;\n  }\n\n  /** Send queued messages. */\n  private _sendQueuedMessages(): void {\n    //Create copy of queue and clear it,\n    //because send method push the message back to queue if smth will go wrong\n    const copiedQueue = [...this._messagesQueue];\n    this._messagesQueue = [];\n\n    for (const message of copiedQueue) {\n      this.send(message);\n    }\n  }\n\n  /** Exposed send for DC & Peer. */\n  send(data: any): void {\n    if (this._disconnected) {\n      return;\n    }\n\n    // If we didn't get an ID yet, we can't yet send anything so we should queue\n    // up these messages.\n    if (!this._id) {\n      this._messagesQueue.push(data);\n      return;\n    }\n\n    if (!data.type) {\n      this.emit(SocketEventType.Error, \"Invalid message\");\n      return;\n    }\n\n    if (!this._wsOpen()) {\n      return;\n    }\n\n    const message = JSON.stringify(data);\n\n    this._socket.send(message);\n  }\n\n  close(): void {\n    if (!this._disconnected && !!this._socket) {\n      this._socket.close();\n      this._disconnected = true;\n      clearTimeout(this._wsPingTimer);\n    }\n  }\n}\n","var BinaryPack = require('js-binarypack');\n\nvar util = {\n  debug: false,\n  \n  inherits: function(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  },\n  extend: function(dest, source) {\n    for(var key in source) {\n      if(source.hasOwnProperty(key)) {\n        dest[key] = source[key];\n      }\n    }\n    return dest;\n  },\n  pack: BinaryPack.pack,\n  unpack: BinaryPack.unpack,\n  \n  log: function () {\n    if (util.debug) {\n      var copy = [];\n      for (var i = 0; i < arguments.length; i++) {\n        copy[i] = arguments[i];\n      }\n      copy.unshift('Reliable: ');\n      console.log.apply(console, copy);\n    }\n  },\n\n  setZeroTimeout: (function(global) {\n    var timeouts = [];\n    var messageName = 'zero-timeout-message';\n\n    // Like setTimeout, but only takes a function argument.\t There's\n    // no time argument (always zero) and no arguments (you have to\n    // use a closure).\n    function setZeroTimeoutPostMessage(fn) {\n      timeouts.push(fn);\n      global.postMessage(messageName, '*');\n    }\t\t\n\n    function handleMessage(event) {\n      if (event.source == global && event.data == messageName) {\n        if (event.stopPropagation) {\n          event.stopPropagation();\n        }\n        if (timeouts.length) {\n          timeouts.shift()();\n        }\n      }\n    }\n    if (global.addEventListener) {\n      global.addEventListener('message', handleMessage, true);\n    } else if (global.attachEvent) {\n      global.attachEvent('onmessage', handleMessage);\n    }\n    return setZeroTimeoutPostMessage;\n  }(this)),\n  \n  blobToArrayBuffer: function(blob, cb){\n    var fr = new FileReader();\n    fr.onload = function(evt) {\n      cb(evt.target.result);\n    };\n    fr.readAsArrayBuffer(blob);\n  },\n  blobToBinaryString: function(blob, cb){\n    var fr = new FileReader();\n    fr.onload = function(evt) {\n      cb(evt.target.result);\n    };\n    fr.readAsBinaryString(blob);\n  },\n  binaryStringToArrayBuffer: function(binary) {\n    var byteArray = new Uint8Array(binary.length);\n    for (var i = 0; i < binary.length; i++) {\n      byteArray[i] = binary.charCodeAt(i) & 0xff;\n    }\n    return byteArray.buffer;\n  },\n  randomToken: function () {\n    return Math.random().toString(36).substr(2);\n  }\n};\n\nmodule.exports = util;\n","var util = require('./util');\n\n/**\n * Reliable transfer for Chrome Canary DataChannel impl.\n * Author: @michellebu\n */\nfunction Reliable(dc, debug) {\n  if (!(this instanceof Reliable)) return new Reliable(dc);\n  this._dc = dc;\n\n  util.debug = debug;\n\n  // Messages sent/received so far.\n  // id: { ack: n, chunks: [...] }\n  this._outgoing = {};\n  // id: { ack: ['ack', id, n], chunks: [...] }\n  this._incoming = {};\n  this._received = {};\n\n  // Window size.\n  this._window = 1000;\n  // MTU.\n  this._mtu = 500;\n  // Interval for setInterval. In ms.\n  this._interval = 0;\n\n  // Messages sent.\n  this._count = 0;\n\n  // Outgoing message queue.\n  this._queue = [];\n\n  this._setupDC();\n};\n\n// Send a message reliably.\nReliable.prototype.send = function(msg) {\n  // Determine if chunking is necessary.\n  var bl = util.pack(msg);\n  if (bl.size < this._mtu) {\n    this._handleSend(['no', bl]);\n    return;\n  }\n\n  this._outgoing[this._count] = {\n    ack: 0,\n    chunks: this._chunk(bl)\n  };\n\n  if (util.debug) {\n    this._outgoing[this._count].timer = new Date();\n  }\n\n  // Send prelim window.\n  this._sendWindowedChunks(this._count);\n  this._count += 1;\n};\n\n// Set up interval for processing queue.\nReliable.prototype._setupInterval = function() {\n  // TODO: fail gracefully.\n\n  var self = this;\n  this._timeout = setInterval(function() {\n    // FIXME: String stuff makes things terribly async.\n    var msg = self._queue.shift();\n    if (msg._multiple) {\n      for (var i = 0, ii = msg.length; i < ii; i += 1) {\n        self._intervalSend(msg[i]);\n      }\n    } else {\n      self._intervalSend(msg);\n    }\n  }, this._interval);\n};\n\nReliable.prototype._intervalSend = function(msg) {\n  var self = this;\n  msg = util.pack(msg);\n  util.blobToBinaryString(msg, function(str) {\n    self._dc.send(str);\n  });\n  if (self._queue.length === 0) {\n    clearTimeout(self._timeout);\n    self._timeout = null;\n    //self._processAcks();\n  }\n};\n\n// Go through ACKs to send missing pieces.\nReliable.prototype._processAcks = function() {\n  for (var id in this._outgoing) {\n    if (this._outgoing.hasOwnProperty(id)) {\n      this._sendWindowedChunks(id);\n    }\n  }\n};\n\n// Handle sending a message.\n// FIXME: Don't wait for interval time for all messages...\nReliable.prototype._handleSend = function(msg) {\n  var push = true;\n  for (var i = 0, ii = this._queue.length; i < ii; i += 1) {\n    var item = this._queue[i];\n    if (item === msg) {\n      push = false;\n    } else if (item._multiple && item.indexOf(msg) !== -1) {\n      push = false;\n    }\n  }\n  if (push) {\n    this._queue.push(msg);\n    if (!this._timeout) {\n      this._setupInterval();\n    }\n  }\n};\n\n// Set up DataChannel handlers.\nReliable.prototype._setupDC = function() {\n  // Handle various message types.\n  var self = this;\n  this._dc.onmessage = function(e) {\n    var msg = e.data;\n    var datatype = msg.constructor;\n    // FIXME: msg is String until binary is supported.\n    // Once that happens, this will have to be smarter.\n    if (datatype === String) {\n      var ab = util.binaryStringToArrayBuffer(msg);\n      msg = util.unpack(ab);\n      self._handleMessage(msg);\n    }\n  };\n};\n\n// Handles an incoming message.\nReliable.prototype._handleMessage = function(msg) {\n  var id = msg[1];\n  var idata = this._incoming[id];\n  var odata = this._outgoing[id];\n  var data;\n  switch (msg[0]) {\n    // No chunking was done.\n    case 'no':\n      var message = id;\n      if (!!message) {\n        this.onmessage(util.unpack(message));\n      }\n      break;\n    // Reached the end of the message.\n    case 'end':\n      data = idata;\n\n      // In case end comes first.\n      this._received[id] = msg[2];\n\n      if (!data) {\n        break;\n      }\n\n      this._ack(id);\n      break;\n    case 'ack':\n      data = odata;\n      if (!!data) {\n        var ack = msg[2];\n        // Take the larger ACK, for out of order messages.\n        data.ack = Math.max(ack, data.ack);\n\n        // Clean up when all chunks are ACKed.\n        if (data.ack >= data.chunks.length) {\n          util.log('Time: ', new Date() - data.timer);\n          delete this._outgoing[id];\n        } else {\n          this._processAcks();\n        }\n      }\n      // If !data, just ignore.\n      break;\n    // Received a chunk of data.\n    case 'chunk':\n      // Create a new entry if none exists.\n      data = idata;\n      if (!data) {\n        var end = this._received[id];\n        if (end === true) {\n          break;\n        }\n        data = {\n          ack: ['ack', id, 0],\n          chunks: []\n        };\n        this._incoming[id] = data;\n      }\n\n      var n = msg[2];\n      var chunk = msg[3];\n      data.chunks[n] = new Uint8Array(chunk);\n\n      // If we get the chunk we're looking for, ACK for next missing.\n      // Otherwise, ACK the same N again.\n      if (n === data.ack[2]) {\n        this._calculateNextAck(id);\n      }\n      this._ack(id);\n      break;\n    default:\n      // Shouldn't happen, but would make sense for message to just go\n      // through as is.\n      this._handleSend(msg);\n      break;\n  }\n};\n\n// Chunks BL into smaller messages.\nReliable.prototype._chunk = function(bl) {\n  var chunks = [];\n  var size = bl.size;\n  var start = 0;\n  while (start < size) {\n    var end = Math.min(size, start + this._mtu);\n    var b = bl.slice(start, end);\n    var chunk = {\n      payload: b\n    }\n    chunks.push(chunk);\n    start = end;\n  }\n  util.log('Created', chunks.length, 'chunks.');\n  return chunks;\n};\n\n// Sends ACK N, expecting Nth blob chunk for message ID.\nReliable.prototype._ack = function(id) {\n  var ack = this._incoming[id].ack;\n\n  // if ack is the end value, then call _complete.\n  if (this._received[id] === ack[2]) {\n    this._complete(id);\n    this._received[id] = true;\n  }\n\n  this._handleSend(ack);\n};\n\n// Calculates the next ACK number, given chunks.\nReliable.prototype._calculateNextAck = function(id) {\n  var data = this._incoming[id];\n  var chunks = data.chunks;\n  for (var i = 0, ii = chunks.length; i < ii; i += 1) {\n    // This chunk is missing!!! Better ACK for it.\n    if (chunks[i] === undefined) {\n      data.ack[2] = i;\n      return;\n    }\n  }\n  data.ack[2] = chunks.length;\n};\n\n// Sends the next window of chunks.\nReliable.prototype._sendWindowedChunks = function(id) {\n  util.log('sendWindowedChunks for: ', id);\n  var data = this._outgoing[id];\n  var ch = data.chunks;\n  var chunks = [];\n  var limit = Math.min(data.ack + this._window, ch.length);\n  for (var i = data.ack; i < limit; i += 1) {\n    if (!ch[i].sent || i === data.ack) {\n      ch[i].sent = true;\n      chunks.push(['chunk', id, i, ch[i].payload]);\n    }\n  }\n  if (data.ack + this._window >= ch.length) {\n    chunks.push(['end', id, ch.length])\n  }\n  chunks._multiple = true;\n  this._handleSend(chunks);\n};\n\n// Puts together a message from chunks.\nReliable.prototype._complete = function(id) {\n  util.log('Completed called for', id);\n  var self = this;\n  var chunks = this._incoming[id].chunks;\n  var bl = new Blob(chunks);\n  util.blobToArrayBuffer(bl, function(ab) {\n    self.onmessage(util.unpack(ab));\n  });\n  delete this._incoming[id];\n};\n\n// Ups bandwidth limit on SDP. Meant to be called during offer/answer.\nReliable.higherBandwidthSDP = function(sdp) {\n  // AS stands for Application-Specific Maximum.\n  // Bandwidth number is in kilobits / sec.\n  // See RFC for more info: http://www.ietf.org/rfc/rfc2327.txt\n\n  // Chrome 31+ doesn't want us munging the SDP, so we'll let them have their\n  // way.\n  var version = navigator.appVersion.match(/Chrome\\/(.*?) /);\n  if (version) {\n    version = parseInt(version[1].split('.').shift());\n    if (version < 31) {\n      var parts = sdp.split('b=AS:30');\n      var replace = 'b=AS:102400'; // 100 Mbps\n      if (parts.length > 1) {\n        return parts[0] + replace + parts[1];\n      }\n    }\n  }\n\n  return sdp;\n};\n\n// Overwritten, typically.\nReliable.prototype.onmessage = function(msg) {};\n\nmodule.exports = Reliable;\n","import * as Reliable from \"reliable\";\nimport { util } from \"./util\";\nimport logger from \"./logger\";\nimport {\n  RTCPeerConnection,\n  RTCSessionDescription,\n  RTCIceCandidate\n} from \"./adapter\";\nimport { MediaConnection } from \"./mediaconnection\";\nimport { DataConnection } from \"./dataconnection\";\nimport { ConnectionType, PeerErrorType, ConnectionEventType, ServerMessageType } from \"./enums\";\nimport { BaseConnection } from \"./baseconnection\";\n\n/**\n * Manages all negotiations between Peers.\n */\nexport class Negotiator {\n  constructor(readonly connection: BaseConnection) { }\n\n  /** Returns a PeerConnection object set up correctly (for data, media). */\n  startConnection(options: any) {\n    const peerConnection = this._startPeerConnection();\n\n    // Set the connection's PC.\n    this.connection.peerConnection = peerConnection;\n\n    if (this.connection.type === ConnectionType.Media && options._stream) {\n      this._addTracksToConnection(options._stream, peerConnection);\n    }\n\n    // What do we need to do now?\n    if (options.originator) {\n      if (this.connection.type === ConnectionType.Data) {\n        const dataConnection = <DataConnection>this.connection;\n\n        let config = {};\n\n        if (!util.supports.sctp) {\n          config = { reliable: options.reliable };\n        }\n\n        const dataChannel = peerConnection.createDataChannel(\n          dataConnection.label,\n          config\n        );\n        dataConnection.initialize(dataChannel);\n      }\n\n      this._makeOffer();\n    } else {\n      this.handleSDP(\"OFFER\", options.sdp);\n    }\n  }\n\n  /** Start a PC. */\n  private _startPeerConnection(): RTCPeerConnection {\n    logger.log(\"Creating RTCPeerConnection.\");\n\n    let optional = {};\n\n    if (this.connection.type === ConnectionType.Data && !util.supports.sctp) {\n      optional = { optional: [{ RtpDataChannels: true }] };\n    } else if (this.connection.type === ConnectionType.Media) {\n      // Interop req for chrome.\n      optional = { optional: [{ DtlsSrtpKeyAgreement: true }] };\n    }\n\n    const peerConnection = new RTCPeerConnection(\n      this.connection.provider.options.config,\n      optional\n    );\n\n    this._setupListeners(peerConnection);\n\n    return peerConnection;\n  }\n\n  /** Set up various WebRTC listeners. */\n  private _setupListeners(\n    peerConnection: RTCPeerConnection\n  ) {\n    const peerId = this.connection.peer;\n    const connectionId = this.connection.connectionId;\n    const connectionType = this.connection.type;\n    const provider = this.connection.provider;\n\n    // ICE CANDIDATES.\n    logger.log(\"Listening for ICE candidates.\");\n\n    peerConnection.onicecandidate = (evt) => {\n      if (evt.candidate) {\n        logger.log(\"Received ICE candidates for:\", peerId);\n        provider.socket.send({\n          type: ServerMessageType.Candidate,\n          payload: {\n            candidate: evt.candidate,\n            type: connectionType,\n            connectionId: connectionId\n          },\n          dst: peerId\n        });\n      }\n    };\n\n    peerConnection.oniceconnectionstatechange = () => {\n      switch (peerConnection.iceConnectionState) {\n        case \"failed\":\n          logger.log(\n            \"iceConnectionState is failed, closing connections to \" +\n            peerId\n          );\n          this.connection.emit(\n            ConnectionEventType.Error,\n            new Error(\"Negotiation of connection to \" + peerId + \" failed.\")\n          );\n          this.connection.close();\n          break;\n        case \"closed\":\n          logger.log(\n            \"iceConnectionState is closed, closing connections to \" +\n            peerId\n          );\n          this.connection.emit(\n            ConnectionEventType.Error,\n            new Error(\"Connection to \" + peerId + \" closed.\")\n          );\n          this.connection.close();\n          break;\n        case \"disconnected\":\n          logger.log(\n            \"iceConnectionState is disconnected, closing connections to \" +\n            peerId\n          );\n          this.connection.emit(\n            ConnectionEventType.Error,\n            new Error(\"Connection to \" + peerId + \" disconnected.\")\n          );\n          this.connection.close();\n          break;\n        case \"completed\":\n          peerConnection.onicecandidate = util.noop;\n          break;\n      }\n\n      this.connection.emit(ConnectionEventType.IceStateChanged, peerConnection.iceConnectionState);\n    };\n\n    // DATACONNECTION.\n    logger.log(\"Listening for data channel\");\n    // Fired between offer and answer, so options should already be saved\n    // in the options hash.\n    peerConnection.ondatachannel = (evt) => {\n      logger.log(\"Received data channel\");\n\n      const dataChannel = evt.channel;\n      const connection = <DataConnection>(\n        provider.getConnection(peerId, connectionId)\n      );\n\n      connection.initialize(dataChannel);\n    };\n\n    // MEDIACONNECTION.\n    logger.log(\"Listening for remote stream\");\n\n    peerConnection.ontrack = (evt) => {\n      logger.log(\"Received remote stream\");\n\n      const stream = evt.streams[0];\n      const connection = provider.getConnection(peerId, connectionId);\n\n      if (connection.type === ConnectionType.Media) {\n        const mediaConnection = <MediaConnection>connection;\n\n        this._addStreamToMediaConnection(stream, mediaConnection);\n      }\n    };\n  }\n\n  cleanup(): void {\n    logger.log(\"Cleaning up PeerConnection to \" + this.connection.peer);\n\n    const peerConnection = this.connection.peerConnection;\n\n    if (!peerConnection) {\n      return;\n    }\n\n    this.connection.peerConnection = null;\n\n    //unsubscribe from all PeerConnection's events\n    peerConnection.onicecandidate = peerConnection.oniceconnectionstatechange = peerConnection.ondatachannel = peerConnection.ontrack = () => { };\n\n    const peerConnectionNotClosed = peerConnection.signalingState !== \"closed\";\n    let dataChannelNotClosed = false;\n\n    if (this.connection.type === ConnectionType.Data) {\n      const dataConnection = <DataConnection>this.connection;\n      const dataChannel = dataConnection.dataChannel;\n\n      if (dataChannel) {\n        dataChannelNotClosed = !!dataChannel.readyState && dataChannel.readyState !== \"closed\";\n      }\n    }\n\n    if (peerConnectionNotClosed || dataChannelNotClosed) {\n      peerConnection.close();\n    }\n  }\n\n  private async _makeOffer(): Promise<void> {\n    const peerConnection = this.connection.peerConnection;\n    const provider = this.connection.provider;\n\n    try {\n      const offer = await peerConnection.createOffer(\n        this.connection.options.constraints\n      );\n\n      logger.log(\"Created offer.\");\n\n      if (!util.supports.sctp && this.connection.type === ConnectionType.Data) {\n        const dataConnection = <DataConnection>this.connection;\n        if (dataConnection.reliable) {\n          offer.sdp = Reliable.higherBandwidthSDP(offer.sdp);\n        }\n      }\n\n      if (this.connection.options.sdpTransform && typeof this.connection.options.sdpTransform === 'function') {\n        offer.sdp = this.connection.options.sdpTransform(offer.sdp) || offer.sdp;\n      }\n\n      try {\n        await peerConnection.setLocalDescription(offer);\n\n        logger.log(\"Set localDescription:\", offer, `for:${this.connection.peer}`);\n\n        let payload: any = {\n          sdp: offer,\n          type: this.connection.type,\n          connectionId: this.connection.connectionId,\n          metadata: this.connection.metadata,\n          browser: util.browser\n        };\n\n        if (this.connection.type === ConnectionType.Data) {\n          const dataConnection = <DataConnection>this.connection;\n\n          payload = {\n            ...payload,\n            label: dataConnection.label,\n            reliable: dataConnection.reliable,\n            serialization: dataConnection.serialization\n          };\n        }\n\n        provider.socket.send({\n          type: ServerMessageType.Offer,\n          payload,\n          dst: this.connection.peer\n        });\n      } catch (err) {\n        // TODO: investigate why _makeOffer is being called from the answer\n        if (\n          err !=\n          \"OperationError: Failed to set local offer sdp: Called in wrong state: kHaveRemoteOffer\"\n        ) {\n          provider.emitError(PeerErrorType.WebRTC, err);\n          logger.log(\"Failed to setLocalDescription, \", err);\n        }\n      }\n    } catch (err_1) {\n      provider.emitError(PeerErrorType.WebRTC, err_1);\n      logger.log(\"Failed to createOffer, \", err_1);\n    }\n  }\n\n  private async _makeAnswer(): Promise<void> {\n    const peerConnection = this.connection.peerConnection;\n    const provider = this.connection.provider;\n\n    try {\n      const answer = await peerConnection.createAnswer();\n      logger.log(\"Created answer.\");\n\n      if (!util.supports.sctp && this.connection.type === ConnectionType.Data) {\n        const dataConnection = <DataConnection>this.connection;\n        if (dataConnection.reliable) {\n          answer.sdp = Reliable.higherBandwidthSDP(answer.sdp);\n        }\n      }\n\n      if (this.connection.options.sdpTransform && typeof this.connection.options.sdpTransform === 'function') {\n        answer.sdp = this.connection.options.sdpTransform(answer.sdp) || answer.sdp;\n      }\n\n      try {\n        await peerConnection.setLocalDescription(answer);\n\n        logger.log(`Set localDescription:`, answer, `for:${this.connection.peer}`);\n\n        provider.socket.send({\n          type: ServerMessageType.Answer,\n          payload: {\n            sdp: answer,\n            type: this.connection.type,\n            connectionId: this.connection.connectionId,\n            browser: util.browser\n          },\n          dst: this.connection.peer\n        });\n      } catch (err) {\n        provider.emitError(PeerErrorType.WebRTC, err);\n        logger.log(\"Failed to setLocalDescription, \", err);\n      }\n    } catch (err_1) {\n      provider.emitError(PeerErrorType.WebRTC, err_1);\n      logger.log(\"Failed to create answer, \", err_1);\n    }\n  }\n\n  /** Handle an SDP. */\n  async handleSDP(\n    type: string,\n    sdp: any\n  ): Promise<void> {\n    sdp = new RTCSessionDescription(sdp);\n    const peerConnection = this.connection.peerConnection;\n    const provider = this.connection.provider;\n\n    logger.log(\"Setting remote description\", sdp);\n\n    const self = this;\n\n    try {\n      await peerConnection.setRemoteDescription(sdp);\n      logger.log(`Set remoteDescription:${type} for:${this.connection.peer}`);\n      if (type === \"OFFER\") {\n        await self._makeAnswer();\n      }\n    } catch (err) {\n      provider.emitError(PeerErrorType.WebRTC, err);\n      logger.log(\"Failed to setRemoteDescription, \", err);\n    }\n  }\n\n  /** Handle a candidate. */\n  async handleCandidate(ice: any): Promise<void> {\n    const candidate = ice.candidate;\n    const sdpMLineIndex = ice.sdpMLineIndex;\n    const sdpMid = ice.sdpMid;\n    const peerConnection = this.connection.peerConnection;\n    const provider = this.connection.provider;\n\n    try {\n      await peerConnection.addIceCandidate(\n        new RTCIceCandidate({\n          sdpMid: sdpMid,\n          sdpMLineIndex: sdpMLineIndex,\n          candidate: candidate\n        })\n      );\n      logger.log(`Added ICE candidate for:${this.connection.peer}`);\n    } catch (err) {\n      provider.emitError(PeerErrorType.WebRTC, err);\n      logger.log(\"Failed to handleCandidate, \", err);\n    }\n  }\n\n  private _addTracksToConnection(\n    stream: MediaStream,\n    peerConnection: RTCPeerConnection\n  ): void {\n    logger.log(`add tracks from stream ${stream.id} to peer connection`);\n\n    if (!peerConnection.addTrack) {\n      return logger.error(\n        `Your browser does't support RTCPeerConnection#addTrack. Ignored.`\n      );\n    }\n\n    stream.getTracks().forEach(track => {\n      peerConnection.addTrack(track, stream);\n    });\n  }\n\n  private _addStreamToMediaConnection(\n    stream: MediaStream,\n    mediaConnection: MediaConnection\n  ): void {\n    logger.log(\n      `add stream ${stream.id} to media connection ${\n      mediaConnection.connectionId\n      }`\n    );\n\n    mediaConnection.addStream(stream);\n  }\n}\n","import { EventEmitter } from \"eventemitter3\";\nimport { Peer } from \"./peer\";\nimport { ServerMessage } from \"./servermessage\";\nimport { ConnectionType } from \"./enums\";\n\nexport abstract class BaseConnection extends EventEmitter {\n  protected _open = false;\n\n  readonly metadata: any;\n  connectionId: string;\n\n  peerConnection: RTCPeerConnection;\n\n  abstract get type(): ConnectionType;\n\n  get open() {\n    return this._open;\n  }\n\n  constructor(\n    readonly peer: string,\n    public provider: Peer,\n    readonly options: any\n  ) {\n    super();\n\n    this.metadata = options.metadata;\n  }\n\n  abstract close(): void;\n\n  abstract handleMessage(message: ServerMessage): void;\n}\n","import { util } from \"./util\";\nimport logger from \"./logger\";\nimport { Negotiator } from \"./negotiator\";\nimport { ConnectionType, ConnectionEventType, ServerMessageType } from \"./enums\";\nimport { Peer } from \"./peer\";\nimport { BaseConnection } from \"./baseconnection\";\nimport { ServerMessage } from \"./servermessage\";\nimport { AnswerOption } from \"..\";\n\n/**\n * Wraps the streaming interface between two Peers.\n */\nexport class MediaConnection extends BaseConnection {\n  private static readonly ID_PREFIX = \"mc_\";\n\n  private _negotiator: Negotiator;\n  private _localStream: MediaStream;\n  private _remoteStream: MediaStream;\n\n  get type() {\n    return ConnectionType.Media;\n  }\n\n  get localStream(): MediaStream { return this._localStream; }\n  get remoteStream(): MediaStream { return this._remoteStream; }\n\n  constructor(peerId: string, provider: Peer, options: any) {\n    super(peerId, provider, options);\n\n    this._localStream = this.options._stream;\n    this.connectionId =\n      this.options.connectionId ||\n      MediaConnection.ID_PREFIX + util.randomToken();\n\n    this._negotiator = new Negotiator(this);\n\n    if (this._localStream) {\n      this._negotiator.startConnection({\n        _stream: this._localStream,\n        originator: true\n      });\n    }\n  }\n\n  addStream(remoteStream) {\n    logger.log(\"Receiving stream\", remoteStream);\n\n    this._remoteStream = remoteStream;\n    super.emit(ConnectionEventType.Stream, remoteStream); // Should we call this `open`?\n  }\n\n  handleMessage(message: ServerMessage): void {\n    const type = message.type;\n    const payload = message.payload;\n\n    switch (message.type) {\n      case ServerMessageType.Answer:\n        // Forward to negotiator\n        this._negotiator.handleSDP(type, payload.sdp);\n        this._open = true;\n        break;\n      case ServerMessageType.Candidate:\n        this._negotiator.handleCandidate(payload.candidate);\n        break;\n      default:\n        logger.warn(`Unrecognized message type:${type} from peer:${this.peer}`);\n        break;\n    }\n  }\n\n  answer(stream: MediaStream, options: AnswerOption = {}): void {\n    if (this._localStream) {\n      logger.warn(\n        \"Local stream already exists on this MediaConnection. Are you answering a call twice?\"\n      );\n      return;\n    }\n\n    this._localStream = stream;\n\n    if (options && options.sdpTransform) {\n      this.options.sdpTransform = options.sdpTransform;\n    }\n\n    this._negotiator.startConnection({ ...this.options._payload, _stream: stream });\n    // Retrieve lost messages stored because PeerConnection not set up.\n    const messages = this.provider._getMessages(this.connectionId);\n\n    for (let message of messages) {\n      this.handleMessage(message);\n    }\n\n    this._open = true;\n  }\n\n  /**\n   * Exposed functionality for users.\n   */\n\n  /** Allows user to close connection. */\n  close(): void {\n    if (this._negotiator) {\n      this._negotiator.cleanup();\n      this._negotiator = null;\n    }\n\n    this._localStream = null;\n    this._remoteStream = null;\n\n    if (this.provider) {\n      this.provider._removeConnection(this);\n\n      this.provider = null;\n    }\n\n    if (this.options && this.options._stream) {\n      this.options._stream = null;\n    }\n\n    if (!this.open) {\n      return;\n    }\n\n    this._open = false;\n\n    super.emit(ConnectionEventType.Close);\n  }\n}\n","import { Reliable } from \"reliable\";\nimport { util } from \"./util\";\nimport logger, { LogLevel } from \"./logger\";\nimport { Negotiator } from \"./negotiator\";\nimport {\n  ConnectionType,\n  ConnectionEventType,\n  SerializationType,\n  ServerMessageType\n} from \"./enums\";\nimport { Peer } from \"./peer\";\nimport { BaseConnection } from \"./baseconnection\";\nimport { ServerMessage } from \"./servermessage\";\n\n/**\n * Wraps a DataChannel between two Peers.\n */\nexport class DataConnection extends BaseConnection {\n  private static readonly ID_PREFIX = \"dc_\";\n\n  private _negotiator: Negotiator;\n  readonly label: string;\n  readonly serialization: SerializationType;\n  readonly reliable: boolean;\n\n  get type() {\n    return ConnectionType.Data;\n  }\n\n  private _buffer: any[] = [];\n  private _bufferSize = 0;\n  private _buffering = false;\n  private _chunkedData = {};\n\n  private _peerBrowser: any;\n  private _dc: RTCDataChannel;\n  private _reliable: Reliable;\n\n  get dataChannel(): RTCDataChannel {\n    return this._dc;\n  }\n\n  get bufferSize(): number { return this._bufferSize; }\n\n  constructor(peerId: string, provider: Peer, options: any) {\n    super(peerId, provider, options);\n\n    this.connectionId =\n      this.options.connectionId || DataConnection.ID_PREFIX + util.randomToken();\n\n    this.label = this.options.label || this.connectionId;\n    this.serialization = this.options.serialization || SerializationType.Binary;\n    this.reliable = this.options.reliable;\n\n    if (this.options._payload) {\n      this._peerBrowser = this.options._payload.browser;\n    }\n\n    this._negotiator = new Negotiator(this);\n\n    this._negotiator.startConnection(\n      this.options._payload || {\n        originator: true\n      }\n    );\n  }\n\n  /** Called by the Negotiator when the DataChannel is ready. */\n  initialize(dc: RTCDataChannel): void {\n    this._dc = dc;\n    this._configureDataChannel();\n  }\n\n  private _configureDataChannel(): void {\n    if (util.supports.sctp) {\n      this.dataChannel.binaryType = \"arraybuffer\";\n    }\n\n    this.dataChannel.onopen = () => {\n      logger.log(\"Data channel connection success\");\n      this._open = true;\n      this.emit(ConnectionEventType.Open);\n    };\n\n    // Use the Reliable shim for non Firefox browsers\n    if (!util.supports.sctp && this.reliable) {\n      const isLoggingEnable = logger.logLevel > LogLevel.Disabled;\n      this._reliable = new Reliable(this.dataChannel, isLoggingEnable);\n    }\n\n    if (this._reliable) {\n      this._reliable.onmessage = (msg) => {\n        this.emit(ConnectionEventType.Data, msg);\n      };\n    } else {\n      this.dataChannel.onmessage = (e) => {\n        this._handleDataMessage(e);\n      };\n    }\n    this.dataChannel.onclose = () => {\n      logger.log(\"DataChannel closed for:\", this.peer);\n      this.close();\n    };\n  }\n\n  // Handles a DataChannel message.\n  private _handleDataMessage({ data }): void {\n    const datatype = data.constructor;\n\n    const isBinarySerialization = this.serialization === SerializationType.Binary ||\n      this.serialization === SerializationType.BinaryUTF8;\n\n    let deserializedData = data;\n\n    if (isBinarySerialization) {\n      if (datatype === Blob) {\n        // Datatype should never be blob\n        util.blobToArrayBuffer(data, (ab) => {\n          const unpackedData = util.unpack(ab);\n          this.emit(ConnectionEventType.Data, unpackedData);\n        });\n        return;\n      } else if (datatype === ArrayBuffer) {\n        deserializedData = util.unpack(data);\n      } else if (datatype === String) {\n        // String fallback for binary data for browsers that don't support binary yet\n        const ab = util.binaryStringToArrayBuffer(data);\n        deserializedData = util.unpack(ab);\n      }\n    } else if (this.serialization === SerializationType.JSON) {\n      deserializedData = JSON.parse(data);\n    }\n\n    // Check if we've chunked--if so, piece things back together.\n    // We're guaranteed that this isn't 0.\n    if (deserializedData.__peerData) {\n      this._handleChunk(deserializedData);\n      return;\n    }\n\n    super.emit(ConnectionEventType.Data, deserializedData);\n  }\n\n  private _handleChunk(data: any): void {\n    const id = data.__peerData;\n    const chunkInfo = this._chunkedData[id] || {\n      data: [],\n      count: 0,\n      total: data.total\n    };\n\n    chunkInfo.data[data.n] = data.data;\n    chunkInfo.count++;\n    this._chunkedData[id] = chunkInfo;\n\n    if (chunkInfo.total === chunkInfo.count) {\n      // Clean up before making the recursive call to `_handleDataMessage`.\n      delete this._chunkedData[id];\n\n      // We've received all the chunks--time to construct the complete data.\n      const data = new Blob(chunkInfo.data);\n      this._handleDataMessage({ data });\n    }\n  }\n\n  /**\n   * Exposed functionality for users.\n   */\n\n  /** Allows user to close connection. */\n  close(): void {\n    this._buffer = [];\n    this._bufferSize = 0;\n    this._chunkedData = {};\n\n    if (this._negotiator) {\n      this._negotiator.cleanup();\n      this._negotiator = null;\n    }\n\n    if (this.provider) {\n      this.provider._removeConnection(this);\n\n      this.provider = null;\n    }\n\n    if (!this.open) {\n      return;\n    }\n\n    this._open = false;\n\n    super.emit(ConnectionEventType.Close);\n  }\n\n  /** Allows user to send data. */\n  send(data: any, chunked: boolean): void {\n    if (!this.open) {\n      super.emit(\n        ConnectionEventType.Error,\n        new Error(\n          \"Connection is not open. You should listen for the `open` event before sending messages.\"\n        )\n      );\n      return;\n    }\n\n    if (this._reliable) {\n      // Note: reliable shim sending will make it so that you cannot customize\n      // serialization.\n      this._reliable.send(data);\n      return;\n    }\n\n    if (this.serialization === SerializationType.JSON) {\n      this._bufferedSend(JSON.stringify(data));\n    } else if (\n      this.serialization === SerializationType.Binary ||\n      this.serialization === SerializationType.BinaryUTF8\n    ) {\n      const blob = util.pack(data);\n\n      // For Chrome-Firefox interoperability, we need to make Firefox \"chunk\"\n      // the data it sends out.\n      const needsChunking =\n        util.chunkedBrowsers[this._peerBrowser] ||\n        util.chunkedBrowsers[util.browser];\n\n      if (needsChunking && !chunked && blob.size > util.chunkedMTU) {\n        this._sendChunks(blob);\n        return;\n      }\n\n      // DataChannel currently only supports strings.\n      if (!util.supports.sctp) {\n        util.blobToBinaryString(blob, (str) => {\n          this._bufferedSend(str);\n        });\n      } else if (!util.supports.binaryBlob) {\n        // We only do this if we really need to (e.g. blobs are not supported),\n        // because this conversion is costly.\n        util.blobToArrayBuffer(blob, (ab) => {\n          this._bufferedSend(ab);\n        });\n      } else {\n        this._bufferedSend(blob);\n      }\n    } else {\n      this._bufferedSend(data);\n    }\n  }\n\n  private _bufferedSend(msg: any): void {\n    if (this._buffering || !this._trySend(msg)) {\n      this._buffer.push(msg);\n      this._bufferSize = this._buffer.length;\n    }\n  }\n\n  // Returns true if the send succeeds.\n  private _trySend(msg: any): boolean {\n    if (!this.open) {\n      return false;\n    }\n\n    try {\n      this.dataChannel.send(msg);\n    } catch (e) {\n      this._buffering = true;\n\n      setTimeout(() => {\n        // Try again.\n        this._buffering = false;\n        this._tryBuffer();\n      }, 100);\n\n      return false;\n    }\n\n    return true;\n  }\n\n  // Try to send the first message in the buffer.\n  private _tryBuffer(): void {\n    if (!this.open) {\n      return;\n    }\n\n    if (this._buffer.length === 0) {\n      return;\n    }\n\n    const msg = this._buffer[0];\n\n    if (this._trySend(msg)) {\n      this._buffer.shift();\n      this._bufferSize = this._buffer.length;\n      this._tryBuffer();\n    }\n  }\n\n  private _sendChunks(blob): void {\n    const blobs = util.chunk(blob);\n\n    for (let blob of blobs) {\n      this.send(blob, true);\n    }\n  }\n\n  handleMessage(message: ServerMessage): void {\n    const payload = message.payload;\n\n    switch (message.type) {\n      case ServerMessageType.Answer:\n        this._peerBrowser = payload.browser;\n\n        // Forward to negotiator\n        this._negotiator.handleSDP(message.type, payload.sdp);\n        break;\n      case ServerMessageType.Candidate:\n        this._negotiator.handleCandidate(payload.candidate);\n        break;\n      default:\n        logger.warn(\n          \"Unrecognized message type:\",\n          message.type,\n          \"from peer:\",\n          this.peer\n        );\n        break;\n    }\n  }\n}\n","import { util } from \"./util\";\nimport logger from \"./logger\";\n\nexport class API {\n  constructor(private readonly _options: any) { }\n\n  private _buildUrl(method: string): string {\n    const protocol = this._options.secure ? \"https://\" : \"http://\";\n    let url =\n      protocol +\n      this._options.host +\n      \":\" +\n      this._options.port +\n      this._options.path +\n      this._options.key +\n      \"/\" +\n      method;\n    const queryString = \"?ts=\" + new Date().getTime() + \"\" + Math.random();\n    url += queryString;\n\n    return url;\n  }\n\n  /** Get a unique ID from the server via XHR and initialize with it. */\n  async retrieveId(): Promise<string> {\n    const url = this._buildUrl(\"id\");\n\n    try {\n      const response = await fetch(url);\n\n      if (response.status !== 200) {\n        throw new Error(`Error. Status:${response.status}`)\n      }\n\n      return response.text();\n    } catch (error) {\n      logger.error(\"Error retrieving ID\", error);\n\n      let pathError = \"\";\n\n      if (\n        this._options.path === \"/\" &&\n        this._options.host !== util.CLOUD_HOST\n      ) {\n        pathError =\n          \" If you passed in a `path` to your self-hosted PeerServer, \" +\n          \"you'll also need to pass in that same path when creating a new \" +\n          \"Peer.\";\n      }\n\n      throw new Error(\"Could not get an ID from the server.\" + pathError);\n    }\n  }\n\n  /** @deprecated */\n  async listAllPeers(): Promise<any[]> {\n    const url = this._buildUrl(\"peers\");\n\n    try {\n      const response = await fetch(url);\n\n      if (response.status !== 200) {\n        if (response.status === 401) {\n          let helpfulError = \"\";\n\n          if (this._options.host === util.CLOUD_HOST) {\n            helpfulError =\n              \"It looks like you're using the cloud server. You can email \" +\n              \"team@peerjs.com to enable peer listing for your API key.\";\n          } else {\n            helpfulError =\n              \"You need to enable `allow_discovery` on your self-hosted \" +\n              \"PeerServer to use this feature.\";\n          }\n\n          throw new Error(\"It doesn't look like you have permission to list peers IDs. \" +\n            helpfulError);\n        }\n\n        throw new Error(`Error. Status:${response.status}`)\n      }\n\n      return response.json();\n    } catch (error) {\n      logger.error(\"Error retrieving list peers\", error);\n\n      throw new Error(\"Could not get list peers from the server.\" + error);\n    }\n  }\n}\n","import { EventEmitter } from \"eventemitter3\";\nimport { util } from \"./util\";\nimport logger, { LogLevel } from \"./logger\";\nimport { Socket } from \"./socket\";\nimport { MediaConnection } from \"./mediaconnection\";\nimport { DataConnection } from \"./dataconnection\";\nimport {\n  ConnectionType,\n  PeerErrorType,\n  PeerEventType,\n  SocketEventType,\n  ServerMessageType\n} from \"./enums\";\nimport { BaseConnection } from \"./baseconnection\";\nimport { ServerMessage } from \"./servermessage\";\nimport { API } from \"./api\";\nimport { PeerConnectOption, PeerJSOption } from \"..\";\n\nclass PeerOptions implements PeerJSOption {\n  debug?: LogLevel; // 1: Errors, 2: Warnings, 3: All logs\n  host?: string;\n  port?: number;\n  path?: string;\n  key?: string;\n  token?: string;\n  config?: any;\n  secure?: boolean;\n  pingInterval?: number;\n  logFunction?: (logLevel: LogLevel, ...rest) => void;\n}\n\n/**\n * A peer who can initiate connections with other peers.\n */\nexport class Peer extends EventEmitter {\n  private static readonly DEFAULT_KEY = \"peerjs\";\n\n  private readonly _options: PeerOptions;\n  private _id: string;\n  private _lastServerId: string;\n  private _api: API;\n\n  // States.\n  private _destroyed = false; // Connections have been killed\n  private _disconnected = false; // Connection to PeerServer killed but P2P connections still active\n  private _open = false; // Sockets and such are not yet open.\n  private readonly _connections: Map<string, BaseConnection[]> = new Map(); // All connections for this peer.\n  private readonly _lostMessages: Map<string, ServerMessage[]> = new Map(); // src => [list of messages]\n\n  private _socket: Socket;\n\n  get id() {\n    return this._id;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  get open() {\n    return this._open;\n  }\n\n  get socket() {\n    return this._socket;\n  }\n\n  /**\n   * @deprecated \n   * Return type will change from Object to Map<string,[]> \n   */\n  get connections(): Object {\n    const plainConnections = Object.create(null);\n\n    for (let [k, v] of this._connections) {\n      plainConnections[k] = v;\n    }\n\n    return plainConnections;\n  }\n\n  get destroyed() {\n    return this._destroyed;\n  }\n  get disconnected() {\n    return this._disconnected;\n  }\n\n  constructor(id?: any, options?: PeerOptions) {\n    super();\n\n    // Deal with overloading\n    if (id && id.constructor == Object) {\n      options = id;\n      id = undefined;\n    } else if (id) {\n      id = id.toString();\n    }\n\n    // Configurize options\n    options = {\n      debug: 0, // 1: Errors, 2: Warnings, 3: All logs\n      host: util.CLOUD_HOST,\n      port: util.CLOUD_PORT,\n      path: \"/\",\n      key: Peer.DEFAULT_KEY,\n      token: util.randomToken(),\n      config: util.defaultConfig,\n      ...options\n    };\n    this._options = options;\n\n    // Detect relative URL host.\n    if (options.host === \"/\") {\n      options.host = window.location.hostname;\n    }\n    // Set path correctly.\n    if (options.path[0] !== \"/\") {\n      options.path = \"/\" + options.path;\n    }\n    if (options.path[options.path.length - 1] !== \"/\") {\n      options.path += \"/\";\n    }\n\n    // Set whether we use SSL to same as current host\n    if (options.secure === undefined && options.host !== util.CLOUD_HOST) {\n      options.secure = util.isSecure();\n    } else if (options.host == util.CLOUD_HOST) {\n      options.secure = true;\n    }\n    // Set a custom log function if present\n    if (options.logFunction) {\n      logger.setLogFunction(options.logFunction);\n    }\n\n    logger.logLevel = options.debug;\n\n    // Sanity checks\n    // Ensure WebRTC supported\n    if (!util.supports.audioVideo && !util.supports.data) {\n      this._delayedAbort(\n        PeerErrorType.BrowserIncompatible,\n        \"The current browser does not support WebRTC\"\n      );\n      return;\n    }\n    // Ensure alphanumeric id\n    if (!util.validateId(id)) {\n      this._delayedAbort(PeerErrorType.InvalidID, `ID \"${id}\" is invalid`);\n      return;\n    }\n\n    this._api = new API(options);\n\n    // Start the server connection\n    this._initializeServerConnection();\n\n    if (id) {\n      this._initialize(id);\n    } else {\n      this._api.retrieveId()\n        .then(id => this._initialize(id))\n        .catch(error => this._abort(PeerErrorType.ServerError, error));\n    }\n  }\n\n  // Initialize the 'socket' (which is actually a mix of XHR streaming and\n  // websockets.)\n  private _initializeServerConnection(): void {\n    this._socket = new Socket(\n      this._options.secure,\n      this._options.host,\n      this._options.port,\n      this._options.path,\n      this._options.key,\n      this._options.pingInterval\n    );\n\n    this.socket.on(SocketEventType.Message, data => {\n      this._handleMessage(data);\n    });\n\n    this.socket.on(SocketEventType.Error, error => {\n      this._abort(PeerErrorType.SocketError, error);\n    });\n\n    this.socket.on(SocketEventType.Disconnected, () => {\n      // If we haven't explicitly disconnected, emit error and disconnect.\n      if (!this.disconnected) {\n        this.emitError(PeerErrorType.Network, \"Lost connection to server.\");\n        this.disconnect();\n      }\n    });\n\n    this.socket.on(SocketEventType.Close, () => {\n      // If we haven't explicitly disconnected, emit error.\n      if (!this.disconnected) {\n        this._abort(\n          PeerErrorType.SocketClosed,\n          \"Underlying socket is already closed.\"\n        );\n      }\n    });\n  }\n\n  /** Initialize a connection with the server. */\n  private _initialize(id: string): void {\n    this._id = id;\n    this.socket.start(this.id, this._options.token);\n  }\n\n  /** Handles messages from the server. */\n  private _handleMessage(message: ServerMessage): void {\n    const type = message.type;\n    const payload = message.payload;\n    const peerId = message.src;\n\n    switch (type) {\n      case ServerMessageType.Open: // The connection to the server is open.\n        this.emit(PeerEventType.Open, this.id);\n        this._open = true;\n        break;\n      case ServerMessageType.Error: // Server error.\n        this._abort(PeerErrorType.ServerError, payload.msg);\n        break;\n      case ServerMessageType.IdTaken: // The selected ID is taken.\n        this._abort(PeerErrorType.UnavailableID, `ID \"${this.id}\" is taken`);\n        break;\n      case ServerMessageType.InvalidKey: // The given API key cannot be found.\n        this._abort(\n          PeerErrorType.InvalidKey,\n          `API KEY \"${this._options.key}\" is invalid`\n        );\n        break;\n      case ServerMessageType.Leave: // Another peer has closed its connection to this peer.\n        logger.log(\"Received leave message from\", peerId);\n        this._cleanupPeer(peerId);\n        this._connections.delete(peerId);\n        break;\n      case ServerMessageType.Expire: // The offer sent to a peer has expired without response.\n        this.emitError(\n          PeerErrorType.PeerUnavailable,\n          \"Could not connect to peer \" + peerId\n        );\n        break;\n      case ServerMessageType.Offer: {\n        // we should consider switching this to CALL/CONNECT, but this is the least breaking option.\n        const connectionId = payload.connectionId;\n        let connection = this.getConnection(peerId, connectionId);\n\n        if (connection) {\n          connection.close();\n          logger.warn(\"Offer received for existing Connection ID:\", connectionId);\n        }\n\n        // Create a new connection.\n        if (payload.type === ConnectionType.Media) {\n          connection = new MediaConnection(peerId, this, {\n            connectionId: connectionId,\n            _payload: payload,\n            metadata: payload.metadata\n          });\n          this._addConnection(peerId, connection);\n          this.emit(PeerEventType.Call, connection);\n        } else if (payload.type === ConnectionType.Data) {\n          connection = new DataConnection(peerId, this, {\n            connectionId: connectionId,\n            _payload: payload,\n            metadata: payload.metadata,\n            label: payload.label,\n            serialization: payload.serialization,\n            reliable: payload.reliable\n          });\n          this._addConnection(peerId, connection);\n          this.emit(PeerEventType.Connection, connection);\n        } else {\n          logger.warn(\"Received malformed connection type:\", payload.type);\n          return;\n        }\n\n        // Find messages.\n        const messages = this._getMessages(connectionId);\n        for (let message of messages) {\n          connection.handleMessage(message);\n        }\n\n        break;\n      }\n      default: {\n        if (!payload) {\n          logger.warn(\n            `You received a malformed message from ${peerId} of type ${type}`\n          );\n          return;\n        }\n\n        const connectionId = payload.connectionId;\n        const connection = this.getConnection(peerId, connectionId);\n\n        if (connection && connection.peerConnection) {\n          // Pass it on.\n          connection.handleMessage(message);\n        } else if (connectionId) {\n          // Store for possible later use\n          this._storeMessage(connectionId, message);\n        } else {\n          logger.warn(\"You received an unrecognized message:\", message);\n        }\n        break;\n      }\n    }\n  }\n\n  /** Stores messages without a set up connection, to be claimed later. */\n  private _storeMessage(connectionId: string, message: ServerMessage): void {\n    if (!this._lostMessages.has(connectionId)) {\n      this._lostMessages.set(connectionId, []);\n    }\n\n    this._lostMessages.get(connectionId).push(message);\n  }\n\n  /** Retrieve messages from lost message store */\n  //TODO Change it to private\n  public _getMessages(connectionId: string): ServerMessage[] {\n    const messages = this._lostMessages.get(connectionId);\n\n    if (messages) {\n      this._lostMessages.delete(connectionId);\n      return messages;\n    }\n\n    return [];\n  }\n\n  /**\n   * Returns a DataConnection to the specified peer. See documentation for a\n   * complete list of options.\n   */\n  connect(peer: string, options: PeerConnectOption = {}): DataConnection {\n    if (this.disconnected) {\n      logger.warn(\n        \"You cannot connect to a new Peer because you called \" +\n        \".disconnect() on this Peer and ended your connection with the \" +\n        \"server. You can create a new Peer to reconnect, or call reconnect \" +\n        \"on this peer if you believe its ID to still be available.\"\n      );\n      this.emitError(\n        PeerErrorType.Disconnected,\n        \"Cannot connect to new Peer after disconnecting from server.\"\n      );\n      return;\n    }\n\n    const dataConnection = new DataConnection(peer, this, options);\n    this._addConnection(peer, dataConnection);\n    return dataConnection;\n  }\n\n  /**\n   * Returns a MediaConnection to the specified peer. See documentation for a\n   * complete list of options.\n   */\n  call(peer: string, stream: MediaStream, options: any = {}): MediaConnection {\n    if (this.disconnected) {\n      logger.warn(\n        \"You cannot connect to a new Peer because you called \" +\n        \".disconnect() on this Peer and ended your connection with the \" +\n        \"server. You can create a new Peer to reconnect.\"\n      );\n      this.emitError(\n        PeerErrorType.Disconnected,\n        \"Cannot connect to new Peer after disconnecting from server.\"\n      );\n      return;\n    }\n\n    if (!stream) {\n      logger.error(\n        \"To call a peer, you must provide a stream from your browser's `getUserMedia`.\"\n      );\n      return;\n    }\n\n    options._stream = stream;\n\n    const mediaConnection = new MediaConnection(peer, this, options);\n    this._addConnection(peer, mediaConnection);\n    return mediaConnection;\n  }\n\n  /** Add a data/media connection to this peer. */\n  private _addConnection(peerId: string, connection: BaseConnection): void {\n    logger.log(\n      `add connection ${connection.type}:${connection.connectionId}\n       to peerId:${peerId}`\n    );\n\n    if (!this._connections.has(peerId)) {\n      this._connections.set(peerId, []);\n    }\n    this._connections.get(peerId).push(connection);\n  }\n\n  //TODO should be private\n  _removeConnection(connection: BaseConnection): void {\n    const connections = this._connections.get(connection.peer);\n\n    if (connections) {\n      const index = connections.indexOf(connection);\n\n      if (index !== -1) {\n        connections.splice(index, 1);\n      }\n    }\n\n    //remove from lost messages\n    this._lostMessages.delete(connection.connectionId);\n  }\n\n  /** Retrieve a data/media connection for this peer. */\n  getConnection(peerId: string, connectionId: string): null | BaseConnection {\n    const connections = this._connections.get(peerId);\n    if (!connections) {\n      return null;\n    }\n\n    for (let connection of connections) {\n      if (connection.connectionId === connectionId) {\n        return connection;\n      }\n    }\n\n    return null;\n  }\n\n  private _delayedAbort(type: PeerErrorType, message): void {\n    setTimeout(() => {\n      this._abort(type, message);\n    }, 0);\n  }\n\n  /**\n   * Destroys the Peer and emits an error message.\n   * The Peer is not destroyed if it's in a disconnected state, in which case\n   * it retains its disconnected state and its existing connections.\n   */\n  private _abort(type: PeerErrorType, message): void {\n    logger.error(\"Aborting!\");\n\n    if (!this._lastServerId) {\n      this.destroy();\n    } else {\n      this.disconnect();\n    }\n\n    this.emitError(type, message);\n  }\n\n  /** Emits a typed error message. */\n  emitError(type: PeerErrorType, err): void {\n    logger.error(\"Error:\", err);\n\n    if (typeof err === \"string\") {\n      err = new Error(err);\n    }\n\n    err.type = type;\n\n    this.emit(PeerEventType.Error, err);\n  }\n\n  /**\n   * Destroys the Peer: closes all active connections as well as the connection\n   *  to the server.\n   * Warning: The peer can no longer create or accept connections after being\n   *  destroyed.\n   */\n  destroy(): void {\n    if (!this.destroyed) {\n      this._cleanup();\n      this.disconnect();\n      this._destroyed = true;\n    }\n  }\n\n  /** Disconnects every connection on this peer. */\n  private _cleanup(): void {\n    for (let peerId of this._connections.keys()) {\n      this._cleanupPeer(peerId);\n      this._connections.delete(peerId);\n    }\n\n    this.emit(PeerEventType.Close);\n  }\n\n  /** Closes all connections to this peer. */\n  private _cleanupPeer(peerId: string): void {\n    const connections = this._connections.get(peerId);\n\n    if (!connections) return;\n\n    for (let connection of connections) {\n      connection.close();\n    }\n  }\n\n  /**\n   * Disconnects the Peer's connection to the PeerServer. Does not close any\n   *  active connections.\n   * Warning: The peer can no longer create or accept connections after being\n   *  disconnected. It also cannot reconnect to the server.\n   */\n  disconnect(): void {\n    setTimeout(() => {\n      if (!this.disconnected) {\n        this._disconnected = true;\n        this._open = false;\n        if (this.socket) {\n          this.socket.close();\n        }\n\n        this.emit(PeerEventType.Disconnected, this.id);\n        this._lastServerId = this.id;\n        this._id = null;\n      }\n    }, 0);\n  }\n\n  /** Attempts to reconnect with the same ID. */\n  reconnect(): void {\n    if (this.disconnected && !this.destroyed) {\n      logger.log(\n        \"Attempting reconnection to server with ID \" + this._lastServerId\n      );\n      this._disconnected = false;\n      this._initializeServerConnection();\n      this._initialize(this._lastServerId);\n    } else if (this.destroyed) {\n      throw new Error(\n        \"This peer cannot reconnect to the server. It has already been destroyed.\"\n      );\n    } else if (!this.disconnected && !this.open) {\n      // Do nothing. We're still connecting the first time.\n      logger.error(\n        \"In a hurry? We're still trying to make the initial connection!\"\n      );\n    } else {\n      throw new Error(\n        \"Peer \" +\n        this.id +\n        \" cannot reconnect because it is not disconnected from the server!\"\n      );\n    }\n  }\n\n  /**\n   * Get a list of available peer IDs. If you're running your own server, you'll\n   * want to set allow_discovery: true in the PeerServer options. If you're using\n   * the cloud server, email team@peerjs.com to get the functionality enabled for\n   * your key.\n   */\n  listAllPeers(cb = (_: any[]) => { }): void {\n    this._api.listAllPeers()\n      .then(peers => cb(peers))\n      .catch(error => this._abort(PeerErrorType.ServerError, error));\n  }\n}\n","import { util } from \"./util\";\nimport { Peer } from \"./peer\";\n\nexport const peerjs = {\n  Peer,\n  util\n};\n\nexport default Peer;\n\n(<any>window).peerjs = peerjs;\n/** @deprecated Should use peerjs namespace */\n(<any>window).Peer = Peer;\n","// Import Peer.js\r\nconsole.log('You are running Kinectron API version 0.3.1');\r\nimport Peer from 'peerjs';\r\n\r\nconst Kinectron = function (arg1, arg2) {\r\n  this.img = null;\r\n  // this.rawDepthImg = null;\r\n  this.feed = null;\r\n  this.body = null;\r\n  this.jointName = null;\r\n\r\n  this.rgbCallback = null; // rgb depricated 3/16/17 use color instead\r\n  this.colorCallback = null;\r\n  this.depthCallback = null;\r\n  this.rawDepthCallback = null;\r\n  this.infraredCallback = null;\r\n  this.leInfraredCallback = null;\r\n  this.bodiesCallback = null;\r\n  this.trackedBodiesCallback = null;\r\n  this.trackedJointCallback = null;\r\n  this.keyCallback = null;\r\n  this.rgbdCallback = null;\r\n  this.fhCallback = null;\r\n  this.multiFrameCallback = null;\r\n\r\n  // Joint Name Constants\r\n  this.SPINEBASE = 0;\r\n  this.SPINEMID = 1;\r\n  this.NECK = 2;\r\n  this.HEAD = 3;\r\n  this.SHOULDERLEFT = 4;\r\n  this.ELBOWLEFT = 5;\r\n  this.WRISTLEFT = 6;\r\n  this.HANDLEFT = 7;\r\n  this.SHOULDERRIGHT = 8;\r\n  this.ELBOWRIGHT = 9;\r\n  this.WRISTRIGHT = 10;\r\n  this.HANDRIGHT = 11;\r\n  this.HIPLEFT = 12;\r\n  this.KNEELEFT = 13;\r\n  this.ANKLELEFT = 14;\r\n  this.FOOTLEFT = 15;\r\n  this.HIPRIGHT = 16;\r\n  this.KNEERIGHT = 17;\r\n  this.ANKLERIGHT = 18;\r\n  this.FOOTRIGHT = 19;\r\n  this.SPINESHOULDER = 20;\r\n  this.HANDTIPLEFT = 21;\r\n  this.THUMBLEFT = 22;\r\n  this.HANDTIPRIGHT = 23;\r\n  this.THUMBRIGHT = 24;\r\n\r\n  const WINDOWSCOLORWIDTH = 960;\r\n  const WINDOWSCOLORHEIGHT = 540;\r\n\r\n  const WINDOWSDEPTHWIDTH = 512;\r\n  const WINDOWSDEPTHHEIGHT = 424;\r\n\r\n  const WINDOWSRAWWIDTH = 512;\r\n  const WINDOWSRAWHEIGHT = 424;\r\n\r\n  // azure resolutions at\r\n  // https://docs.microsoft.com/en-us/azure/kinect-dk/hardware-specification\r\n  const AZURECOLORWIDTH = 1280;\r\n  const AZURECOLORHEIGHT = 720;\r\n\r\n  const AZUREDEPTHWIDTH = 640;\r\n  const AZUREDEPTHHEIGHT = 576;\r\n\r\n  const AZURERAWWIDTH = 640 / 2;\r\n  const AZURERAWHEIGHT = 576 / 2;\r\n\r\n  let colorwidth;\r\n  let colorheight;\r\n\r\n  let depthwidth;\r\n  let depthheight;\r\n\r\n  let rawdepthwidth;\r\n  let rawdepthheight;\r\n\r\n  let whichKinect = null;\r\n\r\n  // Processing raw depth indicator\r\n  var busy = false;\r\n\r\n  // Running multiframe indicator\r\n  var multiFrame = false;\r\n  var currentFrames = [];\r\n\r\n  // Hold initital frame request until peer connection ready\r\n  var ready = false;\r\n  var holdInitFeed = null;\r\n\r\n  // Peer variables and defaults\r\n  let peer = null;\r\n  let connection = null;\r\n  let peerNet = { host: 'localhost', port: 9001, path: '/' }; // Connect to localhost by default\r\n  let peerId = 'kinectron'; // Connect to peer Id Kinectron by default\r\n\r\n  // Hidden div variables\r\n  var myDiv = null;\r\n\r\n  // Record variables\r\n  var doRecord = false;\r\n  var recordStartTime = 0;\r\n  var bodyChunks = [];\r\n  var rawDepthChunks = [];\r\n  var mediaRecorders = [];\r\n\r\n  // Debug timer variables\r\n  let timer = false;\r\n  let timeCounter = 0;\r\n  let sendCounter = 0;\r\n\r\n  // Check for ip address in \"quickstart\" method\r\n  if (typeof arg1 !== 'undefined' && typeof arg2 == 'undefined') {\r\n    var host = arg1;\r\n    peerNet.host = host;\r\n\r\n    // Check for new network provided by user\r\n  } else if (\r\n    typeof arg1 !== 'undefined' &&\r\n    typeof arg2 !== 'undefined'\r\n  ) {\r\n    var peerid = arg1;\r\n    var network = arg2;\r\n    peerId = peerid;\r\n    peerNet = network;\r\n  }\r\n\r\n  // Create new peer\r\n  peer = new Peer(peerNet);\r\n\r\n  peer.on('open', function (id) {\r\n    console.log('My peer ID is: ' + id);\r\n  });\r\n\r\n  peer.on('connection', function (connection) {\r\n    connection.on('open', function () {\r\n      console.log('Peer js is connected');\r\n    });\r\n  });\r\n\r\n  // Create hidden image to draw to\r\n  myDiv = document.createElement('div');\r\n  myDiv.style.visibility = 'hidden';\r\n  myDiv.style.position = 'fixed';\r\n  myDiv.style.bottom = '0';\r\n  document.body.appendChild(myDiv);\r\n\r\n  this.img = document.createElement('img');\r\n  myDiv.appendChild(this.img);\r\n\r\n  // Used for raw depth processing.\r\n  // TO DO refactor: create dynamically in process raw depth\r\n  const hiddenCanvas = document.createElement('canvas');\r\n  const hiddenContext = hiddenCanvas.getContext('2d');\r\n  const hiddenImage = document.createElement('img');\r\n\r\n  myDiv.appendChild(hiddenCanvas);\r\n  myDiv.appendChild(hiddenImage);\r\n\r\n  this._initHiddenCanvas = function () {\r\n    hiddenCanvas.width = rawdepthwidth;\r\n    hiddenCanvas.height = rawdepthheight;\r\n    hiddenContext.fillRect(\r\n      0,\r\n      0,\r\n      hiddenCanvas.width,\r\n      hiddenCanvas.height,\r\n    );\r\n    hiddenImage.addEventListener('load', (e) => {\r\n      // hiddenContext.clearRect(\r\n      //   0,\r\n      //   0,\r\n      //   hiddenContext.canvas.width,\r\n      //   hiddenContext.canvas.height\r\n      // );\r\n      hiddenContext.drawImage(\r\n        hiddenImage,\r\n        0,\r\n        0,\r\n        hiddenCanvas.width, // can use hiddonCanvas.width directly?\r\n        hiddenCanvas.height,\r\n      );\r\n    });\r\n  };\r\n\r\n  // Make peer connection\r\n  this.makeConnection = function () {\r\n    connection = peer.connect(peerId); // get a webrtc DataConnection\r\n    connection.on('open', function (data) {\r\n      console.log('Open data connection with server');\r\n    });\r\n\r\n    // Route incoming traffic from Kinectron\r\n    connection.on(\r\n      'data',\r\n      function (dataReceived) {\r\n        const { data, event } = dataReceived;\r\n\r\n        console.log(data);\r\n\r\n        // if (evt === 'frame') {\r\n        // if (evt === \"rawDepth\") {\r\n        if (timer === false) {\r\n          timer = true;\r\n          timeCounter = Date.now();\r\n        }\r\n        if (Date.now() > timeCounter + 1000) {\r\n          console.log('resetting. last count: ', sendCounter);\r\n          timer = false;\r\n          sendCounter = 0;\r\n        } else {\r\n          sendCounter++; // count how many times we send in 1 second\r\n        }\r\n\r\n        // console.log(roughSizeOfObject(data));\r\n        // }\r\n        switch (event) {\r\n          // Wait for ready from Kinectron to initialize\r\n\r\n          case 'ready':\r\n            // if kinect set by server and kinect set by API\r\n            // give precedence to the server\r\n            // let the user know\r\n            if (data.kinect && whichKinect !== null) {\r\n              if (whichKinect !== data.kinect) {\r\n                whichKinect = data.kinect;\r\n                console.warn(\r\n                  `The Kinect server set the Kinect type to ${whichKinect}`,\r\n                );\r\n              }\r\n            }\r\n\r\n            // if kinect set by api and blank on server\r\n            // set it on server\r\n            if (\r\n              Object.entries(data).length === 0 &&\r\n              data.constructor === Object &&\r\n              whichKinect\r\n            ) {\r\n              this._setKinectOnServer(whichKinect);\r\n              console.log(`The Kinect type is set to ${whichKinect}`);\r\n            }\r\n\r\n            // if kinect set by server, set the same in api\r\n            if (data.kinect && whichKinect === null) {\r\n              whichKinect = data.kinect;\r\n\r\n              this._setKinect(whichKinect);\r\n              console.log(`The Kinect type is set to ${whichKinect}`);\r\n            }\r\n\r\n            if (whichKinect) {\r\n              ready = true;\r\n              this._initHiddenCanvas(); // init hidden canvas after global img dimensions set\r\n\r\n              if (holdInitFeed) {\r\n                connection.send(holdInitFeed);\r\n                holdInitFeed = null;\r\n              }\r\n            } else {\r\n              console.error(\r\n                \"Kinectron cannot start. Kinect type must be set to 'azure' or 'windows' on server or API.\",\r\n              );\r\n            }\r\n\r\n            break;\r\n\r\n          // If image data draw image\r\n          case 'frame':\r\n            this.img.src = data.imagedata;\r\n\r\n            this.img.onload = function () {\r\n              this._chooseCallback(data.name);\r\n\r\n              if (doRecord) this._drawImageToCanvas(data.name);\r\n            }.bind(this);\r\n\r\n            break;\r\n\r\n          // If receive all bodies, send all bodies\r\n          case 'bodyFrame':\r\n            this.bodiesCallback(data);\r\n\r\n            if (doRecord) {\r\n              data.record_startime = recordStartTime;\r\n              data.record_timestamp = Date.now() - recordStartTime;\r\n              bodyChunks.push(data);\r\n            }\r\n            break;\r\n\r\n          // If receive tracked skeleton data, send skeleton\r\n          case 'trackedBodyFrame':\r\n            this.body = data;\r\n\r\n            // If joint specified send joint and call joint callback\r\n            if (\r\n              this.jointName &&\r\n              this.trackedJointCallback &&\r\n              this.body.joints[this.jointName] !== 0\r\n            ) {\r\n              var joint = this.body.joints[this.jointName];\r\n              joint.trackingId = this.body.trackingId;\r\n              this.trackedJointCallback(joint);\r\n\r\n              if (doRecord) {\r\n                joint.record_startime = recordStartTime;\r\n                joint.record_timestamp = Date.now() - recordStartTime;\r\n                bodyChunks.push(joint);\r\n              }\r\n              // Or call tracked bodies callback on invidual tracked body\r\n            } else if (this.trackedBodiesCallback) {\r\n              this.trackedBodiesCallback(data);\r\n\r\n              if (doRecord) {\r\n                data.record_startime = recordStartTime;\r\n                data.record_timestamp = Date.now() - recordStartTime;\r\n                bodyChunks.push(data);\r\n              }\r\n            }\r\n            break;\r\n\r\n          // If floor height, draw left hand and height\r\n          case 'floorHeightTracker':\r\n            this.fhCallback(data);\r\n            break;\r\n\r\n          case 'rawDepth':\r\n            let processedData = this._processRawDepth(data.imagedata);\r\n            this.rawDepthCallback(processedData);\r\n\r\n            if (doRecord) {\r\n              var recordedData = {};\r\n              recordedData.data = processedData;\r\n              recordedData.record_startime = recordStartTime;\r\n              recordedData.record_timestamp =\r\n                Date.now() - recordStartTime;\r\n              rawDepthChunks.push(recordedData);\r\n            }\r\n\r\n            break;\r\n\r\n          case 'multiFrame':\r\n            if (data.rawDepth) {\r\n              let processedRawDepthData = this._processRawDepth(\r\n                data.rawDepth,\r\n              );\r\n              data.rawDepth = processedRawDepthData;\r\n            }\r\n\r\n            if (this.multiFrameCallback) {\r\n              this.multiFrameCallback(data);\r\n\r\n              if (doRecord) {\r\n                if (data.color) {\r\n                  let newImg = new Image(\r\n                    WINDOWSCOLORHEIGHT,\r\n                    WINDOWSCOLORWIDTH,\r\n                  );\r\n\r\n                  newImg.src = data.color;\r\n\r\n                  newImg.onload = function () {\r\n                    this.colorCallback(newImg);\r\n\r\n                    if (doRecord)\r\n                      this._drawImageToCanvas('color', newImg);\r\n                  }.bind(this);\r\n                }\r\n\r\n                if (data.depth) {\r\n                  let newImg = new Image(\r\n                    WINDOWSDEPTHWIDTH,\r\n                    WINDOWSDEPTHHEIGHT,\r\n                  );\r\n\r\n                  newImg.src = data.depth;\r\n\r\n                  newImg.onload = function () {\r\n                    this.depthCallback(newImg);\r\n\r\n                    if (doRecord)\r\n                      this._drawImageToCanvas('depth', newImg);\r\n                  }.bind(this);\r\n                }\r\n\r\n                if (data.body) {\r\n                  data.body.record_startime = recordStartTime;\r\n                  data.body.record_timestamp =\r\n                    Date.now() - recordStartTime;\r\n                  bodyChunks.push(data.body);\r\n                }\r\n\r\n                if (data.rawDepth) {\r\n                  var recordedData2 = {};\r\n                  recordedData2.data = data.rawDepth;\r\n                  recordedData2.record_startime = recordStartTime;\r\n                  recordedData2.record_timestamp =\r\n                    Date.now() - recordStartTime;\r\n                  rawDepthChunks.push(recordedData2);\r\n                }\r\n              }\r\n            } else {\r\n              if (data.color) {\r\n                let clrImg = new Image(\r\n                  WINDOWSCOLORHEIGHT,\r\n                  WINDOWSCOLORWIDTH,\r\n                );\r\n\r\n                clrImg.src = data.color;\r\n\r\n                clrImg.onload = function () {\r\n                  this.colorCallback(clrImg);\r\n\r\n                  if (doRecord)\r\n                    this._drawImageToCanvas('color', clrImg);\r\n                }.bind(this);\r\n              }\r\n\r\n              if (data.depth) {\r\n                let depthImg = new Image(\r\n                  WINDOWSDEPTHWIDTH,\r\n                  WINDOWSDEPTHHEIGHT,\r\n                );\r\n\r\n                depthImg.src = data.depth;\r\n\r\n                depthImg.onload = function () {\r\n                  this.depthCallback(depthImg);\r\n\r\n                  if (doRecord)\r\n                    this._drawImageToCanvas('depth', depthImg);\r\n                }.bind(this);\r\n              }\r\n\r\n              if (data.body) {\r\n                this.bodiesCallback(data.body);\r\n\r\n                if (doRecord) {\r\n                  data.body.record_startime = recordStartTime;\r\n                  data.body.record_timestamp =\r\n                    Date.now() - recordStartTime;\r\n                  bodyChunks.push(data.body);\r\n                }\r\n              }\r\n\r\n              if (data.rawDepth) {\r\n                this.rawDepthCallback(data.rawDepth);\r\n\r\n                if (doRecord) {\r\n                  var recordedData3 = {};\r\n                  recordedData3.data = data.rawDepth;\r\n                  recordedData3.record_startime = recordStartTime;\r\n                  recordedData3.record_timestamp =\r\n                    Date.now() - recordStartTime;\r\n                  rawDepthChunks.push(recordedData3);\r\n                }\r\n              }\r\n            }\r\n            break;\r\n        }\r\n      }.bind(this),\r\n    );\r\n  };\r\n\r\n  this.setKinectType = function (kinectType) {\r\n    this._setKinect(kinectType);\r\n  };\r\n\r\n  // Changed RGB to Color to be consistent with SDK, RGB depricated 3/16/17\r\n  this.startRGB = function (callback) {\r\n    console.warn('startRGB no longer in use. Use startColor instead');\r\n    if (callback) {\r\n      this.colorCallback = callback;\r\n    }\r\n\r\n    this._setFeed('color');\r\n  };\r\n\r\n  this.startColor = function (callback) {\r\n    if (callback) {\r\n      this.colorCallback = callback;\r\n    }\r\n    this._setFeed('color');\r\n  };\r\n\r\n  this.startDepth = function (callback) {\r\n    if (callback) {\r\n      this.depthCallback = callback;\r\n    }\r\n\r\n    this._setFeed('depth');\r\n  };\r\n\r\n  this.startRawDepth = function (callback) {\r\n    if (callback) {\r\n      this.rawDepthCallback = callback;\r\n    }\r\n\r\n    this._setFeed('raw-depth');\r\n  };\r\n\r\n  this.startInfrared = function (callback) {\r\n    if (callback) {\r\n      this.infraredCallback = callback;\r\n    }\r\n\r\n    this._setFeed('infrared');\r\n  };\r\n\r\n  this.startLEInfrared = function (callback) {\r\n    if (callback) {\r\n      this.leInfraredCallback = callback;\r\n    }\r\n\r\n    this._setFeed('le-infrared');\r\n  };\r\n\r\n  this.startBodies = function (callback) {\r\n    if (callback) {\r\n      this.bodiesCallback = callback;\r\n    }\r\n\r\n    this._setFeed('body');\r\n  };\r\n\r\n  this.startTrackedBodies = function (callback) {\r\n    if (callback) {\r\n      this.trackedBodiesCallback = callback;\r\n    }\r\n\r\n    // Reset tracked joint variables\r\n    this.jointName = null;\r\n    this.trackedJointCallback = null;\r\n\r\n    this._setFeed('skeleton');\r\n  };\r\n\r\n  this.startTrackedJoint = function (jointName, callback) {\r\n    if (typeof jointName == 'undefined') {\r\n      console.warn('Joint name does not exist.');\r\n      return;\r\n    }\r\n\r\n    if (jointName && callback) {\r\n      this.jointName = jointName;\r\n      this.trackedJointCallback = callback;\r\n    }\r\n\r\n    this._setFeed('skeleton');\r\n  };\r\n\r\n  this.startMultiFrame = function (frames, callback) {\r\n    if (typeof callback !== 'undefined') {\r\n      this.multiFrameCallback = callback;\r\n    } else if (typeof callback == 'undefined') {\r\n      this.multiFrameCallback = null;\r\n    }\r\n\r\n    multiFrame = true;\r\n    currentFrames = frames;\r\n\r\n    this._sendToPeer('multi', frames);\r\n  };\r\n\r\n  this.startKey = function (callback) {\r\n    if (callback) {\r\n      this.keyCallback = callback;\r\n    }\r\n\r\n    this._setFeed('key');\r\n  };\r\n\r\n  this.startRGBD = function (callback) {\r\n    if (callback) {\r\n      this.rgbdCallback = callback;\r\n    }\r\n\r\n    this._setFeed('rgbd');\r\n  };\r\n\r\n  // this.startScale = function(callback) {\r\n  //   this.callback = callback;\r\n  //   this._setFeed('scale');\r\n  // };\r\n\r\n  // this.startFloorHeight = function(callback) {\r\n  //   if (callback) {\r\n  //     this.fhCallback = callback;\r\n  //   }\r\n\r\n  //   this._setFeed('fh-joint');\r\n  // };\r\n\r\n  // Stop all feeds\r\n  this.stopAll = function () {\r\n    this._setFeed('stop-all');\r\n  };\r\n\r\n  // Set Callbacks\r\n\r\n  // Changed RGB to Color to be consistent with SDK, RGB depricated 3/16/17\r\n  this.setRGBCallback = function (callback) {\r\n    console.warn(\r\n      'setRGBCallback no longer in use. Use setColorCallback instead',\r\n    );\r\n    this.colorCallback = callback;\r\n  };\r\n\r\n  this.setColorCallback = function (callback) {\r\n    this.colorCallback = callback;\r\n  };\r\n\r\n  this.setDepthCallback = function (callback) {\r\n    this.depthCallback = callback;\r\n  };\r\n\r\n  this.setRawDepthCallback = function (callback) {\r\n    this.rawDepthCallback = callback;\r\n  };\r\n\r\n  this.setInfraredCallback = function (callback) {\r\n    this.infraredCallback = callback;\r\n  };\r\n\r\n  this.setLeInfraredCallback = function (callback) {\r\n    this.leInfraredCallback = callback;\r\n  };\r\n\r\n  this.setBodiesCallback = function (callback) {\r\n    this.bodiesCallback = callback;\r\n  };\r\n\r\n  this.setTrackedBodiesCallback = function (callback) {\r\n    this.trackedBodiesCallback = callback;\r\n  };\r\n\r\n  this.setKeyCallback = function (callback) {\r\n    this.keyCallback = callback;\r\n  };\r\n\r\n  this.setRGBDCallback = function (callback) {\r\n    this.rgbdCallback = callback;\r\n  };\r\n\r\n  this.setFhCallback = function (callback) {\r\n    this.fhCallback = callback;\r\n  };\r\n\r\n  this.setMultiFrameCallback = function (callback) {\r\n    this.multiFrameCallback = callback;\r\n  };\r\n\r\n  this.getJoints = function (callback) {\r\n    let jointCallback = callback;\r\n\r\n    if (whichKinect === 'azure') {\r\n      let joints = this.body.skeleton.joints;\r\n\r\n      for (let i = 0; i < joints.length; i++) {\r\n        let joint = joints[i];\r\n        jointCallback(joint);\r\n      }\r\n    } else {\r\n      // for kinect windows\r\n      for (let jointType in this.body.joints) {\r\n        let joint = this.body.joints[jointType];\r\n        jointCallback(joint);\r\n      }\r\n    }\r\n  };\r\n\r\n  this.getHands = function (callback) {\r\n    let handCallback = callback;\r\n    let leftHand;\r\n    let rightHand;\r\n    let leftHandState;\r\n    let rightHandState;\r\n\r\n    if (whichKinect === 'azure') {\r\n      leftHand = this.body.skeleton.joints[8];\r\n      rightHand = this.body.skeleton.joints[15];\r\n      leftHandState = null; // azure kinect doesn't track handstates\r\n      rightHandState = null; // azure kinect doesn't track handstates\r\n    } else {\r\n      // for kinect windows\r\n      leftHand = this.body.joints[7];\r\n      rightHand = this.body.joints[11];\r\n      leftHandState = this._getHandState(this.body.leftHandState);\r\n      rightHandState = this._getHandState(this.body.rightHandState);\r\n    }\r\n\r\n    let hands = {\r\n      leftHand: leftHand,\r\n      rightHand: rightHand,\r\n      leftHandState: leftHandState,\r\n      rightHandState: rightHandState,\r\n    };\r\n\r\n    handCallback(hands);\r\n  };\r\n\r\n  this.startRecord = function () {\r\n    console.log('Starting record');\r\n    this._record();\r\n  };\r\n\r\n  this.stopRecord = function () {\r\n    console.log('Ending record');\r\n    this._record();\r\n  };\r\n\r\n  this.startServerRecord = function () {\r\n    console.log('Starting recording on your server');\r\n    this._sendToPeer('record', 'start');\r\n  };\r\n\r\n  this.stopServerRecord = function () {\r\n    console.log('Ending recording on your server');\r\n    this._sendToPeer('record', 'stop');\r\n  };\r\n\r\n  // Private functions //\r\n  this._setKinect = function (kinectType) {\r\n    whichKinect = kinectType;\r\n    this._setCanvasDimensions(kinectType);\r\n  };\r\n\r\n  this._setKinectOnServer = function (kinectType) {\r\n    this._sendToPeer('setkinect', kinectType);\r\n  };\r\n\r\n  this._setCanvasDimensions = function (kinectType) {\r\n    if (kinectType === 'azure') {\r\n      colorwidth = AZURECOLORWIDTH;\r\n      colorheight = AZURECOLORHEIGHT;\r\n\r\n      depthwidth = AZUREDEPTHWIDTH;\r\n      depthheight = AZUREDEPTHHEIGHT;\r\n\r\n      rawdepthwidth = AZURERAWWIDTH;\r\n      rawdepthheight = AZURERAWHEIGHT;\r\n    } else if (kinectType === 'windows') {\r\n      colorwidth = WINDOWSCOLORWIDTH;\r\n      colorheight = WINDOWSCOLORHEIGHT;\r\n\r\n      depthwidth = WINDOWSDEPTHWIDTH;\r\n      depthheight = WINDOWSDEPTHHEIGHT;\r\n\r\n      rawdepthwidth = WINDOWSRAWWIDTH;\r\n      rawdepthheight = WINDOWSRAWHEIGHT;\r\n    }\r\n  };\r\n\r\n  // Change feed on user input\r\n  this._setFeed = function (feed) {\r\n    var dataToSend = null;\r\n    this.feed = feed;\r\n    dataToSend = {\r\n      feed: this.feed,\r\n    };\r\n\r\n    // Reset multiframe\r\n    multiFrame = false;\r\n\r\n    this._sendToPeer('feed', dataToSend);\r\n  };\r\n\r\n  // Send data to peer\r\n  this._sendToPeer = function (evt, data) {\r\n    var dataToSend = {\r\n      event: evt,\r\n      data: data,\r\n    };\r\n\r\n    // If connection not ready, wait for connection\r\n    // but allow \"setkinect message to pass\"\r\n    if (!ready && dataToSend.event !== 'setkinect') {\r\n      holdInitFeed = dataToSend;\r\n      return;\r\n    }\r\n    connection.send(dataToSend);\r\n  };\r\n\r\n  // Choose callback for image-based frames\r\n  this._chooseCallback = function (frame) {\r\n    switch (frame) {\r\n      case 'color':\r\n        this.colorCallback(this.img);\r\n        break;\r\n\r\n      case 'depth':\r\n        this.depthCallback(this.img);\r\n        break;\r\n\r\n      case 'infrared':\r\n        this.infraredCallback(this.img);\r\n        break;\r\n\r\n      case 'LEinfrared':\r\n        this.leInfraredCallback(this.img);\r\n        break;\r\n\r\n      case 'key':\r\n        this.keyCallback(this.img);\r\n        break;\r\n\r\n      case 'rgbd':\r\n        this.rgbdCallback(this.img);\r\n        break;\r\n    }\r\n  };\r\n\r\n  // Make handstate more readable\r\n  this._getHandState = function (handState) {\r\n    switch (handState) {\r\n      case 0:\r\n        return 'unknown';\r\n\r\n      case 1:\r\n        return 'notTracked';\r\n\r\n      case 2:\r\n        return 'open';\r\n\r\n      case 3:\r\n        return 'closed';\r\n\r\n      case 4:\r\n        return 'lasso';\r\n    }\r\n  };\r\n\r\n  // this._initRawDepth = function() {\r\n  //   this.rawDepthImg = new Image();\r\n  //   this.rawDepthImg.addEventListener(\"load\", e => {\r\n  //     // hiddenContext.clearRect(\r\n  //     //   0,\r\n  //     //   0,\r\n  //     //   hiddenContext.canvas.width,\r\n  //     //   hiddenContext.canvas.height\r\n  //     // );\r\n  //     hiddenContext.drawImage(\r\n  //       this.rawDepthImg,\r\n  //       0,\r\n  //       0,\r\n  //       hiddenContext.canvas.width,\r\n  //       hiddenContext.canvas.height\r\n  //     );\r\n  //   });\r\n  // };\r\n\r\n  this._processRawDepth = function (data) {\r\n    if (busy) return;\r\n    busy = true;\r\n\r\n    let imageData;\r\n    let depthBuffer;\r\n    let processedData = [];\r\n\r\n    hiddenImage.src = data;\r\n\r\n    imageData = hiddenContext.getImageData(\r\n      0,\r\n      0,\r\n      hiddenContext.canvas.width,\r\n      hiddenContext.canvas.height,\r\n    );\r\n\r\n    for (let i = 0; i < imageData.data.length; i += 4) {\r\n      let depth = (imageData.data[i + 1] << 8) + imageData.data[i]; //get uint16 data from buffer\r\n      processedData.push(depth);\r\n    }\r\n\r\n    busy = false;\r\n    return processedData;\r\n  };\r\n\r\n  // Toggle Recording\r\n  this._record = function () {\r\n    if (!doRecord) {\r\n      // If no feed started, send warning and return\r\n      if (\r\n        (multiFrame === false && this.feed === null) ||\r\n        this.feed === 'stop-all'\r\n      ) {\r\n        console.warn('Record does not work until a feed is started');\r\n        return;\r\n      }\r\n\r\n      let framesToRecord = [];\r\n\r\n      // How many recorders needed\r\n      if (multiFrame) {\r\n        for (let i = 0; i < currentFrames.length; i++) {\r\n          framesToRecord.push(currentFrames[i]);\r\n        }\r\n      } else {\r\n        framesToRecord.push(this.feed);\r\n      }\r\n\r\n      // Create one media recorder for each feed\r\n      for (let j = 0; j < framesToRecord.length; j++) {\r\n        mediaRecorders.push(\r\n          this._createMediaRecorder(framesToRecord[j]),\r\n        );\r\n      }\r\n\r\n      recordStartTime = Date.now();\r\n      doRecord = true;\r\n    } else {\r\n      doRecord = false;\r\n\r\n      // Stop all mediarecorders and remove them from array\r\n      for (let k = mediaRecorders.length - 1; k >= 0; k--) {\r\n        mediaRecorders[k].stop();\r\n        mediaRecorders.splice(k, 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  this._drawImageToCanvas = function (frame, img) {\r\n    let tempContext;\r\n\r\n    // Look through media recorders for the correct canvas to draw to\r\n    for (let k = 0; k < mediaRecorders.length; k++) {\r\n      let id = mediaRecorders[k].canvas.id;\r\n      if (id.indexOf(frame) >= 0) {\r\n        tempContext = mediaRecorders[k].canvas.getContext('2d');\r\n      }\r\n    }\r\n\r\n    // Draw to the appropriate canvas\r\n    tempContext.clearRect(\r\n      0,\r\n      0,\r\n      tempContext.canvas.width,\r\n      tempContext.canvas.height,\r\n    );\r\n    tempContext.drawImage(img, 0, 0);\r\n  };\r\n\r\n  this._createMediaRecorder = function (frame) {\r\n    let newMediaRecorder;\r\n\r\n    // Create hidden canvas to draw to\r\n    let newHiddenCanvas = document.createElement('canvas');\r\n    newHiddenCanvas.setAttribute('id', frame + Date.now());\r\n\r\n    if (frame == 'color' || frame == 'key') {\r\n      newHiddenCanvas.width = colorwidth;\r\n      newHiddenCanvas.height = colorheight;\r\n    } else {\r\n      newHiddenCanvas.width = depthwidth;\r\n      newHiddenCanvas.height = depthheight;\r\n    }\r\n\r\n    let newHiddenContext = hiddenCanvas.getContext('2d');\r\n    newHiddenContext.fillRect(\r\n      0,\r\n      0,\r\n      newHiddenCanvas.width,\r\n      newHiddenCanvas.height,\r\n    );\r\n\r\n    // Add canvas to hidden div\r\n    myDiv.appendChild(newHiddenCanvas);\r\n\r\n    // Create media recorder, add canvas to recorder\r\n    newMediaRecorder = new MediaRecorder(\r\n      newHiddenCanvas.captureStream(),\r\n    );\r\n    newMediaRecorder.canvas = newHiddenCanvas;\r\n\r\n    let mediaChunks = [];\r\n\r\n    newMediaRecorder.onstop = function (e) {\r\n      // If skeleton data is being tracked, write out the body frames to JSON\r\n      if (frame == 'body' || frame == 'skeleton') {\r\n        let blobJson = new Blob([JSON.stringify(bodyChunks)], {\r\n          type: 'application/json',\r\n        });\r\n        let jsonUrl = URL.createObjectURL(blobJson);\r\n        let a2 = document.createElement('a');\r\n        document.body.appendChild(a2);\r\n        a2.style = 'display: none';\r\n        a2.href = jsonUrl;\r\n        a2.download = frame + Date.now() + '.json';\r\n        a2.click();\r\n        window.URL.revokeObjectURL(jsonUrl);\r\n\r\n        // Reset body chunks\r\n        bodyChunks.length = 0;\r\n\r\n        // If raw depth data tracked, write out to JSON\r\n      } else if (frame == 'raw-depth') {\r\n        let blobJsonRd = new Blob([JSON.stringify(rawDepthChunks)], {\r\n          type: 'application/json',\r\n        });\r\n        let jsonRdUrl = URL.createObjectURL(blobJsonRd);\r\n        let a3 = document.createElement('a');\r\n        document.body.appendChild(a3);\r\n        a3.style = 'display: none';\r\n        a3.href = jsonRdUrl;\r\n        a3.download = frame + Date.now() + '.json';\r\n        a3.click();\r\n        window.URL.revokeObjectURL(jsonRdUrl);\r\n\r\n        // Reset body chunks\r\n        rawDepthChunks.length = 0;\r\n\r\n        // If video display the video on the page\r\n      } else {\r\n        // The video as a blob\r\n        let blobVideo = new Blob(mediaChunks, { type: 'video/webm' });\r\n\r\n        // Draw video to screen\r\n        // let videoElement = document.createElement('video');\r\n        // videoElement.setAttribute(\"id\", Date.now());\r\n        // videoElement.controls = true;\r\n        // document.body.appendChild(videoElement);\r\n        // videoElement.src = window.URL.createObjectURL(blobVideo);\r\n\r\n        // Download the video\r\n        let url = URL.createObjectURL(blobVideo);\r\n        let a = document.createElement('a');\r\n        document.body.appendChild(a);\r\n        a.style = 'display: none';\r\n        a.href = url;\r\n        a.download = frame + Date.now() + '.webm';\r\n        a.click();\r\n        window.URL.revokeObjectURL(url);\r\n\r\n        // Reset media chunks\r\n        mediaChunks.length = 0;\r\n      }\r\n    }.bind(this);\r\n\r\n    // When video data is available\r\n    newMediaRecorder.ondataavailable = function (e) {\r\n      mediaChunks.push(e.data);\r\n    };\r\n\r\n    // Start recording\r\n    newMediaRecorder.start();\r\n    return newMediaRecorder;\r\n  };\r\n};\r\n\r\nwindow.Kinectron = Kinectron;\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}